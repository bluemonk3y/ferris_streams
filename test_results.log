   Compiling ferrisstreams v0.1.0 (/Users/mktxmac-navery/RustroverProjects/ferris_streams)
warning: unused variable: `table_name`
   --> src/ferris/sql/query_analyzer.rs:211:9
    |
211 |         table_name: &str,
    |         ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_table_name`
    |
    = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `config`
   --> src/ferris/sql/query_analyzer.rs:212:9
    |
212 |         config: &HashMap<String, String>,
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `analysis`
   --> src/ferris/sql/query_analyzer.rs:214:9
    |
214 |         analysis: &mut QueryAnalysis,
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analysis`

warning: field `property_inheritance` is never read
   --> src/ferris/config/schema_registry.rs:207:5
    |
197 | pub struct HierarchicalSchemaRegistry {
    |            -------------------------- field in this struct
...
207 |     property_inheritance: HashMap<String, PropertyInheritanceNode>,
    |     ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: methods `validate_extends_file_exists`, `validate_property_inheritance_rules`, `matches_pattern`, and `validate_env_var_value` are never used
   --> src/ferris/config/schema_registry.rs:653:8
    |
513 | impl HierarchicalSchemaRegistry {
    | ------------------------------- methods in this implementation
...
653 |     fn validate_extends_file_exists(&self, extends_file: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
685 |     fn validate_property_inheritance_rules(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
751 |     fn matches_pattern(&self, pattern: &str, text: &str) -> bool {
    |        ^^^^^^^^^^^^^^^
...
769 |     fn validate_env_var_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: fields `path`, `writer`, `bytes_written`, `records_written`, `created_at`, and `last_rotation` are never read
  --> src/ferris/datasource/file/sink.rs:47:5
   |
46 | pub struct FileWriterState {
   |            --------------- fields in this struct
47 |     path: PathBuf,
   |     ^^^^
48 |     writer: File,
   |     ^^^^^^
49 |     bytes_written: u64,
   |     ^^^^^^^^^^^^^
50 |     records_written: u64,
   |     ^^^^^^^^^^^^^^^
51 |     created_at: SystemTime,
   |     ^^^^^^^^^^
52 |     last_rotation: SystemTime,
   |     ^^^^^^^^^^^^^

warning: method `needs_rotation` is never used
   --> src/ferris/datasource/file/sink.rs:148:8
    |
55  | impl FileSink {
    | ------------- method in this implementation
...
148 |     fn needs_rotation(&self, writer_state: &FileWriterState, config: &FileSinkConfig) -> bool {
    |        ^^^^^^^^^^^^^^

warning: fields `created_at` and `active_writers` are never read
   --> src/ferris/datasource/file/sink.rs:434:5
    |
425 | pub struct FileWriter {
    |            ---------- fields in this struct
...
434 |     created_at: SystemTime,
    |     ^^^^^^^^^^
435 |     last_rotation: SystemTime,
436 |     active_writers: Arc<Mutex<Vec<FileWriterState>>>,
    |     ^^^^^^^^^^^^^^

warning: methods `apply_batch_config_to_producer` and `log_producer_config` are never used
   --> src/ferris/datasource/kafka/data_sink.rs:106:8
    |
24  | impl KafkaDataSink {
    | ------------------ methods in this implementation
...
106 |     fn apply_batch_config_to_producer(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
206 |     fn log_producer_config(
    |        ^^^^^^^^^^^^^^^^^^^

warning: trait `KafkaConsumable` is never used
   --> src/ferris/kafka/kafka_consumer.rs:513:11
    |
513 | pub trait KafkaConsumable<K, KS, VS>: Sized
    |           ^^^^^^^^^^^^^^^

warning: associated function `consumer_builder` is never used
   --> src/ferris/kafka/kafka_consumer.rs:529:8
    |
513 | pub trait KafkaConsumable<K, KS, VS>: Sized
    |           --------------- associated function in this trait
...
529 |     fn consumer_builder(
    |        ^^^^^^^^^^^^^^^^

warning: field `reference_resolver` is never read
  --> src/ferris/schema/client/registry_client.rs:19:5
   |
15 | pub struct SchemaRegistryClient {
   |            -------------------- field in this struct
...
19 |     reference_resolver: Option<Arc<SchemaReferenceResolver>>,
   |     ^^^^^^^^^^^^^^^^^^

warning: fields `dependency_graphs`, `reference_index`, and `config` are never read
   --> src/ferris/schema/client/registry_client.rs:113:5
    |
109 | pub struct SchemaCache {
    |            ----------- fields in this struct
...
113 |     dependency_graphs: HashMap<u32, DependencyGraph>,
    |     ^^^^^^^^^^^^^^^^^
114 |     reference_index: HashMap<String, std::collections::HashSet<u32>>,
    |     ^^^^^^^^^^^^^^^
115 |     resolution_cache: HashMap<u32, std::time::Instant>,
116 |     config: RegistryClientConfig,
    |     ^^^^^^

warning: fields `registry` and `dependency_cache` are never read
   --> src/ferris/schema/client/registry_client.rs:140:5
    |
139 | pub struct SchemaReferenceResolver {
    |            ----------------------- fields in this struct
140 |     registry: Arc<RwLock<SchemaRegistryClient>>,
    |     ^^^^^^^^
141 |     dependency_cache: Arc<RwLock<HashMap<u32, Vec<SchemaDependency>>>>,
    |     ^^^^^^^^^^^^^^^^

warning: methods `detect_cycles`, `has_cycle_dfs`, and `is_acyclic` are never used
   --> src/ferris/schema/client/registry_client.rs:866:8
    |
813 | impl DependencyGraph {
    | -------------------- methods in this implementation
...
866 |     fn detect_cycles(&self) -> Option<Vec<u32>> {
    |        ^^^^^^^^^^^^^
...
883 |     fn has_cycle_dfs(
    |        ^^^^^^^^^^^^^
...
913 |     fn is_acyclic(&self) -> bool {
    |        ^^^^^^^^^^

warning: associated functions `new` and `new_stub` are never used
   --> src/ferris/schema/client/registry_client.rs:919:8
    |
918 | impl SchemaReferenceResolver {
    | ---------------------------- associated functions in this implementation
919 |     fn new() -> Self {
    |        ^^^
...
926 |     fn new_stub() -> Self {
    |        ^^^^^^^^

warning: field `resolver` is never read
  --> src/ferris/schema/client/unified_client.rs:21:5
   |
18 | pub struct UnifiedSchemaRegistryClient {
   |            --------------------------- field in this struct
...
21 |     resolver: Arc<SchemaReferenceResolver>,
   |     ^^^^^^^^

warning: field `source_uri` is never read
  --> src/ferris/schema/client/cache.rs:57:5
   |
43 | struct CacheEntry {
   |        ---------- field in this struct
...
57 |     source_uri: String,
   |     ^^^^^^^^^^
   |
   = note: `CacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `graph`, `resolution_time_ms`, and `dependency_count` are never read
  --> src/ferris/schema/client/enhanced_cache.rs:93:5
   |
91 | struct ResolvedEntry {
   |        ------------- fields in this struct
92 |     resolved: ResolvedSchema,
93 |     graph: DependencyGraph,
   |     ^^^^^
...
96 |     resolution_time_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^
97 |     dependency_count: usize,
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `ResolvedEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `last_refresh` and `refresh_in_progress` are never read
   --> src/ferris/schema/client/enhanced_cache.rs:115:5
    |
113 | struct RefreshManager {
    |        -------------- fields in this struct
114 |     refresh_queue: Arc<RwLock<VecDeque<RefreshTask>>>,
115 |     last_refresh: Arc<RwLock<HashMap<u32, Instant>>>,
    |     ^^^^^^^^^^^^
116 |     refresh_in_progress: Arc<RwLock<HashSet<u32>>>,
    |     ^^^^^^^^^^^^^^^^^^^

warning: fields `schema_id`, `priority`, `scheduled_at`, and `retry_count` are never read
   --> src/ferris/schema/client/enhanced_cache.rs:122:5
    |
121 | struct RefreshTask {
    |        ----------- fields in this struct
122 |     schema_id: u32,
    |     ^^^^^^^^^
123 |     priority: RefreshPriority,
    |     ^^^^^^^^
124 |     scheduled_at: Instant,
    |     ^^^^^^^^^^^^
125 |     retry_count: u32,
    |     ^^^^^^^^^^^
    |
    = note: `RefreshTask` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `Critical` is never constructed
   --> src/ferris/schema/client/enhanced_cache.rs:134:5
    |
130 | enum RefreshPriority {
    |      --------------- variant in this enum
...
134 |     Critical = 3,
    |     ^^^^^^^^
    |
    = note: `RefreshPriority` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `access_tracker` is never read
  --> src/ferris/schema/client/multilevel_cache.rs:48:5
   |
44 | struct WarmCache {
   |        --------- field in this struct
...
48 |     access_tracker: HashMap<u32, AccessPattern>,
   |     ^^^^^^^^^^^^^^
   |
   = note: `WarmCache` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `storage_path` is never read
  --> src/ferris/schema/client/multilevel_cache.rs:61:5
   |
57 | struct ColdCache {
   |        --------- field in this struct
...
61 |     storage_path: String,
   |     ^^^^^^^^^^^^
   |
   = note: `ColdCache` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `promotion_time` is never read
  --> src/ferris/schema/client/multilevel_cache.rs:74:5
   |
70 | struct HotCacheEntry {
   |        ------------- field in this struct
...
74 |     promotion_time: Instant,
   |     ^^^^^^^^^^^^^^
   |
   = note: `HotCacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `created_at` and `size_bytes` are never read
  --> src/ferris/schema/client/multilevel_cache.rs:84:5
   |
80 | struct WarmCacheEntry {
   |        -------------- fields in this struct
...
84 |     created_at: Instant,
   |     ^^^^^^^^^^
85 |     size_bytes: u64,
   |     ^^^^^^^^^^
   |
   = note: `WarmCacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `original_size`, `compressed_size`, `compression_ratio`, and `stored_at` are never read
  --> src/ferris/schema/client/multilevel_cache.rs:93:5
   |
91 | struct ColdCacheEntry {
   |        -------------- fields in this struct
92 |     compressed_schema: Vec<u8>,
93 |     original_size: u64,
   |     ^^^^^^^^^^^^^
94 |     compressed_size: u64,
   |     ^^^^^^^^^^^^^^^
95 |     compression_ratio: f32,
   |     ^^^^^^^^^^^^^^^^^
96 |     stored_at: Instant,
   |     ^^^^^^^^^
   |
   = note: `ColdCacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `predicted_next_access` is never read
   --> src/ferris/schema/client/multilevel_cache.rs:107:5
    |
103 | struct AccessPattern {
    |        ------------- field in this struct
...
107 |     predicted_next_access: Option<Instant>,
    |     ^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `AccessPattern` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `Declining` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:117:5
    |
113 | enum AccessPatternType {
    |      ----------------- variant in this enum
...
117 |     Declining, // Decreasing frequency
    |     ^^^^^^^^^
    |
    = note: `AccessPatternType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `promotion_threshold`, `demotion_threshold`, `heat_decay_rate`, and `adaptation_history` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:124:5
    |
123 | struct AdaptiveCacheManager {
    |        -------------------- fields in this struct
124 |     promotion_threshold: f64,
    |     ^^^^^^^^^^^^^^^^^^^
125 |     demotion_threshold: f64,
    |     ^^^^^^^^^^^^^^^^^^
126 |     heat_decay_rate: f64,
    |     ^^^^^^^^^^^^^^^
127 |     adaptation_history: Vec<AdaptationEvent>,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `AdaptiveCacheManager` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: multiple fields are never read
   --> src/ferris/schema/client/multilevel_cache.rs:134:5
    |
133 | pub struct PerformanceMetrics {
    |            ------------------ fields in this struct
134 |     l1_hit_rate: f64,
    |     ^^^^^^^^^^^
135 |     l2_hit_rate: f64,
    |     ^^^^^^^^^^^
136 |     l3_hit_rate: f64,
    |     ^^^^^^^^^^^
137 |     overall_hit_rate: f64,
    |     ^^^^^^^^^^^^^^^^
138 |     average_retrieval_time: Duration,
    |     ^^^^^^^^^^^^^^^^^^^^^^
139 |     promotion_success_rate: f64,
    |     ^^^^^^^^^^^^^^^^^^^^^^
140 |     memory_efficiency: f64,
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: `PerformanceMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `timestamp`, `event_type`, `schema_id`, and `performance_impact` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:146:5
    |
145 | struct AdaptationEvent {
    |        --------------- fields in this struct
146 |     timestamp: Instant,
    |     ^^^^^^^^^
147 |     event_type: AdaptationEventType,
    |     ^^^^^^^^^^
148 |     schema_id: u32,
    |     ^^^^^^^^^
149 |     performance_impact: f64,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `AdaptationEvent` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Promotion`, `Demotion`, `Eviction`, and `HitRateChange` are never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:154:5
    |
153 | enum AdaptationEventType {
    |      ------------------- variants in this enum
154 |     Promotion {
    |     ^^^^^^^^^
...
158 |     Demotion {
    |     ^^^^^^^^
...
162 |     Eviction {
    |     ^^^^^^^^
...
165 |     HitRateChange {
    |     ^^^^^^^^^^^^^
    |
    = note: `AdaptationEventType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `active_refreshes`, `refresh_queue`, and `refresh_scheduler` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:182:5
    |
181 | struct RefreshManager {
    |        -------------- fields in this struct
182 |     active_refreshes: HashMap<u32, JoinHandle<()>>,
    |     ^^^^^^^^^^^^^^^^
183 |     refresh_queue: VecDeque<RefreshTask>,
    |     ^^^^^^^^^^^^^
184 |     refresh_scheduler: RefreshScheduler,
    |     ^^^^^^^^^^^^^^^^^
    |
    = note: `RefreshManager` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `schema_id`, `priority`, `scheduled_at`, and `estimated_duration` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:189:5
    |
188 | struct RefreshTask {
    |        ----------- fields in this struct
189 |     schema_id: u32,
    |     ^^^^^^^^^
190 |     priority: RefreshPriority,
    |     ^^^^^^^^
191 |     scheduled_at: Instant,
    |     ^^^^^^^^^^^^
192 |     estimated_duration: Duration,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `RefreshTask` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Critical`, `High`, `Medium`, and `Low` are never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:197:5
    |
196 | enum RefreshPriority {
    |      --------------- variants in this enum
197 |     Critical = 4,
    |     ^^^^^^^^
198 |     High = 3,
    |     ^^^^
199 |     Medium = 2,
    |     ^^^^^^
200 |     Low = 1,
    |     ^^^
    |
    = note: `RefreshPriority` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `next_refresh_times`, `refresh_intervals`, and `adaptive_scheduling` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:206:5
    |
205 | struct RefreshScheduler {
    |        ---------------- fields in this struct
206 |     next_refresh_times: BTreeMap<Instant, Vec<u32>>,
    |     ^^^^^^^^^^^^^^^^^^
207 |     refresh_intervals: HashMap<u32, Duration>,
    |     ^^^^^^^^^^^^^^^^^
208 |     adaptive_scheduling: bool,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `RefreshScheduler` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `hits`, `misses`, `demotions`, `total_size`, and `average_access_time` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:214:5
    |
213 | pub struct CacheStats {
    |            ---------- fields in this struct
214 |     hits: u64,
    |     ^^^^
215 |     misses: u64,
    |     ^^^^^^
...
218 |     demotions: u64,
    |     ^^^^^^^^^
219 |     total_size: u64,
    |     ^^^^^^^^^^
220 |     average_access_time: Duration,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `CacheStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `average_compression_ratio` and `compression_time` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:228:5
    |
225 | struct CompressionStats {
    |        ---------------- fields in this struct
...
228 |     average_compression_ratio: f32,
    |     ^^^^^^^^^^^^^^^^^^^^^^^^^
229 |     compression_time: Duration,
    |     ^^^^^^^^^^^^^^^^
    |
    = note: `CompressionStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `dependency_cache` and `evolution_tracker` are never read
  --> src/ferris/schema/client/reference_resolver.rs:18:5
   |
16 | pub struct SchemaReferenceResolver {
   |            ----------------------- fields in this struct
17 |     registry: Arc<SchemaRegistryClient>,
18 |     dependency_cache: Arc<RwLock<HashMap<u32, Vec<ResolvedDependency>>>>,
   |     ^^^^^^^^^^^^^^^^
19 |     evolution_tracker: Arc<RwLock<SchemaEvolutionTracker>>,
   |     ^^^^^^^^^^^^^^^^^

warning: field `subject_compatibility` is never read
  --> src/ferris/schema/client/reference_resolver.rs:63:5
   |
61 | pub struct SchemaEvolutionTracker {
   |            ---------------------- field in this struct
62 |     evolution_history: HashMap<String, Vec<EvolutionRecord>>,
63 |     subject_compatibility: HashMap<String, CompatibilityLevel>,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `SchemaEvolutionTracker` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `track_evolution`, `extract_fields`, `create_canary_plan`, `create_blue_green_plan`, and `create_rolling_plan` are never used
   --> src/ferris/schema/client/reference_resolver.rs:599:14
    |
241 | impl SchemaReferenceResolver {
    | ---------------------------- methods in this implementation
...
599 |     async fn track_evolution(&self, subject: String, evolution: EvolutionRecord) {
    |              ^^^^^^^^^^^^^^^
...
605 |     fn extract_fields(&self, _schema: &str) -> HashSet<String> {
    |        ^^^^^^^^^^^^^^
...
611 |     async fn create_canary_plan(
    |              ^^^^^^^^^^^^^^^^^^
...
647 |     async fn create_blue_green_plan(
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
676 |     async fn create_rolling_plan(
    |              ^^^^^^^^^^^^^^^^^^^

warning: field `sample_size` is never read
  --> src/ferris/schema/client/providers.rs:35:5
   |
34 | pub struct JsonSchemaProvider {
   |            ------------------ field in this struct
35 |     sample_size: usize,
   |     ^^^^^^^^^^^

warning: field `credentials` is never read
  --> src/ferris/schema/server/backends/amazon_msk.rs:28:5
   |
24 | pub struct AmazonMskSchemaRegistryBackend {
   |            ------------------------------ field in this struct
...
28 |     credentials: AwsCredentials,
   |     ^^^^^^^^^^^

warning: fields `timeout_seconds` and `max_retries` are never read
  --> src/ferris/schema/server/backends/confluent.rs:30:5
   |
26 | pub struct ConfluentSchemaRegistryBackend {
   |            ------------------------------ fields in this struct
...
30 |     timeout_seconds: u64,
   |     ^^^^^^^^^^^^^^^
31 |     max_retries: u32,
   |     ^^^^^^^^^^^

warning: fields `auth_token` and `timeout_seconds` are never read
  --> src/ferris/schema/server/backends/pulsar.rs:18:5
   |
16 | pub struct PulsarSchemaRegistryBackend {
   |            --------------------------- fields in this struct
17 |     service_url: String,
18 |     auth_token: Option<String>,
   |     ^^^^^^^^^^
19 |     namespace: String,
20 |     timeout_seconds: u64,
   |     ^^^^^^^^^^^^^^^

warning: field `compatibility_cache` is never read
  --> src/ferris/schema/evolution.rs:18:5
   |
14 | pub struct SchemaEvolution {
   |            --------------- field in this struct
...
18 |     compatibility_cache: HashMap<String, bool>,
   |     ^^^^^^^^^^^^^^^^^^^

warning: trait `UnifiedCodec` is never used
  --> src/ferris/serialization/traits.rs:36:11
   |
36 | pub trait UnifiedCodec: Send + Sync {
   |           ^^^^^^^^^^^^

warning: function `record_to_avro_value` is never used
   --> src/ferris/serialization/avro.rs:130:4
    |
130 | fn record_to_avro_value(
    |    ^^^^^^^^^^^^^^^^^^^^

warning: function `avro_value_to_record` is never used
   --> src/ferris/serialization/avro.rs:195:4
    |
195 | fn avro_value_to_record(
    |    ^^^^^^^^^^^^^^^^^^^^

warning: method `avro_value_to_field_value` is never used
   --> src/ferris/serialization/avro_codec.rs:311:8
    |
15  | impl AvroCodec {
    | -------------- method in this implementation
...
311 |     fn avro_value_to_field_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `env_cache` and `use_system_env` are never read
  --> src/ferris/sql/config/with_clause_parser.rs:90:5
   |
88 | pub struct EnvironmentResolver {
   |            ------------------- fields in this struct
89 |     /// Environment variables cache
90 |     env_cache: HashMap<String, String>,
   |     ^^^^^^^^^
91 |     /// Whether to use system environment variables
92 |     use_system_env: bool,
   |     ^^^^^^^^^^^^^^
   |
   = note: `EnvironmentResolver` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `name` is never read
   --> src/ferris/sql/error/recovery.rs:711:5
    |
710 | pub struct DeadLetterQueue {
    |            --------------- field in this struct
711 |     name: String,
    |     ^^^^

warning: associated functions `var_samp_function` and `validate_args_not_null` are never used
    --> src/ferris/sql/execution/expression/functions.rs:1780:8
     |
31   | impl BuiltinFunctions {
     | --------------------- associated functions in this implementation
...
1780 |     fn var_samp_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1865 |     fn validate_args_not_null(
     |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `extract_and_compute_aggregates` and `get_function_key` are never used
    --> src/ferris/sql/execution/processors/select.rs:997:8
     |
23   | impl SelectProcessor {
     | -------------------- associated functions in this implementation
...
997  |     fn extract_and_compute_aggregates(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1036 |     fn get_function_key(name: &str, args: &[Expr]) -> Result<String, SqlError> {
     |        ^^^^^^^^^^^^^^^^

warning: associated function `apply_comparison` is never used
    --> src/ferris/sql/execution/processors/select.rs:1484:8
     |
1482 | impl SelectProcessor {
     | -------------------- associated function in this implementation
1483 |     /// Helper method to apply comparison operations
1484 |     fn apply_comparison(left: &FieldValue, right: &FieldValue, op: &str) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^

warning: associated functions `process_window_emission`, `update_window_state`, and `cleanup_window_buffer` are never used
   --> src/ferris/sql/execution/processors/window.rs:130:8
    |
16  | impl WindowProcessor {
    | -------------------- associated functions in this implementation
...
130 |     fn process_window_emission(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
476 |     fn update_window_state(
    |        ^^^^^^^^^^^^^^^^^^^
...
581 |     fn cleanup_window_buffer(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: trait `WindowSpecExt` is never used
   --> src/ferris/sql/execution/processors/window.rs:858:7
    |
858 | trait WindowSpecExt {
    |       ^^^^^^^^^^^^^

warning: method `parse_tokens` is never used
   --> src/ferris/sql/parser.rs:448:8
    |
288 | impl StreamingSqlParser {
    | ----------------------- method in this implementation
...
448 |     fn parse_tokens(&self, tokens: Vec<Token>) -> Result<StreamingQuery, SqlError> {
    |        ^^^^^^^^^^^^

warning: field `default_group_id` is never read
  --> src/ferris/sql/query_analyzer.rs:77:5
   |
75 | pub struct QueryAnalyzer {
   |            ------------- field in this struct
76 |     /// Default consumer group base name
77 |     default_group_id: String,
   |     ^^^^^^^^^^^^^^^^

warning: methods `extract_kafka_properties` and `extract_file_properties` are never used
   --> src/ferris/sql/query_analyzer.rs:697:8
    |
80  | impl QueryAnalyzer {
    | ------------------ methods in this implementation
...
697 |     fn extract_kafka_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
716 |     fn extract_file_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `with_clause_parser`, `strict_mode`, and `check_performance` are never read
  --> src/ferris/sql/validator.rs:80:5
   |
77 | pub struct SqlValidator {
   |            ------------ fields in this struct
...
80 |     with_clause_parser: WithClauseParser,
   |     ^^^^^^^^^^^^^^^^^^
81 |     strict_mode: bool,
   |     ^^^^^^^^^^^
82 |     check_performance: bool,
   |     ^^^^^^^^^^^^^^^^^

warning: `ferrisstreams` (lib) generated 61 warnings (6 duplicates)
warning: `ferrisstreams` (lib test) generated 61 warnings (54 duplicates)
warning: unused import: `ferrisstreams::ferris::kafka::serialization::Serializer`
 --> src/bin/test_avro_codec.rs:2:5
  |
2 | use ferrisstreams::ferris::kafka::serialization::Serializer;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: field `with_clause_parser` is never read
   --> src/bin/sql_validator.rs:101:5
    |
98  | pub struct SqlValidator {
    |            ------------ field in this struct
...
101 |     with_clause_parser: WithClauseParser,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: method `split_sql_queries` is never used
   --> src/bin/sql_validator.rs:716:8
    |
112 | impl SqlValidator {
    | ----------------- method in this implementation
...
716 |     fn split_sql_queries(&self, content: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^

warning: unused variable: `result`
  --> src/bin/test_error_recovery.rs:44:13
   |
44 |         let result = circuit_breaker
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_result`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: `ferrisstreams` (bin "test_avro_codec" test) generated 1 warning
warning: `ferrisstreams` (bin "sql_validator") generated 2 warnings
warning: unused imports: `ConfigFileInheritance`, `ConfigValidationError`, `ConfigValidationResult`, `EnvironmentVariablePattern`, `HierarchicalSchemaRegistry`, `is_schema_version_compatible`, `validate_config_file_inheritance`, and `validate_configuration`
  --> src/ferris/config/mod.rs:11:5
   |
11 |     is_schema_version_compatible, validate_config_file_inheritance, validate_configuration,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^
12 |     validate_environment_variables, ConfigFileInheritance, ConfigSchemaProvider,
   |                                     ^^^^^^^^^^^^^^^^^^^^^
13 |     ConfigValidationError, ConfigValidationResult, EnvironmentVariablePattern, GlobalSchemaContext,
   |     ^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^
14 |     HierarchicalSchemaRegistry, PropertyDefault, PropertyValidation,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: unused imports: `CdcFormat`, `CompressionType`, and `WriteMode`
  --> src/ferris/datasource/config/mod.rs:16:33
   |
16 |     BatchConfig, BatchStrategy, CdcFormat, CompressionType, ConnectionString, FileFormat,
   |                                 ^^^^^^^^^  ^^^^^^^^^^^^^^^
17 |     SinkConfig, SourceConfig, WriteMode,
   |                               ^^^^^^^^^

warning: unused imports: `FileFormat`, `FileSinkConfig`, and `FileSourceConfig`
  --> src/ferris/datasource/file/mod.rs:75:18
   |
75 | pub use config::{FileFormat, FileSinkConfig, FileSourceConfig};
   |                  ^^^^^^^^^^  ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `ConsumerBuilder`
  --> src/ferris/kafka/mod.rs:28:26
   |
28 | pub use kafka_consumer::{ConsumerBuilder, KafkaConsumer};
   |                          ^^^^^^^^^^^^^^^

warning: unused import: `ProducerBuilder`
  --> src/ferris/kafka/mod.rs:29:41
   |
29 | pub use kafka_producer::{KafkaProducer, ProducerBuilder};
   |                                         ^^^^^^^^^^^^^^^

warning: unused import: `kafka_producer_def_context::LoggingProducerContext`
  --> src/ferris/kafka/mod.rs:30:9
   |
30 | pub use kafka_producer_def_context::LoggingProducerContext;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AvroSerializer`, `BytesSerializer`, `ProtoSerializer`, `SerializationError`, `Serializer`, and `StringSerializer`
  --> src/ferris/kafka/mod.rs:34:5
   |
34 |     AvroSerializer, BytesSerializer, JsonSerializer, ProtoSerializer, SerializationError,
   |     ^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^                  ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^
35 |     Serializer, StringSerializer,
   |     ^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `admin_client::KafkaAdminClient`
  --> src/ferris/kafka/mod.rs:46:9
   |
46 | pub use admin_client::KafkaAdminClient;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ktable::KTable`
  --> src/ferris/kafka/mod.rs:49:9
   |
49 | pub use ktable::KTable;
   |         ^^^^^^^^^^^^^^

warning: unused imports: `ConsumerError`, `KafkaClientError`, and `ProducerError`
  --> src/ferris/kafka/mod.rs:52:23
   |
52 | pub use kafka_error::{ConsumerError, KafkaClientError, ProducerError};
   |                       ^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^

warning: unused import: `reference_resolver::SchemaReferenceResolver`
  --> src/ferris/schema/client/mod.rs:23:9
   |
23 | pub use reference_resolver::SchemaReferenceResolver;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `SchemaRegistryClient`
  --> src/ferris/schema/client/mod.rs:24:49
   |
24 | pub use registry_client::{RegistryClientConfig, SchemaRegistryClient};
   |                                                 ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `unified_client::UnifiedSchemaRegistryClient`
  --> src/ferris/schema/client/mod.rs:25:9
   |
25 | pub use unified_client::UnifiedSchemaRegistryClient;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `ProviderMetadata` and `SchemaProvider`
  --> src/ferris/schema/client/mod.rs:27:43
   |
27 | pub use crate::ferris::schema::registry::{ProviderMetadata, SchemaProvider};
   |                                           ^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `cache::SchemaCache`
  --> src/ferris/schema/client/mod.rs:30:9
   |
30 | pub use cache::SchemaCache;
   |         ^^^^^^^^^^^^^^^^^^

warning: unused import: `enhanced_cache::EnhancedSchemaCache`
  --> src/ferris/schema/client/mod.rs:31:9
   |
31 | pub use enhanced_cache::EnhancedSchemaCache;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `BackendCapabilities` and `SchemaResponse`
  --> src/ferris/schema/server/mod.rs:14:5
   |
14 |     BackendCapabilities, BackendConfig, BackendMetadata, HealthStatus, SchemaRegistryBackend,
   |     ^^^^^^^^^^^^^^^^^^^
15 |     SchemaRegistryBackendFactory, SchemaResponse,
   |                                   ^^^^^^^^^^^^^^

warning: unused import: `json::JsonFormat`
  --> src/ferris/serialization/mod.rs:83:9
   |
83 | pub use json::JsonFormat;
   |         ^^^^^^^^^^^^^^^^

warning: unused import: `avro::AvroFormat`
   --> src/ferris/serialization/mod.rs:103:9
    |
103 | pub use avro::AvroFormat;
    |         ^^^^^^^^^^^^^^^^

warning: unused import: `protobuf::ProtobufFormat`
   --> src/ferris/serialization/mod.rs:105:9
    |
105 | pub use protobuf::ProtobufFormat;
    |         ^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `JobProcessingConfig`, `SimpleJobProcessor`, and `TransactionalJobProcessor`
  --> src/ferris/server/mod.rs:36:22
   |
36 | pub use processors::{JobProcessingConfig, SimpleJobProcessor, TransactionalJobProcessor};
   |                      ^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `JobStatus`
  --> src/ferris/server/mod.rs:37:29
   |
37 | pub use stream_job_server::{JobStatus, StreamJobServer};
   |                             ^^^^^^^^^

warning: unused import: `ParseError`
  --> src/ferris/sql/config/mod.rs:45:47
   |
45 | pub use connection_string::{ConnectionString, ParseError};
   |                                               ^^^^^^^^^^

warning: unused import: `EnvironmentConfig`
  --> src/ferris/sql/config/mod.rs:46:37
   |
46 | pub use environment::{ConfigSource, EnvironmentConfig};
   |                                     ^^^^^^^^^^^^^^^^^

warning: unused import: `ValidationStats`
  --> src/ferris/sql/config/mod.rs:47:48
   |
47 | pub use types::{ConfigError, DataSourceConfig, ValidationStats};
   |                                                ^^^^^^^^^^^^^^^

warning: unused imports: `YamlConfigError` and `YamlConfigLoader`
  --> src/ferris/sql/config/mod.rs:49:41
   |
49 | pub use yaml_loader::{load_yaml_config, YamlConfigError, YamlConfigLoader};
   |                                         ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused import: `self::state::GroupByStateManager`
  --> src/ferris/sql/execution/aggregation/mod.rs:53:9
   |
53 | pub use self::state::GroupByStateManager;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `SqlApplicationParser`
  --> src/ferris/sql/mod.rs:16:38
   |
16 | pub use app_parser::{SqlApplication, SqlApplicationParser};
   |                                      ^^^^^^^^^^^^^^^^^^^^

warning: unused import: `DataType`
  --> src/ferris/sql/mod.rs:17:15
   |
17 | pub use ast::{DataType, StreamingQuery};
   |               ^^^^^^^^

warning: unused import: `server::StreamJobServer`
  --> src/ferris/mod.rs:11:9
   |
11 | pub use server::StreamJobServer;
   |         ^^^^^^^^^^^^^^^^^^^^^^^

warning: `ferrisstreams` (bin "test_error_recovery") generated 1 warning
warning: type alias `ConfigValidationResult` is never used
  --> src/ferris/config/schema_registry.rs:49:10
   |
49 | pub type ConfigValidationResult<T = ()> = Result<T, Vec<ConfigValidationError>>;
   |          ^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(dead_code)]` on by default

warning: enum `PropertyDefault` is never used
  --> src/ferris/config/schema_registry.rs:53:10
   |
53 | pub enum PropertyDefault {
   |          ^^^^^^^^^^^^^^^

warning: fields `global_properties`, `environment_variables`, `profile_properties`, and `system_defaults` are never read
  --> src/ferris/config/schema_registry.rs:68:9
   |
66 | pub struct GlobalSchemaContext {
   |            ------------------- fields in this struct
67 |     /// Global configuration properties
68 |     pub global_properties: HashMap<String, String>,
   |         ^^^^^^^^^^^^^^^^^
69 |     /// Environment variables
70 |     pub environment_variables: HashMap<String, String>,
   |         ^^^^^^^^^^^^^^^^^^^^^
71 |     /// Profile-based properties
72 |     pub profile_properties: HashMap<String, String>,
   |         ^^^^^^^^^^^^^^^^^^
73 |     /// System defaults
74 |     pub system_defaults: HashMap<String, String>,
   |         ^^^^^^^^^^^^^^^
   |
   = note: `GlobalSchemaContext` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `PropertyValidation` is never constructed
  --> src/ferris/config/schema_registry.rs:79:12
   |
79 | pub struct PropertyValidation {
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/config/schema_registry.rs:102:8
    |
95  | pub trait ConfigSchemaProvider: Send + Sync {
    |           -------------------- associated items in this trait
...
102 |     fn inheritable_properties() -> Vec<&'static str>
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
107 |     fn required_named_properties() -> Vec<&'static str>
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
112 |     fn optional_properties_with_defaults() -> HashMap<&'static str, PropertyDefault>
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
125 |     fn supports_custom_properties() -> bool
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
133 |     fn global_schema_dependencies() -> Vec<&'static str>
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
141 |     fn resolve_property_with_inheritance(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
152 |     fn schema_version() -> &'static str
    |        ^^^^^^^^^^^^^^
...
160 |     fn property_validations() -> Vec<PropertyValidation>
    |        ^^^^^^^^^^^^^^^^^^^^

warning: variants `Global`, `ConfigFile`, `Profile`, `Named`, `Inline`, and `EnvironmentVariable` are never constructed
   --> src/ferris/config/schema_registry.rs:172:5
    |
170 | pub enum OverrideSource {
    |          -------------- variants in this enum
171 |     /// Global configuration
172 |     Global,
    |     ^^^^^^
173 |     /// Configuration file
174 |     ConfigFile(String),
    |     ^^^^^^^^^^
175 |     /// Profile-based configuration
176 |     Profile(String),
    |     ^^^^^^^
177 |     /// Named configuration instance
178 |     Named(String),
    |     ^^^^^
179 |     /// Inline SQL WITH clause
180 |     Inline,
    |     ^^^^^^
181 |     /// Environment variable
182 |     EnvironmentVariable(String),
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: `OverrideSource` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `property_key`, `inheritance_path`, and `override_precedence` are never read
   --> src/ferris/config/schema_registry.rs:189:9
    |
187 | pub struct PropertyInheritanceNode {
    |            ----------------------- fields in this struct
188 |     /// Property key
189 |     pub property_key: String,
    |         ^^^^^^^^^^^^
190 |     /// Inheritance chain from global to specific
191 |     pub inheritance_path: Vec<String>,
    |         ^^^^^^^^^^^^^^^^
192 |     /// Override precedence order
193 |     pub override_precedence: Vec<OverrideSource>,
    |         ^^^^^^^^^^^^^^^^^^^
    |
    = note: `PropertyInheritanceNode` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `source_schemas`, `sink_schemas`, `global_context`, and `property_inheritance` are never read
   --> src/ferris/config/schema_registry.rs:201:5
    |
197 | pub struct HierarchicalSchemaRegistry {
    |            -------------------------- fields in this struct
...
201 |     source_schemas: HashMap<String, Arc<dyn ConfigSchemaProvider>>,
    |     ^^^^^^^^^^^^^^
202 |     /// Sink-specific schema providers
203 |     sink_schemas: HashMap<String, Arc<dyn ConfigSchemaProvider>>,
    |     ^^^^^^^^^^^^
204 |     /// Global context for property resolution
205 |     global_context: GlobalSchemaContext,
    |     ^^^^^^^^^^^^^^
206 |     /// Property inheritance tree
207 |     property_inheritance: HashMap<String, PropertyInheritanceNode>,
    |     ^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/config/schema_registry.rs:229:12
    |
216 | impl HierarchicalSchemaRegistry {
    | ------------------------------- associated items in this implementation
...
229 |     pub fn global() -> Arc<RwLock<Self>> {
    |            ^^^^^^
...
248 |     pub fn register_source_schema<T>(&mut self)
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
258 |     pub fn register_sink_schema<T>(&mut self)
    |            ^^^^^^^^^^^^^^^^^^^^
...
268 |     pub fn update_global_context(&mut self, context: GlobalSchemaContext) {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
273 |     pub fn validate_config_with_inheritance(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
310 |     fn validate_global_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
331 |     fn validate_named_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
372 |     fn validate_inline_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
378 |     fn determine_source_type(&self, source_name: &str, config: &HashMap<String, String>) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
397 |     pub fn generate_complete_json_schema(&self) -> Value {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
432 |     fn get_schema_for_type(&self, type_id: &str) -> Result<Value, String> {
    |        ^^^^^^^^^^^^^^^^^^^
...
452 |     fn build_type_schema(&self, type_id: &str) -> Value {
    |        ^^^^^^^^^^^^^^^^^

warning: struct `ConfigFileInheritance` is never constructed
   --> src/ferris/config/schema_registry.rs:464:12
    |
464 | pub struct ConfigFileInheritance {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/config/schema_registry.rs:477:12
    |
475 | impl ConfigFileInheritance {
    | -------------------------- associated function in this implementation
476 |     /// Create a new ConfigFileInheritance instance
477 |     pub fn new(config_file: impl Into<String>, extends_files: Vec<String>) -> Self {
    |            ^^^

warning: struct `EnvironmentVariablePattern` is never constructed
   --> src/ferris/config/schema_registry.rs:489:12
    |
489 | pub struct EnvironmentVariablePattern {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/config/schema_registry.rs:500:12
    |
498 | impl EnvironmentVariablePattern {
    | ------------------------------- associated function in this implementation
499 |     /// Create a new EnvironmentVariablePattern
500 |     pub fn new(
    |            ^^^

warning: multiple methods are never used
   --> src/ferris/config/schema_registry.rs:515:12
    |
513 | impl HierarchicalSchemaRegistry {
    | ------------------------------- methods in this implementation
514 |     /// Validate config file inheritance chains for circular dependencies
515 |     pub fn validate_config_file_inheritance(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
545 |     fn detect_circular_dependencies(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
622 |     fn validate_extends_file_references(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
653 |     fn validate_extends_file_exists(&self, extends_file: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
685 |     fn validate_property_inheritance_rules(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
722 |     pub fn validate_environment_variables(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
751 |     fn matches_pattern(&self, pattern: &str, text: &str) -> bool {
    |        ^^^^^^^^^^^^^^^
...
769 |     fn validate_env_var_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
834 |     pub fn validate_schema_versions(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
888 |     fn is_version_compatible(&self, current: &str, required: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_configuration` is never used
   --> src/ferris/config/schema_registry.rs:921:8
    |
921 | pub fn validate_configuration(
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_config_file_inheritance` is never used
   --> src/ferris/config/schema_registry.rs:941:8
    |
941 | pub fn validate_config_file_inheritance(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `validate_environment_variables` is never used
   --> src/ferris/config/schema_registry.rs:959:8
    |
959 | pub fn validate_environment_variables(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_schema_version_compatible` is never used
    --> src/ferris/config/schema_registry.rs:1008:8
     |
1008 | pub fn is_schema_version_compatible(runtime_version: &str, schema_version: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: trait `PropertySuggestor` is never used
  --> src/ferris/datasource/config/unified.rs:29:11
   |
29 | pub trait PropertySuggestor {
   |           ^^^^^^^^^^^^^^^^^

warning: struct `StructConfigSuggestor` is never constructed
  --> src/ferris/datasource/config/unified.rs:51:12
   |
51 | pub struct StructConfigSuggestor<T> {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `is_user_set`, and `into_config` are never used
  --> src/ferris/datasource/config/unified.rs:58:12
   |
56 | impl<T> StructConfigSuggestor<T> {
   | -------------------------------- associated items in this implementation
57 |     /// Create a new config suggestor, tracking which fields were explicitly set
58 |     pub fn new(config: T, user_properties: &HashMap<String, String>) -> Self {
   |            ^^^
...
67 |     pub fn is_user_set(&self, field: &str) -> bool {
   |            ^^^^^^^^^^^
...
72 |     pub fn into_config(self) -> T {
   |            ^^^^^^^^^^^

warning: methods `suggest_buffer_size` and `suggest_compression` are never used
  --> src/ferris/datasource/config/unified.rs:80:12
   |
78 | impl StructConfigSuggestor<super::super::file::config::FileSinkConfig> {
   | ---------------------------------------------------------------------- methods in this implementation
79 |     /// Suggest buffer size only if not explicitly set by user
80 |     pub fn suggest_buffer_size(&mut self, size: u64) {
   |            ^^^^^^^^^^^^^^^^^^^
...
87 |     pub fn suggest_compression(
   |            ^^^^^^^^^^^^^^^^^^^

warning: struct `BatchConfigApplicator` is never constructed
  --> src/ferris/datasource/config/unified.rs:98:12
   |
98 | pub struct BatchConfigApplicator;
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/datasource/config/unified.rs:102:12
    |
100 | impl BatchConfigApplicator {
    | -------------------------- associated functions in this implementation
101 |     /// Apply batch strategy optimizations to Kafka producer configuration
102 |     pub fn apply_kafka_producer_strategy(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
132 |     pub fn apply_file_sink_strategy(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
171 |     fn apply_fixed_size_kafka(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
182 |     fn apply_time_window_kafka(config: &mut HashMap<String, String>, duration: Duration) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
189 |     fn apply_adaptive_size_kafka(config: &mut HashMap<String, String>, target_latency: Duration) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
196 |     fn apply_memory_based_kafka(config: &mut HashMap<String, String>, max_bytes: usize) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
207 |     fn apply_low_latency_kafka(config: &mut HashMap<String, String>, max_wait_time: Duration) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ConfigLogger` is never constructed
   --> src/ferris/datasource/config/unified.rs:219:12
    |
219 | pub struct ConfigLogger;
    |            ^^^^^^^^^^^^

warning: associated functions `log_kafka_producer_config` and `log_file_sink_config` are never used
   --> src/ferris/datasource/config/unified.rs:223:12
    |
221 | impl ConfigLogger {
    | ----------------- associated functions in this implementation
222 |     /// Log Kafka producer configuration with batch strategy details
223 |     pub fn log_kafka_producer_config(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub fn log_file_sink_config(
    |            ^^^^^^^^^^^^^^^^^^^^

warning: struct `ConfigFactory` is never constructed
   --> src/ferris/datasource/config/unified.rs:353:12
    |
353 | pub struct ConfigFactory;
    |            ^^^^^^^^^^^^^

warning: associated functions `create_kafka_producer_config` and `create_file_sink_config` are never used
   --> src/ferris/datasource/config/unified.rs:357:12
    |
355 | impl ConfigFactory {
    | ------------------ associated functions in this implementation
356 |     /// Create optimized Kafka producer configuration with batch strategy
357 |     pub fn create_kafka_producer_config(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
394 |     pub fn create_file_sink_config(
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `FILE_BUFFER_SIZE_BYTES` is never used
  --> src/ferris/datasource/config/unified.rs:12:15
   |
12 |     pub const FILE_BUFFER_SIZE_BYTES: u64 = 65536; // 64KB
   |               ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `KAFKA_BATCH_SIZE` is never used
  --> src/ferris/datasource/config/unified.rs:15:15
   |
15 |     pub const KAFKA_BATCH_SIZE: &str = "16384"; // 16KB
   |               ^^^^^^^^^^^^^^^^

warning: constant `KAFKA_LINGER_MS` is never used
  --> src/ferris/datasource/config/unified.rs:16:15
   |
16 |     pub const KAFKA_LINGER_MS: &str = "0"; // No linger by default
   |               ^^^^^^^^^^^^^^^

warning: constant `KAFKA_COMPRESSION_TYPE` is never used
  --> src/ferris/datasource/config/unified.rs:17:15
   |
17 |     pub const KAFKA_COMPRESSION_TYPE: &str = "none";
   |               ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `KAFKA_ACKS` is never used
  --> src/ferris/datasource/config/unified.rs:18:15
   |
18 |     pub const KAFKA_ACKS: &str = "all";
   |               ^^^^^^^^^^

warning: constant `KAFKA_RETRIES` is never used
  --> src/ferris/datasource/config/unified.rs:19:15
   |
19 |     pub const KAFKA_RETRIES: &str = "2147483647"; // Integer.MAX_VALUE (default)
   |               ^^^^^^^^^^^^^

warning: constant `KAFKA_REQUEST_TIMEOUT_MS` is never used
  --> src/ferris/datasource/config/unified.rs:20:15
   |
20 |     pub const KAFKA_REQUEST_TIMEOUT_MS: &str = "30000"; // 30 seconds
   |               ^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `KAFKA_MAX_POLL_RECORDS` is never used
  --> src/ferris/datasource/config/unified.rs:23:15
   |
23 |     pub const KAFKA_MAX_POLL_RECORDS: u32 = 500;
   |               ^^^^^^^^^^^^^^^^^^^^^^

warning: constant `KAFKA_FETCH_MIN_BYTES` is never used
  --> src/ferris/datasource/config/unified.rs:24:15
   |
24 |     pub const KAFKA_FETCH_MIN_BYTES: u32 = 1;
   |               ^^^^^^^^^^^^^^^^^^^^^

warning: constant `KAFKA_FETCH_MAX_WAIT_MS` is never used
  --> src/ferris/datasource/config/unified.rs:25:15
   |
25 |     pub const KAFKA_FETCH_MAX_WAIT_MS: u32 = 500;
   |               ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `from_generic`, `with_watching`, `with_csv_options`, `with_buffer_size`, and `with_recursive` are never used
   --> src/ferris/datasource/file/config.rs:124:12
    |
113 | impl FileSourceConfig {
    | --------------------- associated items in this implementation
...
124 |     pub fn from_generic(config: &SourceConfig) -> Result<Self, String> {
    |            ^^^^^^^^^^^^
...
197 |     pub fn with_watching(mut self, polling_interval_ms: Option<u64>) -> Self {
    |            ^^^^^^^^^^^^^
...
204 |     pub fn with_csv_options(
    |            ^^^^^^^^^^^^^^^^
...
219 |     pub fn with_buffer_size(mut self, size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
225 |     pub fn with_recursive(mut self, recursive: bool) -> Self {
    |            ^^^^^^^^^^^^^^

warning: associated items `new`, `from_generic`, `with_rotation_size`, `with_rotation_interval`, `with_compression`, and `validate` are never used
   --> src/ferris/datasource/file/config.rs:484:12
    |
482 | impl FileSinkConfig {
    | ------------------- associated items in this implementation
483 |     /// Create a new file sink configuration
484 |     pub fn new(path: String, format: FileFormat) -> Self {
    |            ^^^
...
493 |     pub fn from_generic(
    |            ^^^^^^^^^^^^
...
561 |     pub fn with_rotation_size(mut self, max_bytes: u64) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
...
567 |     pub fn with_rotation_interval(mut self, interval_ms: u64) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
573 |     pub fn with_compression(mut self, compression: CompressionType) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
579 |     pub fn validate(&self) -> Result<(), String> {
    |            ^^^^^^^^

warning: struct `FileDataSource` is never constructed
  --> src/ferris/datasource/file/data_source.rs:29:12
   |
29 | pub struct FileDataSource {
   |            ^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/data_source.rs:37:12
    |
35  | impl FileDataSource {
    | ------------------- associated items in this implementation
36  |     /// Create a new file data source
37  |     pub fn new() -> Self {
    |            ^^^
...
46  |     pub fn from_properties(props: &std::collections::HashMap<String, String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
89  |     fn parse_file_format(format_str: &str) -> FileFormat {
    |        ^^^^^^^^^^^^^^^^^
...
99  |     pub fn to_source_config(&self) -> SourceConfig {
    |            ^^^^^^^^^^^^^^^^
...
139 |     pub async fn self_initialize(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |                  ^^^^^^^^^^^^^^^
...
145 |     pub fn config(&self) -> Option<&FileSourceConfig> {
    |            ^^^^^^
...
150 |     async fn validate_path(&self, path: &str) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^
...
192 |     async fn infer_schema(
    |              ^^^^^^^^^^^^
...
203 |     async fn infer_csv_schema(
    |              ^^^^^^^^^^^^^^^^
...
258 |     async fn infer_json_schema(
    |              ^^^^^^^^^^^^^^^^^

warning: variants `PermissionDenied`, `UnsupportedFormat`, `CsvParseError`, `WatchError`, `SchemaInferenceError`, and `InvalidPath` are never constructed
  --> src/ferris/datasource/file/error.rs:12:5
   |
7  | pub enum FileDataSourceError {
   |          ------------------- variants in this enum
...
12 |     PermissionDenied(String),
   |     ^^^^^^^^^^^^^^^^
...
15 |     UnsupportedFormat(String),
   |     ^^^^^^^^^^^^^^^^^
...
18 |     CsvParseError(String),
   |     ^^^^^^^^^^^^^
...
24 |     WatchError(String),
   |     ^^^^^^^^^^
...
27 |     SchemaInferenceError(String),
   |     ^^^^^^^^^^^^^^^^^^^^
...
30 |     InvalidPath(String),
   |     ^^^^^^^^^^^
   |
   = note: `FileDataSourceError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `FileReader` is never constructed
  --> src/ferris/datasource/file/reader.rs:20:12
   |
20 | pub struct FileReader {
   |            ^^^^^^^^^^

warning: struct `FileAdaptiveBatchState` is never constructed
  --> src/ferris/datasource/file/reader.rs:38:8
   |
38 | struct FileAdaptiveBatchState {
   |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `record_latency`, and `average_latency` are never used
  --> src/ferris/datasource/file/reader.rs:46:8
   |
45 | impl FileAdaptiveBatchState {
   | --------------------------- associated items in this implementation
46 |     fn new(initial_size: usize) -> Self {
   |        ^^^
...
55 |     fn record_latency(&mut self, latency: Duration) {
   |        ^^^^^^^^^^^^^^
...
62 |     fn average_latency(&self) -> Option<Duration> {
   |        ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/reader.rs:74:18
    |
72  | impl FileReader {
    | --------------- associated items in this implementation
73  |     /// Create a new file reader with configuration
74  |     pub async fn new(config: FileSourceConfig) -> Result<Self, Box<dyn Error + Send + Sync>> {
    |                  ^^^
...
79  |     pub async fn new_with_batch_config(
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
112 |     async fn initialize_files(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^
...
137 |     async fn expand_glob(
    |              ^^^^^^^^^^^
...
185 |     async fn open_next_file(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^
...
233 |     async fn read_csv_record(
    |              ^^^^^^^^^^^^^^^
...
308 |     fn parse_csv_line(&self, line: &str) -> Result<StreamRecord, Box<dyn Error + Send + Sync>> {
    |        ^^^^^^^^^^^^^^
...
339 |     fn parse_csv_fields(&self, line: &str) -> Result<Vec<String>, Box<dyn Error + Send + Sync>> {
    |        ^^^^^^^^^^^^^^^^
...
380 |     fn infer_field_type(&self, field_name: &str, field_value: &str) -> FieldValue {
    |        ^^^^^^^^^^^^^^^^
...
425 |     fn is_financial_field(&self, field_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
438 |     async fn read_jsonl_record(
    |              ^^^^^^^^^^^^^^^^^
...
531 |     async fn check_for_new_data(&mut self) -> Result<bool, Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
    --> src/ferris/datasource/file/reader.rs:668:14
     |
666  | impl FileReader {
     | --------------- methods in this implementation
667  |     /// Read a single record (when batching is disabled)
668  |     async fn read_single(&mut self) -> Result<Vec<StreamRecord>, Box<dyn Error + Send + Sync>> {
     |              ^^^^^^^^^^^
...
677  |     async fn read_fixed_size(
     |              ^^^^^^^^^^^^^^^
...
697  |     async fn read_lines_batch(
     |              ^^^^^^^^^^^^^^^^
...
798  |     async fn read_fixed_size_fallback(
     |              ^^^^^^^^^^^^^^^^^^^^^^^^
...
834  |     async fn read_time_window(
     |              ^^^^^^^^^^^^^^^^
...
868  |     async fn read_adaptive(
     |              ^^^^^^^^^^^^^
...
909  |     async fn read_memory_based(
     |              ^^^^^^^^^^^^^^^^^
...
964  |     async fn read_low_latency(
     |              ^^^^^^^^^^^^^^^^
...
1034 |     async fn read_one_record(
     |              ^^^^^^^^^^^^^^^
...
1051 |     async fn parse_line_to_record(
     |              ^^^^^^^^^^^^^^^^^^^^
...
1070 |     async fn parse_csv_line_batch(
     |              ^^^^^^^^^^^^^^^^^^^^
...
1121 |     async fn parse_jsonl_line_batch(
     |              ^^^^^^^^^^^^^^^^^^^^^^
...
1160 |     fn json_value_to_field_value(&self, value: &serde_json::Value) -> FieldValue {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1181 |     fn infer_field_type_simple(&self, value: &str) -> FieldValue {
     |        ^^^^^^^^^^^^^^^^^^^^^^^
...
1209 |     fn estimate_field_size(&self, field: &FieldValue) -> usize {
     |        ^^^^^^^^^^^^^^^^^^^

warning: struct `FileSink` is never constructed
  --> src/ferris/datasource/file/sink.rs:39:12
   |
39 | pub struct FileSink {
   |            ^^^^^^^^

warning: struct `FileWriterState` is never constructed
  --> src/ferris/datasource/file/sink.rs:46:12
   |
46 | pub struct FileWriterState {
   |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/sink.rs:57:12
    |
55  | impl FileSink {
    | ------------- associated items in this implementation
56  |     /// Create a new file sink
57  |     pub fn new() -> Self {
    |            ^^^
...
66  |     pub fn from_properties(props: &std::collections::HashMap<String, String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
113 |     pub fn config(&self) -> Option<&FileSinkConfig> {
    |            ^^^^^^
...
118 |     async fn validate_output_path(&self, path: &str) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^^^^
...
148 |     fn needs_rotation(&self, writer_state: &FileWriterState, config: &FileSinkConfig) -> bool {
    |        ^^^^^^^^^^^^^^
...
178 |     fn generate_rotated_filename(base_path: &Path, rotation_index: u32) -> PathBuf {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
190 |     fn optimize_config_for_batch_strategy(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
264 |     fn log_file_writer_config(&self, config: &FileSinkConfig, batch_config: &BatchConfig) {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `FileWriter` is never constructed
   --> src/ferris/datasource/file/sink.rs:425:12
    |
425 | pub struct FileWriter {
    |            ^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/sink.rs:441:18
    |
439 | impl FileWriter {
    | --------------- associated items in this implementation
440 |     /// Create a new file writer
441 |     pub async fn new(
    |                  ^^^
...
471 |     pub async fn new_with_batch_config(
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
527 |     async fn open_new_file(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^
...
559 |     async fn rotate(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^
...
581 |     async fn write_to_buffer(&mut self, data: &[u8]) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^
...
593 |     async fn flush_buffer(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^
...
612 |     fn field_value_to_json_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
620 |     fn needs_rotation(&self) -> bool {
    |        ^^^^^^^^^^^^^^
...
650 |     fn serialize_record(
    |        ^^^^^^^^^^^^^^^^

warning: method `close` is never used
   --> src/ferris/datasource/file/sink.rs:772:18
    |
770 | impl FileWriter {
    | --------------- method in this implementation
771 |     /// Close the file writer (additional method not in trait)
772 |     pub async fn close(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |                  ^^^^^

warning: methods `wait_for_changes`, `watched_paths`, `polling_interval`, and `set_polling_interval` are never used
   --> src/ferris/datasource/file/watcher.rs:135:18
    |
18  | impl FileWatcher {
    | ---------------- methods in this implementation
...
135 |     pub async fn wait_for_changes(
    |                  ^^^^^^^^^^^^^^^^
...
157 |     pub fn watched_paths(&self) -> &[PathBuf] {
    |            ^^^^^^^^^^^^^
...
162 |     pub fn polling_interval(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^
...
167 |     pub fn set_polling_interval(&mut self, interval: Duration) {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: struct `KafkaDataSink` is never constructed
  --> src/ferris/datasource/kafka/data_sink.rs:18:12
   |
18 | pub struct KafkaDataSink {
   |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/kafka/data_sink.rs:26:12
    |
24  | impl KafkaDataSink {
    | ------------------ associated items in this implementation
25  |     /// Create a new Kafka data sink
26  |     pub fn new(brokers: String, topic: String) -> Self {
    |            ^^^
...
35  |     pub fn from_properties(props: &HashMap<String, String>, job_name: &str) -> Self {
    |            ^^^^^^^^^^^^^^^
...
70  |     async fn create_unified_writer(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
88  |     async fn create_unified_writer_with_batch_config(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
106 |     fn apply_batch_config_to_producer(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
206 |     fn log_producer_config(
    |        ^^^^^^^^^^^^^^^^^^^
...
264 |     pub fn with_config(mut self, key: String, value: String) -> Self {
    |            ^^^^^^^^^^^
...
270 |     pub fn brokers(&self) -> &str {
    |            ^^^^^^^
...
274 |     pub fn topic(&self) -> &str {
    |            ^^^^^
...
278 |     pub fn config(&self) -> &HashMap<String, String> {
    |            ^^^^^^

warning: struct `KafkaDataSource` is never constructed
  --> src/ferris/datasource/kafka/data_source.rs:17:12
   |
17 | pub struct KafkaDataSource {
   |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/kafka/data_source.rs:26:12
    |
24  | impl KafkaDataSource {
    | -------------------- associated items in this implementation
25  |     /// Create a Kafka data source from properties
26  |     pub fn from_properties(
    |            ^^^^^^^^^^^^^^^
...
68  |     fn apply_batch_config_to_kafka_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
161 |     pub fn new(brokers: String, topic: String) -> Self {
    |            ^^^
...
171 |     pub fn with_group_id(mut self, group_id: String) -> Self {
    |            ^^^^^^^^^^^^^
...
177 |     pub fn with_config(mut self, key: String, value: String) -> Self {
    |            ^^^^^^^^^^^
...
183 |     pub fn to_source_config(&self) -> SourceConfig {
    |            ^^^^^^^^^^^^^^^^
...
194 |     pub fn brokers(&self) -> &str {
    |            ^^^^^^^
...
198 |     pub fn topic(&self) -> &str {
    |            ^^^^^
...
202 |     pub fn group_id(&self) -> &Option<String> {
    |            ^^^^^^^^
...
206 |     pub fn config(&self) -> &HashMap<String, String> {
    |            ^^^^^^
...
211 |     pub async fn self_initialize(
    |                  ^^^^^^^^^^^^^^^
...
219 |     async fn create_unified_reader(
    |              ^^^^^^^^^^^^^^^^^^^^^
...
256 |     async fn create_unified_reader_with_batch_config(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
290 |     fn extract_schema_for_format(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
360 |     fn load_schema_from_file(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: enum `KafkaDataSourceError` is never used
 --> src/ferris/datasource/kafka/error.rs:9:10
  |
9 | pub enum KafkaDataSourceError {
  |          ^^^^^^^^^^^^^^^^^^^^

warning: struct `KafkaDataReader` is never constructed
  --> src/ferris/datasource/kafka/reader.rs:21:12
   |
21 | pub struct KafkaDataReader {
   |            ^^^^^^^^^^^^^^^

warning: struct `AdaptiveBatchState` is never constructed
  --> src/ferris/datasource/kafka/reader.rs:32:8
   |
32 | struct AdaptiveBatchState {
   |        ^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `record_latency`, and `average_latency` are never used
  --> src/ferris/datasource/kafka/reader.rs:39:8
   |
38 | impl AdaptiveBatchState {
   | ----------------------- associated items in this implementation
39 |     fn new(initial_size: usize) -> Self {
   |        ^^^
...
47 |     fn record_latency(&mut self, latency: Duration) {
   |        ^^^^^^^^^^^^^^
...
54 |     fn average_latency(&self) -> Option<Duration> {
   |        ^^^^^^^^^^^^^^^

warning: associated functions `create_serialization_codec`, `new_with_schema`, `new_with_batch_config`, `new_json`, and `new_from_format_string` are never used
   --> src/ferris/datasource/kafka/reader.rs:66:8
    |
64  | impl KafkaDataReader {
    | -------------------- associated functions in this implementation
65  |     /// Create a serialization codec based on format and schema, with robust error handling
66  |     fn create_serialization_codec(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
111 |     pub async fn new_with_schema(
    |                  ^^^^^^^^^^^^^^^
...
158 |     pub async fn new_with_batch_config(
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
178 |     pub async fn new_json(
    |                  ^^^^^^^^
...
201 |     pub async fn new_from_format_string(
    |                  ^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/kafka/reader.rs:304:8
    |
302 | impl KafkaDataReader {
    | -------------------- associated items in this implementation
303 |     /// Apply BatchConfig settings to Kafka consumer configuration
304 |     fn apply_batch_config_to_consumer(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
393 |     fn log_consumer_config(
    |        ^^^^^^^^^^^^^^^^^^^
...
430 |     async fn read_single(&mut self) -> Result<Vec<StreamRecord>, Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^
...
443 |     async fn read_fixed_size(
    |              ^^^^^^^^^^^^^^^
...
469 |     async fn read_time_window(
    |              ^^^^^^^^^^^^^^^^
...
505 |     async fn read_adaptive(
    |              ^^^^^^^^^^^^^
...
546 |     async fn read_memory_based(
    |              ^^^^^^^^^^^^^^^^^
...
588 |     async fn read_low_latency(
    |              ^^^^^^^^^^^^^^^^
...
630 |     fn create_stream_record(
    |        ^^^^^^^^^^^^^^^^^^^^
...
655 |     fn estimate_field_size(&self, field: &FieldValue) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^

warning: struct `KafkaDataWriter` is never constructed
  --> src/ferris/datasource/kafka/writer.rs:26:12
   |
26 | pub struct KafkaDataWriter {
   |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/kafka/writer.rs:38:18
    |
35  | impl KafkaDataWriter {
    | -------------------- associated items in this implementation
...
38  |     pub async fn new_with_config(
    |                  ^^^^^^^^^^^^^^^
...
58  |     pub async fn from_properties(
    |                  ^^^^^^^^^^^^^^^
...
95  |     pub async fn from_properties_with_batch_config(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
133 |     async fn create_with_schema_validation_and_batch_config(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
202 |     fn validate_schema_requirements(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
229 |     fn create_avro_codec_with_defaults(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
242 |     fn create_protobuf_codec_with_defaults(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
254 |     fn extract_schema_from_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
317 |     fn load_schema_from_file(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
328 |     fn parse_serialization_format(format_str: &str) -> SerializationFormat {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
334 |     fn get_default_avro_schema() -> &'static str {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
348 |     fn extract_key(&self, record: &StreamRecord) -> Option<String> {
    |        ^^^^^^^^^^^
...
382 |     fn serialize_payload(
    |        ^^^^^^^^^^^^^^^^^
...
395 |     fn serialize_json(
    |        ^^^^^^^^^^^^^^
...
405 |     fn serialize_avro(
    |        ^^^^^^^^^^^^^^
...
421 |     fn serialize_protobuf(
    |        ^^^^^^^^^^^^^^^^^^
...
437 |     fn build_json_payload(
    |        ^^^^^^^^^^^^^^^^^^
...
464 |     fn should_exclude_field_from_payload(&self, field_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
473 |     fn add_metadata_to_json(
    |        ^^^^^^^^^^^^^^^^^^^^
...
493 |     fn convert_headers(&self, headers: &HashMap<String, String>) -> Vec<(String, Vec<u8>)> {
    |        ^^^^^^^^^^^^^^^

warning: methods `register_source`, `register_sink`, `has_source_scheme`, and `has_sink_scheme` are never used
   --> src/ferris/datasource/registry.rs:54:12
    |
33  | impl DataSourceRegistry {
    | ----------------------- methods in this implementation
...
54  |     pub fn register_source<F>(&mut self, scheme: &str, factory: F)
    |            ^^^^^^^^^^^^^^^
...
68  |     pub fn register_sink<F>(&mut self, scheme: &str, factory: F)
    |            ^^^^^^^^^^^^^
...
120 |     pub fn has_source_scheme(&self, scheme: &str) -> bool {
    |            ^^^^^^^^^^^^^^^^^
...
125 |     pub fn has_sink_scheme(&self, scheme: &str) -> bool {
    |            ^^^^^^^^^^^^^^^

warning: function `initialize_global_registry` is never used
   --> src/ferris/datasource/registry.rs:145:8
    |
145 | pub fn initialize_global_registry(registry: DataSourceRegistry) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_source` is never used
   --> src/ferris/datasource/registry.rs:150:8
    |
150 | pub fn create_source(uri: &str) -> Result<Box<dyn DataSource>, DataSourceError> {
    |        ^^^^^^^^^^^^^

warning: function `create_sink` is never used
   --> src/ferris/datasource/registry.rs:159:8
    |
159 | pub fn create_sink(uri: &str) -> Result<Box<dyn DataSink>, DataSourceError> {
    |        ^^^^^^^^^^^

warning: function `register_global_source` is never used
   --> src/ferris/datasource/registry.rs:168:8
    |
168 | pub fn register_global_source<F>(scheme: &str, factory: F)
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `register_global_sink` is never used
   --> src/ferris/datasource/registry.rs:182:8
    |
182 | pub fn register_global_sink<F>(scheme: &str, factory: F)
    |        ^^^^^^^^^^^^^^^^^^^^

warning: struct `StdoutWriter` is never constructed
  --> src/ferris/datasource/stdout_writer.rs:11:12
   |
11 | pub struct StdoutWriter {
   |            ^^^^^^^^^^^^

warning: enum `OutputFormat` is never used
  --> src/ferris/datasource/stdout_writer.rs:18:10
   |
18 | pub enum OutputFormat {
   |          ^^^^^^^^^^^^

warning: associated items `new`, `new_pretty`, `new_table`, `record_to_json`, and `record_to_table` are never used
  --> src/ferris/datasource/stdout_writer.rs:26:12
   |
24 | impl StdoutWriter {
   | ----------------- associated items in this implementation
25 |     /// Create a new stdout writer with JSON format
26 |     pub fn new() -> Self {
   |            ^^^
...
35 |     pub fn new_pretty() -> Self {
   |            ^^^^^^^^^^
...
44 |     pub fn new_table() -> Self {
   |            ^^^^^^^^^
...
53 |     fn record_to_json(&self, record: &StreamRecord) -> Result<Value, Box<dyn Error + Send + Sync>> {
   |        ^^^^^^^^^^^^^^
...
83 |     fn record_to_table(&self, record: &StreamRecord) -> String {
   |        ^^^^^^^^^^^^^^^

warning: multiple methods are never used
  --> src/ferris/datasource/traits.rs:22:14
   |
20 | pub trait DataSource: Send + Sync + 'static {
   |           ---------- methods in this trait
21 |     /// Initialize the data source with configuration
22 |     async fn initialize(
   |              ^^^^^^^^^^
...
28 |     async fn fetch_schema(&self) -> Result<Schema, Box<dyn Error + Send + Sync>>;
   |              ^^^^^^^^^^^^
...
32 |     async fn create_reader(&self) -> Result<Box<dyn DataReader>, Box<dyn Error + Send + Sync>>;
   |              ^^^^^^^^^^^^^
...
36 |     async fn create_reader_with_batch_config(
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
44 |     fn supports_streaming(&self) -> bool;
   |        ^^^^^^^^^^^^^^^^^^
...
47 |     fn supports_batch(&self) -> bool;
   |        ^^^^^^^^^^^^^^
...
50 |     fn metadata(&self) -> SourceMetadata;
   |        ^^^^^^^^

warning: multiple methods are never used
  --> src/ferris/datasource/traits.rs:60:14
   |
58 | pub trait DataSink: Send + Sync + 'static {
   |           -------- methods in this trait
59 |     /// Initialize the data sink with configuration
60 |     async fn initialize(&mut self, config: SinkConfig) -> Result<(), Box<dyn Error + Send + Sync>>;
   |              ^^^^^^^^^^
...
63 |     async fn validate_schema(&self, schema: &Schema) -> Result<(), Box<dyn Error + Send + Sync>>;
   |              ^^^^^^^^^^^^^^^
...
67 |     async fn create_writer(&self) -> Result<Box<dyn DataWriter>, Box<dyn Error + Send + Sync>>;
   |              ^^^^^^^^^^^^^
...
71 |     async fn create_writer_with_batch_config(
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
79 |     fn supports_transactions(&self) -> bool;
   |        ^^^^^^^^^^^^^^^^^^^^^
...
82 |     fn supports_upsert(&self) -> bool;
   |        ^^^^^^^^^^^^^^^
...
85 |     fn metadata(&self) -> SinkMetadata;
   |        ^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/datasource/traits.rs:95:14
    |
90  | pub trait DataReader: Send + Sync + 'static {
    |           ---------- methods in this trait
...
95  |     async fn read(&mut self) -> Result<Vec<StreamRecord>, Box<dyn Error + Send + Sync>>;
    |              ^^^^
...
98  |     async fn commit(&mut self) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^^
...
101 |     async fn seek(&mut self, offset: SourceOffset) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^
...
104 |     async fn has_more(&self) -> Result<bool, Box<dyn Error + Send + Sync>>;
    |              ^^^^^^^^
...
108 |     async fn begin_transaction(&mut self) -> Result<bool, Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^
...
115 |     async fn commit_transaction(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^^
...
122 |     async fn abort_transaction(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^
...
128 |     fn supports_transactions(&self) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/datasource/traits.rs:137:14
    |
135 | pub trait DataWriter: Send + Sync + 'static {
    |           ---------- methods in this trait
136 |     /// Write a single record to the sink
137 |     async fn write(&mut self, record: StreamRecord) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^
...
140 |     async fn write_batch(
    |              ^^^^^^^^^^^
...
146 |     async fn update(
    |              ^^^^^^
...
153 |     async fn delete(&mut self, key: &str) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^^
...
156 |     async fn flush(&mut self) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^
...
160 |     async fn begin_transaction(&mut self) -> Result<bool, Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^
...
167 |     async fn commit_transaction(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^^
...
174 |     async fn abort_transaction(&mut self) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^
...
180 |     async fn commit(&mut self) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^^
...
183 |     async fn rollback(&mut self) -> Result<(), Box<dyn Error + Send + Sync>>;
    |              ^^^^^^^^
...
186 |     fn supports_transactions(&self) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: variants `Kafka`, `File`, `S3`, `Database`, and `Generic` are never constructed
  --> src/ferris/datasource/types.rs:13:5
   |
11 | pub enum SourceOffset {
   |          ------------ variants in this enum
12 |     /// Kafka offset (partition, offset)
13 |     Kafka { partition: i32, offset: i64 },
   |     ^^^^^
14 |     /// File position (file path, byte offset, line number)
15 |     File {
   |     ^^^^
...
21 |     S3 {
   |     ^^
...
27 |     Database {
   |     ^^^^^^^^
...
32 |     Generic(String),
   |     ^^^^^^^
   |
   = note: `SourceOffset` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `SourceMetadata` is never constructed
  --> src/ferris/datasource/types.rs:37:12
   |
37 | pub struct SourceMetadata {
   |            ^^^^^^^^^^^^^^

warning: struct `SinkMetadata` is never constructed
  --> src/ferris/datasource/types.rs:48:12
   |
48 | pub struct SinkMetadata {
   |            ^^^^^^^^^^^^

warning: variants `Connection`, `Schema`, `Io`, and `Unsupported` are never constructed
  --> src/ferris/datasource/types.rs:63:5
   |
59 | pub enum DataSourceError {
   |          --------------- variants in this enum
...
63 |     Connection(String),
   |     ^^^^^^^^^^
64 |     /// Schema-related error
65 |     Schema(String),
   |     ^^^^^^
66 |     /// IO error during read/write
67 |     Io(String),
   |     ^^
68 |     /// Unsupported operation
69 |     Unsupported(String),
   |     ^^^^^^^^^^^
   |
   = note: `DataSourceError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: variants `Kafka`, `Io`, `Config`, `Timeout`, and `ServerStartup` are never constructed
  --> src/ferris/error.rs:17:5
   |
14 | pub enum FerrisError {
   |          ----------- variants in this enum
...
17 |     Kafka {
   |     ^^^^^
...
29 |     Io {
   |     ^^
...
37 |     Config { message: String },
   |     ^^^^^^
...
41 |     Timeout { timeout: Duration },
   |     ^^^^^^^
...
45 |     ServerStartup { address: String, reason: String },
   |     ^^^^^^^^^^^^^
   |
   = note: `FerrisError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated functions `kafka`, `io`, `config`, `timeout`, `server_startup`, and `application` are never used
  --> src/ferris/error.rs:58:12
   |
56 | impl FerrisError {
   | ---------------- associated functions in this implementation
57 |     /// Helper to create Kafka errors with context
58 |     pub fn kafka(source: KafkaClientError, message: impl Into<String>) -> Self {
   |            ^^^^^
...
66 |     pub fn io(source: std::io::Error, operation: impl Into<String>) -> Self {
   |            ^^
...
74 |     pub fn config(message: impl Into<String>) -> Self {
   |            ^^^^^^
...
81 |     pub fn timeout(timeout: Duration) -> Self {
   |            ^^^^^^^
...
86 |     pub fn server_startup(address: impl Into<String>, reason: impl Into<String>) -> Self {
   |            ^^^^^^^^^^^^^^
...
94 |     pub fn application(message: impl Into<String>) -> Self {
   |            ^^^^^^^^^^^

warning: struct `KafkaAdminClient` is never constructed
  --> src/ferris/kafka/admin_client.rs:13:12
   |
13 | pub struct KafkaAdminClient {
   |            ^^^^^^^^^^^^^^^^

warning: associated items `new`, `create_topic`, `create_performance_topic`, `delete_topic`, `topic_exists`, and `get_partition_count` are never used
   --> src/ferris/kafka/admin_client.rs:19:12
    |
17  | impl KafkaAdminClient {
    | --------------------- associated items in this implementation
18  |     /// Create a new admin client
19  |     pub fn new(bootstrap_servers: &str) -> Result<Self, rdkafka::error::KafkaError> {
    |            ^^^
...
29  |     pub async fn create_topic(
    |                  ^^^^^^^^^^^^
...
75  |     pub async fn create_performance_topic(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
95  |     pub async fn delete_topic(&self, topic_name: &str) -> Result<(), Box<dyn std::error::Error>> {
    |                  ^^^^^^^^^^^^
...
121 |     pub async fn topic_exists(&self, topic_name: &str) -> Result<bool, Box<dyn std::error::Error>> {
    |                  ^^^^^^^^^^^^
...
134 |     pub async fn get_partition_count(
    |                  ^^^^^^^^^^^^^^^^^^^

warning: fields `brokers`, `group_id`, and `consumer_config` are never read
  --> src/ferris/kafka/configurable_consumer.rs:94:9
   |
89 | pub struct ConfigurableKafkaConsumerBuilder<K, V>
   |            -------------------------------- fields in this struct
...
94 |     pub brokers: String,
   |         ^^^^^^^
95 |     pub group_id: String,
   |         ^^^^^^^^
...
98 |     pub consumer_config: Option<ConsumerConfig>,
   |         ^^^^^^^^^^^^^^^

warning: methods `with_avro_key_serialization`, `with_protobuf_key_serialization`, `with_protobuf_value_serialization`, `with_consumer_config`, `with_serialization_config`, and `build` are never used
   --> src/ferris/kafka/configurable_consumer.rs:167:12
    |
149 | / impl<K, V> ConfigurableKafkaConsumerBuilder<K, V>
150 | | where
151 | |     K: for<'de> Deserialize<'de> + Serialize + 'static,
152 | |     V: for<'de> Deserialize<'de> + Serialize + 'static,
    | |_______________________________________________________- methods in this implementation
...
167 |       pub fn with_avro_key_serialization(mut self, schema_registry_url: &str, subject: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
189 |       pub fn with_protobuf_key_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
197 |       pub fn with_protobuf_value_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
205 |       pub fn with_consumer_config(mut self, config: ConsumerConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^
...
211 |       pub fn with_serialization_config(mut self, config: SerializationConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
233 |       pub fn build(self) -> Result<ConfigurableKafkaConsumer<K, V>, KafkaError> {
    |              ^^^^^

warning: struct `ConfigurableKafkaConsumer` is never constructed
   --> src/ferris/kafka/configurable_consumer.rs:266:12
    |
266 | pub struct ConfigurableKafkaConsumer<K, V>
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/kafka/configurable_consumer.rs:290:12
    |
284 | / impl<K, V> ConfigurableKafkaConsumer<K, V>
285 | | where
286 | |     K: for<'de> Deserialize<'de> + Serialize + 'static,
287 | |     V: for<'de> Deserialize<'de> + Serialize + 'static,
    | |_______________________________________________________- methods in this implementation
...
290 |       pub fn subscribe(&self, topics: &[&str]) -> Result<(), KafkaError> {
    |              ^^^^^^^^^
...
295 |       pub async fn poll(&self, timeout: std::time::Duration) -> Result<Message<K, V>, ConsumerError> {
    |                    ^^^^
...
304 |       pub fn key_format(&self) -> &SerializationFormat {
    |              ^^^^^^^^^^
...
309 |       pub fn value_format(&self) -> &SerializationFormat {
    |              ^^^^^^^^^^^^
...
314 |       fn convert_message(
    |          ^^^^^^^^^^^^^^^
...
340 |       fn convert_key_from_json(&self, json_key: &serde_json::Value) -> Result<K, ConsumerError> {
    |          ^^^^^^^^^^^^^^^^^^^^^
...
381 |       fn convert_value_from_json(&self, json_value: &serde_json::Value) -> Result<V, ConsumerError> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `brokers`, `default_topic`, and `producer_config` are never read
  --> src/ferris/kafka/configurable_producer.rs:79:9
   |
74 | pub struct ConfigurableKafkaProducerBuilder<K, V>
   |            -------------------------------- fields in this struct
...
79 |     pub brokers: String,
   |         ^^^^^^^
80 |     pub default_topic: String,
   |         ^^^^^^^^^^^^^
...
83 |     producer_config: Option<ProducerConfig>,
   |     ^^^^^^^^^^^^^^^

warning: methods `with_avro_key_serialization`, `with_protobuf_key_serialization`, `with_protobuf_value_serialization`, `with_producer_config`, `with_serialization_config`, and `build` are never used
   --> src/ferris/kafka/configurable_producer.rs:152:12
    |
134 | / impl<K, V> ConfigurableKafkaProducerBuilder<K, V>
135 | | where
136 | |     K: Serialize + 'static,
137 | |     V: Serialize + 'static,
    | |___________________________- methods in this implementation
...
152 |       pub fn with_avro_key_serialization(mut self, schema_registry_url: &str, subject: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
174 |       pub fn with_protobuf_key_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
182 |       pub fn with_protobuf_value_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
190 |       pub fn with_producer_config(mut self, config: ProducerConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^
...
196 |       pub fn with_serialization_config(mut self, config: SerializationConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
218 |       pub fn build(self) -> Result<ConfigurableKafkaProducer<K, V>, KafkaError> {
    |              ^^^^^

warning: struct `ConfigurableKafkaProducer` is never constructed
   --> src/ferris/kafka/configurable_producer.rs:248:12
    |
248 | pub struct ConfigurableKafkaProducer<K, V>
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/kafka/configurable_producer.rs:272:18
    |
266 | / impl<K, V> ConfigurableKafkaProducer<K, V>
267 | | where
268 | |     K: Serialize + 'static,
269 | |     V: Serialize + 'static,
    | |___________________________- methods in this implementation
...
272 |       pub async fn send(
    |                    ^^^^
...
296 |       pub async fn send_to_topic(
    |                    ^^^^^^^^^^^^^
...
321 |       pub fn key_format(&self) -> &SerializationFormat {
    |              ^^^^^^^^^^
...
326 |       pub fn value_format(&self) -> &SerializationFormat {
    |              ^^^^^^^^^^^^
...
331 |       pub fn flush(&self, timeout_ms: u64) -> Result<(), KafkaError> {
    |              ^^^^^
...
336 |       fn convert_key_to_json(&self, key: &K) -> Result<serde_json::Value, ProducerError> {
    |          ^^^^^^^^^^^^^^^^^^^
...
372 |       fn convert_value_to_json(&self, value: &V) -> Result<serde_json::Value, ProducerError> {
    |          ^^^^^^^^^^^^^^^^^^^^^

warning: fields `consumer`, `key_serializer`, `value_serializer`, and `group_id` are never read
  --> src/ferris/kafka/kafka_consumer.rs:96:5
   |
90 | pub struct KafkaConsumer<K, V, KS, VS, C = DefaultConsumerContext>
   |            ------------- fields in this struct
...
96 |     consumer: StreamConsumer<C>,
   |     ^^^^^^^^
97 |     key_serializer: KS,
   |     ^^^^^^^^^^^^^^
98 |     value_serializer: VS,
   |     ^^^^^^^^^^^^^^^^
99 |     group_id: String,
   |     ^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/kafka_consumer.rs:180:12
    |
173 | / impl<K, V, KS, VS, C> KafkaConsumer<K, V, KS, VS, C>
174 | | where
175 | |     KS: Serializer<K>,
176 | |     VS: Serializer<V>,
177 | |     C: ConsumerContext + 'static,
    | |_________________________________- associated items in this implementation
...
180 |       pub fn new_with_context(
    |              ^^^^^^^^^^^^^^^^
...
204 |       pub fn subscribe(&self, topics: &[&str]) -> Result<(), KafkaError> {
    |              ^^^^^^^^^
...
244 |       pub async fn poll(&self, timeout: Duration) -> Result<Message<K, V>, ConsumerError> {
    |                    ^^^^
...
285 |       pub fn raw_stream(&self) -> MessageStream<'_, C> {
    |              ^^^^^^^^^^
...
362 |       pub fn stream(&self) -> impl futures::Stream<Item = Result<Message<K, V>, ConsumerError>> + '_ {
    |              ^^^^^^
...
407 |       pub fn commit(&self) -> Result<(), KafkaError> {
    |              ^^^^^^
...
413 |       pub fn key_serializer(&self) -> &KS {
    |              ^^^^^^^^^^^^^^
...
418 |       pub fn value_serializer(&self) -> &VS {
    |              ^^^^^^^^^^^^^^^^
...
423 |       pub fn current_offsets(&self) -> Result<rdkafka::TopicPartitionList, KafkaError> {
    |              ^^^^^^^^^^^^^^^
...
429 |       pub fn group_id(&self) -> &str {
    |              ^^^^^^^^

warning: method `with_context` is never used
   --> src/ferris/kafka/kafka_consumer.rs:496:12
    |
489 | / impl<K, V, KS, VS, C> ConsumerBuilder<K, V, KS, VS, C>
490 | | where
491 | |     KS: Serializer<K>,
492 | |     VS: Serializer<V>,
493 | |     C: ConsumerContext + 'static,
    | |_________________________________- method in this implementation
...
496 |       pub fn with_context<NewC>(self, context: NewC) -> ConsumerBuilder<K, V, KS, VS, NewC>
    |              ^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/kafka_producer.rs:192:12
    |
185 | / impl<K, V, KS, VS, C> KafkaProducer<K, V, KS, VS, C>
186 | | where
187 | |     KS: Serializer<K>,
188 | |     VS: Serializer<V>,
189 | |     C: ProducerContext + 'static,
    | |_________________________________- associated items in this implementation
...
192 |       pub fn new_with_context(
    |              ^^^^^^^^^^^^^^^^
...
204 |       pub fn new_with_context_and_config(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
268 |       pub async fn send_with_current_timestamp(
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
331 |       pub fn key_serializer(&self) -> &KS {
    |              ^^^^^^^^^^^^^^
...
336 |       pub fn value_serializer(&self) -> &VS {
    |              ^^^^^^^^^^^^^^^^
...
341 |       pub async fn begin_transaction(&self) -> Result<(), ProducerError> {
    |                    ^^^^^^^^^^^^^^^^^
...
355 |       pub async fn commit_transaction(&self) -> Result<(), ProducerError> {
    |                    ^^^^^^^^^^^^^^^^^^
...
366 |       pub async fn abort_transaction(&self) -> Result<(), ProducerError> {
    |                    ^^^^^^^^^^^^^^^^^
...
380 |       pub async fn send_offsets_to_transaction(
    |                    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/kafka_producer.rs:472:12
    |
449 | / impl<K, V, KS, VS> ProducerBuilder<K, V, KS, VS, LoggingProducerContext>
450 | | where
451 | |     KS: Serializer<K>,
452 | |     VS: Serializer<V>,
    | |______________________- associated items in this implementation
...
472 |       pub fn with_config(config: ProducerConfig, key_serializer: KS, value_serializer: VS) -> Self {
    |              ^^^^^^^^^^^
...
484 |       pub fn client_id(mut self, client_id: impl Into<String>) -> Self {
    |              ^^^^^^^^^
...
490 |       pub fn message_timeout(mut self, timeout: Duration) -> Self {
    |              ^^^^^^^^^^^^^^^
...
496 |       pub fn compression(mut self, compression: CompressionType) -> Self {
    |              ^^^^^^^^^^^
...
502 |       pub fn acks(mut self, acks: AckMode) -> Self {
    |              ^^^^
...
508 |       pub fn batching(mut self, batch_size: u32, linger_ms: Duration) -> Self {
    |              ^^^^^^^^
...
514 |       pub fn idempotence(mut self, enable: bool) -> Self {
    |              ^^^^^^^^^^^
...
520 |       pub fn retries(mut self, retries: u32, backoff: Duration) -> Self {
    |              ^^^^^^^
...
526 |       pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |              ^^^^^^^^^^^^^^^
...
532 |       pub fn high_throughput(mut self) -> Self {
    |              ^^^^^^^^^^^^^^^
...
538 |       pub fn low_latency(mut self) -> Self {
    |              ^^^^^^^^^^^
...
544 |       pub fn max_durability(mut self) -> Self {
    |              ^^^^^^^^^^^^^^
...
550 |       pub fn development(mut self) -> Self {
    |              ^^^^^^^^^^^

warning: method `with_context` is never used
   --> src/ferris/kafka/kafka_producer.rs:567:12
    |
561 | / impl<K, V, KS, VS> ProducerBuilder<K, V, KS, VS, LoggingProducerContext>
562 | | where
563 | |     KS: Serializer<K>,
564 | |     VS: Serializer<V>,
    | |______________________- method in this implementation
...
567 |       pub fn with_context<NewC>(self, context: NewC) -> ProducerBuilder<K, V, KS, VS, NewC>
    |              ^^^^^^^^^^^^

warning: fields `status`, `partition`, and `offset` are never read
  --> src/ferris/kafka/kafka_producer_def_context.rs:12:9
   |
11 | pub struct LastDelivery {
   |            ------------ fields in this struct
12 |     pub status: Result<(), KafkaError>,
   |         ^^^^^^
13 |     pub partition: i32,
   |         ^^^^^^^^^
14 |     pub offset: i64,
   |         ^^^^^^
   |
   = note: `LastDelivery` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `last_delivery` is never used
  --> src/ferris/kafka/kafka_producer_def_context.rs:21:12
   |
20 | impl LoggingProducerContext {
   | --------------------------- method in this implementation
21 |     pub fn last_delivery(&self) -> Option<LastDelivery> {
   |            ^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/kafka/kafka_producer_def_context.rs:35:12
   |
34 | impl LoggingProducerContext {
   | --------------------------- associated function in this implementation
35 |     pub fn new() -> Self {
   |            ^^^

warning: struct `KTable` is never constructed
  --> src/ferris/kafka/ktable.rs:53:12
   |
53 | pub struct KTable<K, V, KS, VS>
   |            ^^^^^^

warning: struct `KTableStats` is never constructed
  --> src/ferris/kafka/ktable.rs:70:12
   |
70 | pub struct KTableStats {
   |            ^^^^^^^^^^^

warning: struct `ChangeEvent` is never constructed
  --> src/ferris/kafka/ktable.rs:79:12
   |
79 | pub struct ChangeEvent<K, V> {
   |            ^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/ktable.rs:97:18
    |
86  | / impl<K, V, KS, VS> KTable<K, V, KS, VS>
87  | | where
88  | |     K: Clone + Eq + Hash + Send + Sync + 'static,
89  | |     V: Clone + Send + Sync + 'static,
90  | |     KS: Serializer<K> + Send + Sync + 'static,
91  | |     VS: Serializer<V> + Send + Sync + 'static,
    | |______________________________________________- associated items in this implementation
...
97  |       pub async fn new(
    |                    ^^^
...
127 |       pub fn from_consumer(consumer: KafkaConsumer<K, V, KS, VS>, topic: String) -> Self {
    |              ^^^^^^^^^^^^^
...
144 |       pub async fn start(&self) -> Result<(), ConsumerError> {
    |                    ^^^^^
...
169 |       pub fn stop(&self) {
    |              ^^^^
...
174 |       pub fn is_running(&self) -> bool {
    |              ^^^^^^^^^^
...
179 |       async fn process_message(&self, message: Message<K, V>) {
    |                ^^^^^^^^^^^^^^^
...
201 |       pub fn get(&self, key: &K) -> Option<V> {
    |              ^^^
...
206 |       pub fn contains_key(&self, key: &K) -> bool {
    |              ^^^^^^^^^^^^
...
211 |       pub fn keys(&self) -> Vec<K> {
    |              ^^^^
...
216 |       pub fn len(&self) -> usize {
    |              ^^^
...
221 |       pub fn is_empty(&self) -> bool {
    |              ^^^^^^^^
...
229 |       pub fn snapshot(&self) -> HashMap<K, V> {
    |              ^^^^^^^^
...
234 |       pub fn stats(&self) -> KTableStats {
    |              ^^^^^
...
246 |       pub async fn wait_for_keys(&self, min_keys: usize, timeout: Duration) -> bool {
    |                    ^^^^^^^^^^^^^
...
260 |       pub fn topic(&self) -> &str {
    |              ^^^^^
...
265 |       pub fn group_id(&self) -> &str {
    |              ^^^^^^^^
...
273 |       pub fn map_values<V2, F>(&self, mapper: F) -> HashMap<K, V2>
    |              ^^^^^^^^^^
...
288 |       pub fn filter<F>(&self, predicate: F) -> HashMap<K, V>
    |              ^^^^^^

warning: trait `KafkaSerialize` is never used
  --> src/ferris/kafka/serialization.rs:15:11
   |
15 | pub trait KafkaSerialize {
   |           ^^^^^^^^^^^^^^

warning: trait `KafkaDeserialize` is never used
  --> src/ferris/kafka/serialization.rs:21:11
   |
21 | pub trait KafkaDeserialize<T> {
   |           ^^^^^^^^^^^^^^^^

warning: method `deserialize` is never used
  --> src/ferris/kafka/serialization.rs:32:8
   |
27 | pub trait Serializer<T> {
   |           ---------- method in this trait
...
32 |     fn deserialize(&self, bytes: &[u8]) -> Result<T, SerializationError>;
   |        ^^^^^^^^^^^

warning: trait `AsyncSerializer` is never used
  --> src/ferris/kafka/serialization.rs:36:11
   |
36 | pub trait AsyncSerializer<T: Send + Sync> {
   |           ^^^^^^^^^^^^^^^

warning: function `from_json` is never used
  --> src/ferris/kafka/serialization.rs:93:8
   |
93 | pub fn from_json<T: for<'de> Deserialize<'de>>(bytes: &[u8]) -> Result<T, SerializationError> {
   |        ^^^^^^^^^

warning: function `to_avro` is never used
   --> src/ferris/kafka/serialization.rs:159:8
    |
159 | pub fn to_avro(value: &AvroValue, schema: &AvroSchema) -> Result<Vec<u8>, SerializationError> {
    |        ^^^^^^^

warning: function `from_avro` is never used
   --> src/ferris/kafka/serialization.rs:165:8
    |
165 | pub fn from_avro(bytes: &[u8], schema: &AvroSchema) -> Result<AvroValue, SerializationError> {
    |        ^^^^^^^^^

warning: struct `AvroSerializer` is never constructed
   --> src/ferris/kafka/serialization.rs:172:12
    |
172 | pub struct AvroSerializer {
    |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/kafka/serialization.rs:177:12
    |
176 | impl AvroSerializer {
    | ------------------- associated function in this implementation
177 |     pub fn new(schema: AvroSchema) -> Self {
    |            ^^^

warning: function `to_proto` is never used
   --> src/ferris/kafka/serialization.rs:196:8
    |
196 | pub fn to_proto<T: Message>(message: &T) -> Result<Vec<u8>, SerializationError> {
    |        ^^^^^^^^

warning: function `from_proto` is never used
   --> src/ferris/kafka/serialization.rs:208:8
    |
208 | pub fn from_proto<T: Message + Default>(bytes: &[u8]) -> Result<T, SerializationError> {
    |        ^^^^^^^^^^

warning: struct `ProtoSerializer` is never constructed
   --> src/ferris/kafka/serialization.rs:219:12
    |
219 | pub struct ProtoSerializer<T: Message + Default>(std::marker::PhantomData<T>);
    |            ^^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/kafka/serialization.rs:228:12
    |
227 | impl<T: Message + Default> ProtoSerializer<T> {
    | --------------------------------------------- associated function in this implementation
228 |     pub fn new() -> Self {
    |            ^^^

warning: struct `BytesSerializer` is never constructed
   --> src/ferris/kafka/serialization.rs:249:12
    |
249 | pub struct BytesSerializer;
    |            ^^^^^^^^^^^^^^^

warning: struct `StringSerializer` is never constructed
   --> src/ferris/kafka/serialization.rs:263:12
    |
263 | pub struct StringSerializer;
    |            ^^^^^^^^^^^^^^^^

warning: associated function `create_boxed_serializer` is never used
   --> src/ferris/kafka/serialization_format.rs:236:12
    |
231 | impl SerializationFactory {
    | ------------------------- associated function in this implementation
...
236 |     pub fn create_boxed_serializer<T>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `with_capacity`, `get_optional`, `from_rdkafka_headers`, and `into_map` are never used
   --> src/ferris/kafka/headers.rs:90:12
    |
81  | impl Headers {
    | ------------ associated items in this implementation
...
90  |     pub fn with_capacity(capacity: usize) -> Self {
    |            ^^^^^^^^^^^^^
...
114 |     pub fn get_optional(&self, key: &str) -> Option<&Option<String>> {
    |            ^^^^^^^^^^^^
...
154 |     pub(crate) fn from_rdkafka_headers<H: KafkaHeaders>(kafka_headers: &H) -> Self {
    |                   ^^^^^^^^^^^^^^^^^^^^
...
172 |     pub fn into_map(self) -> HashMap<String, String> {
    |            ^^^^^^^^

warning: methods `is_first`, `take_value`, `take_key`, and `take_headers` are never used
   --> src/ferris/kafka/message.rs:110:12
    |
50  | impl<K, V> Message<K, V> {
    | ------------------------ methods in this implementation
...
110 |     pub fn is_first(&self) -> bool {
    |            ^^^^^^^^
...
117 |     pub fn take_value(&mut self) -> V
    |            ^^^^^^^^^^
...
125 |     pub fn take_key(&mut self) -> Option<K> {
    |            ^^^^^^^^
...
130 |     pub fn take_headers(&mut self) -> Headers
    |            ^^^^^^^^^^^^

warning: method `metadata_string` is never used
   --> src/ferris/kafka/message.rs:140:12
    |
138 | impl<K: std::fmt::Debug, V> Message<K, V> {
    | ----------------------------------------- method in this implementation
139 |     /// Returns a human-readable string containing all metadata about this message
140 |     pub fn metadata_string(&self) -> String {
    |            ^^^^^^^^^^^^^^^

warning: methods `into_key` and `into_headers` are never used
   --> src/ferris/kafka/message.rs:161:12
    |
159 | impl<K, V> Message<K, V> {
    | ------------------------ methods in this implementation
160 |     /// Consumes the message and returns the owned key
161 |     pub fn into_key(self) -> Option<K> {
    |            ^^^^^^^^
...
171 |     pub fn into_headers(self) -> Headers {
    |            ^^^^^^^^^^^^

warning: variant `ReadCommitted` is never constructed
  --> src/ferris/kafka/consumer_config.rs:44:5
   |
40 | pub enum IsolationLevel {
   |          -------------- variant in this enum
...
44 |     ReadCommitted,
   |     ^^^^^^^^^^^^^
   |
   = note: `IsolationLevel` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `None` is never constructed
  --> src/ferris/kafka/consumer_config.rs:63:5
   |
57 | pub enum OffsetReset {
   |          ----------- variant in this enum
...
63 |     None,
   |     ^^^^
   |
   = note: `OffsetReset` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/ferris/kafka/consumer_config.rs:127:12
    |
97  | impl ConsumerConfig {
    | ------------------- methods in this implementation
...
127 |     pub fn isolation_level(mut self, level: IsolationLevel) -> Self {
    |            ^^^^^^^^^^^^^^^
...
133 |     pub fn session_config(
    |            ^^^^^^^^^^^^^^
...
144 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
150 |     pub fn poll_config(mut self, max_interval: Duration, max_records: u32) -> Self {
    |            ^^^^^^^^^^^
...
157 |     pub fn fetch_config(
    |            ^^^^^^^^^^^^
...
172 |     pub fn retry_backoff(mut self, backoff: Duration) -> Self {
    |            ^^^^^^^^^^^^^
...
178 |     pub fn max_poll_records(mut self, max_records: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
184 |     pub fn fetch_min_bytes(mut self, min_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^
...
190 |     pub fn fetch_max_bytes(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^
...
196 |     pub fn fetch_max_wait(mut self, max_wait: Duration) -> Self {
    |            ^^^^^^^^^^^^^^
...
202 |     pub fn session_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
208 |     pub fn max_partition_fetch_bytes(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn max_poll_interval(mut self, interval: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
247 |     pub fn performance_tuning(
    |            ^^^^^^^^^^^^^^^^^^
...
259 |     pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
265 |     pub fn brokers(&self) -> &str {
    |            ^^^^^^^
...
270 |     pub fn client_id_ref(&self) -> Option<&str> {
    |            ^^^^^^^^^^^^^
...
275 |     pub fn request_timeout_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn retry_backoff_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
285 |     pub fn custom_config_ref(&self) -> &HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^

warning: variants `Snappy` and `Zstd` are never constructed
  --> src/ferris/kafka/producer_config.rs:43:5
   |
40 | pub enum CompressionType {
   |          --------------- variants in this enum
...
43 |     Snappy,
   |     ^^^^^^
44 |     Lz4,
45 |     Zstd,
   |     ^^^^
   |
   = note: `CompressionType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `None` is never constructed
  --> src/ferris/kafka/producer_config.rs:63:5
   |
61 | pub enum AckMode {
   |          ------- variant in this enum
62 |     /// Don't wait for acknowledgment
63 |     None,
   |     ^^^^
   |
   = note: `AckMode` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/ferris/kafka/producer_config.rs:124:12
    |
101 | impl ProducerConfig {
    | ------------------- methods in this implementation
...
124 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
130 |     pub fn delivery_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
136 |     pub fn idempotence(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^
...
142 |     pub fn max_in_flight_requests(mut self, max: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
148 |     pub fn retries(mut self, retries: u32, backoff: Duration) -> Self {
    |            ^^^^^^^
...
155 |     pub fn batching(mut self, batch_size: u32, linger_ms: Duration) -> Self {
    |            ^^^^^^^^
...
168 |     pub fn acks(mut self, acks: AckMode) -> Self {
    |            ^^^^
...
174 |     pub fn buffer_memory(mut self, memory: u64) -> Self {
    |            ^^^^^^^^^^^^^
...
207 |     pub fn performance_tuning(self, message_max_mb: u32, socket_buffer_kb: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
...
213 |     pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
219 |     pub fn transactional(mut self, transaction_id: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^
...
237 |     pub fn transaction_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
259 |     pub fn request_timeout_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
264 |     pub fn retry_backoff_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
269 |     pub fn custom_config_ref(&self) -> &HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^

warning: method `config_mut` is never used
  --> src/ferris/kafka/client_config_builder.rs:69:12
   |
13 | impl ClientConfigBuilder {
   | ------------------------ method in this implementation
...
69 |     pub fn config_mut(&mut self) -> &mut ClientConfig {
   |            ^^^^^^^^^^

warning: trait `HasCommonConfig` is never used
   --> src/ferris/kafka/common_config.rs:105:11
    |
105 | pub trait HasCommonConfig {
    |           ^^^^^^^^^^^^^^^

warning: methods `development` and `batch_processing` are never used
   --> src/ferris/kafka/performance_presets.rs:144:8
    |
133 | pub trait PerformancePresets {
    |           ------------------ methods in this trait
...
144 |     fn development(self) -> Self;
    |        ^^^^^^^^^^^
...
155 |     fn batch_processing(self) -> Self
    |        ^^^^^^^^^^^^^^^^

warning: function `apply_batch_processing_common` is never used
   --> src/ferris/kafka/performance_presets.rs:117:12
    |
117 |     pub fn apply_batch_processing_common(config: &mut CommonKafkaConfig) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variants `Incompatible`, `Cache`, and `Validation` are never constructed
  --> src/ferris/schema/error.rs:11:5
   |
7  | pub enum SchemaError {
   |          ----------- variants in this enum
...
11 |     Incompatible {
   |     ^^^^^^^^^^^^
...
18 |     Cache {
   |     ^^^^^
...
26 |     Validation {
   |     ^^^^^^^^^^
   |
   = note: `SchemaError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: variants `None`, `Full`, and `Strict` are never constructed
  --> src/ferris/schema/types.rs:41:5
   |
39 | pub enum CompatibilityMode {
   |          ----------------- variants in this enum
40 |     /// No compatibility checking
41 |     None,
   |     ^^^^
...
47 |     Full,
   |     ^^^^
48 |     /// No schema changes allowed
49 |     Strict,
   |     ^^^^^^
   |
   = note: `CompatibilityMode` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `id`, `topic`, and `schema_id` are never read
  --> src/ferris/schema/types.rs:55:9
   |
54 | pub struct StreamHandle {
   |            ------------ fields in this struct
55 |     pub id: String,
   |         ^^
56 |     pub topic: String,
   |         ^^^^^
57 |     pub schema_id: String,
   |         ^^^^^^^^^
   |
   = note: `StreamHandle` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `StreamMetadata` is never constructed
  --> src/ferris/schema/types.rs:62:12
   |
62 | pub struct StreamMetadata {
   |            ^^^^^^^^^^^^^^

warning: struct `PartitionMetadata` is never constructed
  --> src/ferris/schema/types.rs:70:12
   |
70 | pub struct PartitionMetadata {
   |            ^^^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/schema/types.rs:86:12
    |
77  | impl Schema {
    | ----------- methods in this implementation
...
86  |     pub fn with_version(mut self, version: String) -> Self {
    |            ^^^^^^^^^^^^
...
91  |     pub fn with_metadata(mut self, metadata: SchemaMetadata) -> Self {
    |            ^^^^^^^^^^^^^
...
104 |     pub fn get_field_type(&self, name: &str) -> Option<&DataType> {
    |            ^^^^^^^^^^^^^^
...
108 |     pub fn field_names(&self) -> Vec<&str> {
    |            ^^^^^^^^^^^
...
115 |     pub fn validate_record(&self, record: &HashMap<String, serde_json::Value>) -> bool {
    |            ^^^^^^^^^^^^^^^
...
131 |     fn value_matches_type(&self, value: &serde_json::Value, data_type: &DataType) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
146 |     pub fn is_compatible_with(&self, other: &Schema) -> bool {
    |            ^^^^^^^^^^^^^^^^^^
...
158 |     fn fields_compatible_with(&self, other_fields: &[FieldDefinition]) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: method `with_default` is never used
   --> src/ferris/schema/types.rs:193:12
    |
169 | impl FieldDefinition {
    | -------------------- method in this implementation
...
193 |     pub fn with_default(mut self, default_value: String) -> Self {
    |            ^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/schema/types.rs:229:12
    |
228 | impl StreamHandle {
    | ----------------- associated function in this implementation
229 |     pub fn new(id: String, topic: String, schema_id: String) -> Self {
    |            ^^^

warning: associated items `new`, `with_partitions`, and `update_record_count` are never used
   --> src/ferris/schema/types.rs:239:12
    |
238 | impl StreamMetadata {
    | ------------------- associated items in this implementation
239 |     pub fn new() -> Self {
    |            ^^^
...
247 |     pub fn with_partitions(mut self, partitions: Vec<PartitionMetadata>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
252 |     pub fn update_record_count(&mut self, count: u64) {
    |            ^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/schema/types.rs:265:12
    |
264 | impl PartitionMetadata {
    | ---------------------- associated function in this implementation
265 |     pub fn new(partition_id: i32, low_watermark: i64, high_watermark: i64) -> Self {
    |            ^^^

warning: fields `base_url`, `auth`, `cache`, `reference_resolver`, `http_client`, and `config` are never read
  --> src/ferris/schema/client/registry_client.rs:16:5
   |
15 | pub struct SchemaRegistryClient {
   |            -------------------- fields in this struct
16 |     base_url: String,
   |     ^^^^^^^^
17 |     auth: Option<AuthConfig>,
   |     ^^^^
18 |     cache: Arc<RwLock<SchemaCache>>,
   |     ^^^^^
19 |     reference_resolver: Option<Arc<SchemaReferenceResolver>>,
   |     ^^^^^^^^^^^^^^^^^^
20 |     http_client: Client,
   |     ^^^^^^^^^^^
21 |     config: RegistryClientConfig,
   |     ^^^^^^

warning: fields `timeout_seconds`, `max_retries`, `retry_delay_ms`, `cache_ttl_seconds`, and `resolve_references` are never read
  --> src/ferris/schema/client/registry_client.rs:28:9
   |
26 | pub struct RegistryClientConfig {
   |            -------------------- fields in this struct
27 |     /// Request timeout in seconds
28 |     pub timeout_seconds: u64,
   |         ^^^^^^^^^^^^^^^
29 |     /// Maximum retry attempts
30 |     pub max_retries: u32,
   |         ^^^^^^^^^^^
31 |     /// Base retry delay in milliseconds
32 |     pub retry_delay_ms: u64,
   |         ^^^^^^^^^^^^^^
33 |     /// Cache TTL in seconds
34 |     pub cache_ttl_seconds: u64,
   |         ^^^^^^^^^^^^^^^^^
35 |     /// Enable reference resolution
36 |     pub resolve_references: bool,
   |         ^^^^^^^^^^^^^^^^^^
   |
   = note: `RegistryClientConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `None`, `Basic`, and `Bearer` are never constructed
  --> src/ferris/schema/client/registry_client.rs:42:5
   |
41 | pub enum AuthConfig {
   |          ---------- variants in this enum
42 |     None,
   |     ^^^^
43 |     Basic { username: String, password: String },
   |     ^^^^^
44 |     Bearer { token: String },
   |     ^^^^^^
   |
   = note: `AuthConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `schema_id`, `subject`, `version`, and `dependencies` are never read
  --> src/ferris/schema/client/registry_client.rs:79:9
   |
78 | pub struct SchemaDependency {
   |            ---------------- fields in this struct
79 |     pub schema_id: u32,
   |         ^^^^^^^^^
80 |     pub subject: String,
   |         ^^^^^^^
81 |     pub version: i32,
   |         ^^^^^^^
82 |     pub dependencies: Vec<u32>,
   |         ^^^^^^^^^^^^
   |
   = note: `SchemaDependency` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `root_schema`, `dependencies`, `flattened_schema`, and `resolution_path` are never read
  --> src/ferris/schema/client/registry_client.rs:88:9
   |
87 | pub struct ResolvedSchema {
   |            -------------- fields in this struct
88 |     pub root_schema: CachedSchema,
   |         ^^^^^^^^^^^
89 |     pub dependencies: HashMap<u32, CachedSchema>,
   |         ^^^^^^^^^^^^
90 |     pub flattened_schema: String,
   |         ^^^^^^^^^^^^^^^^
91 |     pub resolution_path: Vec<u32>,
   |         ^^^^^^^^^^^^^^^
   |
   = note: `ResolvedSchema` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `cached_at` and `access_count` are never read
   --> src/ferris/schema/client/registry_client.rs:103:9
    |
96  | pub struct CachedSchema {
    |            ------------ fields in this struct
...
103 |     pub cached_at: std::time::Instant,
    |         ^^^^^^^^^
104 |     #[serde(skip, default)]
105 |     pub access_count: u64,
    |         ^^^^^^^^^^^^
    |
    = note: `CachedSchema` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple fields are never read
   --> src/ferris/schema/client/registry_client.rs:110:5
    |
109 | pub struct SchemaCache {
    |            ----------- fields in this struct
110 |     schemas: HashMap<u32, CachedSchema>,
    |     ^^^^^^^
111 |     subject_versions: HashMap<String, HashMap<i32, u32>>,
    |     ^^^^^^^^^^^^^^^^
112 |     resolved_schemas: HashMap<u32, ResolvedSchema>,
    |     ^^^^^^^^^^^^^^^^
113 |     dependency_graphs: HashMap<u32, DependencyGraph>,
    |     ^^^^^^^^^^^^^^^^^
114 |     reference_index: HashMap<String, std::collections::HashSet<u32>>,
    |     ^^^^^^^^^^^^^^^
115 |     resolution_cache: HashMap<u32, std::time::Instant>,
    |     ^^^^^^^^^^^^^^^^
116 |     config: RegistryClientConfig,
    |     ^^^^^^

warning: fields `root`, `nodes`, `edges`, and `resolution_order` are never read
   --> src/ferris/schema/client/registry_client.rs:122:9
    |
121 | pub struct DependencyGraph {
    |            --------------- fields in this struct
122 |     pub root: u32,
    |         ^^^^
123 |     pub nodes: HashMap<u32, GraphNode>,
    |         ^^^^^
124 |     pub edges: HashMap<u32, Vec<u32>>,
    |         ^^^^^
125 |     pub resolution_order: Vec<u32>,
    |         ^^^^^^^^^^^^^^^^
    |
    = note: `DependencyGraph` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `schema_id`, `subject`, `version`, `in_degree`, and `depth` are never read
   --> src/ferris/schema/client/registry_client.rs:131:9
    |
130 | pub struct GraphNode {
    |            --------- fields in this struct
131 |     pub schema_id: u32,
    |         ^^^^^^^^^
132 |     pub subject: String,
    |         ^^^^^^^
133 |     pub version: i32,
    |         ^^^^^^^
134 |     pub in_degree: usize,
    |         ^^^^^^^^^
135 |     pub depth: usize,
    |         ^^^^^
    |
    = note: `GraphNode` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `id`, `schema`, `references`, `subject`, and `version` are never read
   --> src/ferris/schema/client/registry_client.rs:147:5
    |
146 | struct SchemaResponse {
    |        -------------- fields in this struct
147 |     id: u32,
    |     ^^
148 |     schema: String,
    |     ^^^^^^
149 |     #[serde(default)]
150 |     references: Vec<SchemaReference>,
    |     ^^^^^^^^^^
151 |     subject: Option<String>,
    |     ^^^^^^^
152 |     version: Option<i32>,
    |     ^^^^^^^
    |
    = note: `SchemaResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `subject`, `version`, `id`, `schema`, and `references` are never read
   --> src/ferris/schema/client/registry_client.rs:158:5
    |
157 | struct SubjectVersionResponse {
    |        ---------------------- fields in this struct
158 |     subject: String,
    |     ^^^^^^^
159 |     version: i32,
    |     ^^^^^^^
160 |     id: u32,
    |     ^^
161 |     schema: String,
    |     ^^^^^^
162 |     #[serde(default)]
163 |     references: Vec<SchemaReference>,
    |     ^^^^^^^^^^
    |
    = note: `SubjectVersionResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `RegisterSchemaRequest` is never constructed
   --> src/ferris/schema/client/registry_client.rs:168:8
    |
168 | struct RegisterSchemaRequest {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/registry_client.rs:190:12
    |
174 | impl SchemaRegistryClient {
    | ------------------------- associated items in this implementation
...
190 |     pub fn with_config(base_url: String, config: RegistryClientConfig) -> Self {
    |            ^^^^^^^^^^^
...
198 |     pub fn with_auth(mut self, auth: AuthConfig) -> Self {
    |            ^^^^^^^^^
...
204 |     pub async fn get_schema(&self, id: u32) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^
...
239 |     pub async fn get_latest_schema(&self, subject: &str) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^^^^^^^^
...
267 |     pub async fn register_schema(
    |                  ^^^^^^^^^^^^^^^
...
305 |     pub async fn resolve_schema_with_references(&self, id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
332 |     pub async fn validate_schema_compatibility(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
361 |     pub fn get_schema_dependencies<'a>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
388 |     pub async fn get_schema_references(&self, subject: &str) -> SchemaResult<Vec<SchemaReference>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
394 |     pub async fn list_subjects(&self) -> SchemaResult<Vec<String>> {
    |                  ^^^^^^^^^^^^^
...
409 |     pub async fn list_subject_versions(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
424 |     pub async fn get_subject_version(
    |                  ^^^^^^^^^^^^^^^^^^^
...
449 |     pub async fn delete_subject_version(&self, subject: &str, version: i32) -> SchemaResult<i32> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
470 |     pub async fn delete_subject(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^^^
...
489 |     pub async fn get_config(&self, subject: Option<&str>) -> SchemaResult<RegistryConfig> {
    |                  ^^^^^^^^^^
...
509 |     pub async fn update_config(
    |                  ^^^^^^^^^^^^^
...
539 |     pub async fn health_check(&self) -> SchemaResult<bool> {
    |                  ^^^^^^^^^^^^
...
548 |     async fn invalidate_cache(&self, subject: &str, version: Option<i32>) {
    |              ^^^^^^^^^^^^^^^^
...
555 |     async fn execute_request(
    |              ^^^^^^^^^^^^^^^
...
628 |     async fn get_cached_schema(&self, id: u32) -> Option<CachedSchema> {
    |              ^^^^^^^^^^^^^^^^^
...
633 |     async fn cache_schema(&self, schema: CachedSchema) {
    |              ^^^^^^^^^^^^
...
638 |     async fn get_cached_resolved_schema(&self, id: u32) -> Option<ResolvedSchema> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
643 |     async fn cache_resolved_schema(&self, resolved: ResolvedSchema) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
648 |     async fn build_dependency_graph(&self, root_id: u32) -> SchemaResult<DependencyGraph> {
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
665 |     fn add_to_graph<'a>(
    |        ^^^^^^^^^^^^
...
703 |     async fn resolve_from_graph(
    |              ^^^^^^^^^^^^^^^^^^

warning: methods `get_schema`, `put_schema`, `get_resolved_schema`, `put_resolved_schema`, and `invalidate_subject` are never used
   --> src/ferris/schema/client/registry_client.rs:755:8
    |
742 | impl SchemaCache {
    | ---------------- methods in this implementation
...
755 |     fn get_schema(&self, id: u32) -> Option<CachedSchema> {
    |        ^^^^^^^^^^
...
759 |     fn put_schema(&mut self, schema: CachedSchema) {
    |        ^^^^^^^^^^
...
772 |     fn get_resolved_schema(&self, id: u32) -> Option<ResolvedSchema> {
    |        ^^^^^^^^^^^^^^^^^^^
...
776 |     fn put_resolved_schema(&mut self, resolved: ResolvedSchema) {
    |        ^^^^^^^^^^^^^^^^^^^
...
782 |     fn invalidate_subject(&mut self, subject: &str, version: Option<i32>) {
    |        ^^^^^^^^^^^^^^^^^^

warning: methods `topological_sort`, `detect_cycles`, `has_cycle_dfs`, and `is_acyclic` are never used
   --> src/ferris/schema/client/registry_client.rs:814:8
    |
813 | impl DependencyGraph {
    | -------------------- methods in this implementation
814 |     fn topological_sort(&self) -> SchemaResult<Vec<u32>> {
    |        ^^^^^^^^^^^^^^^^
...
866 |     fn detect_cycles(&self) -> Option<Vec<u32>> {
    |        ^^^^^^^^^^^^^
...
883 |     fn has_cycle_dfs(
    |        ^^^^^^^^^^^^^
...
913 |     fn is_acyclic(&self) -> bool {
    |        ^^^^^^^^^^

warning: fields `enable_references`, `auto_retry`, `max_retries`, and `fallback_to_cache` are never read
  --> src/ferris/schema/client/unified_client.rs:32:9
   |
27 | pub struct UnifiedClientConfig {
   |            ------------------- fields in this struct
...
32 |     pub enable_references: bool,
   |         ^^^^^^^^^^^^^^^^^
...
35 |     pub auto_retry: bool,
   |         ^^^^^^^^^^
...
38 |     pub max_retries: u32,
   |         ^^^^^^^^^^^
...
41 |     pub fallback_to_cache: bool,
   |         ^^^^^^^^^^^^^^^^^
   |
   = note: `UnifiedClientConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated items are never used
   --> src/ferris/schema/client/unified_client.rs:63:12
    |
44  | impl UnifiedSchemaRegistryClient {
    | -------------------------------- associated items in this implementation
...
63  |     pub fn from_url(url: &str) -> SchemaResult<Self> {
    |            ^^^^^^^^
...
131 |     pub async fn get_schema_version(
    |                  ^^^^^^^^^^^^^^^^^^
...
169 |     pub async fn check_compatibility(&self, subject: &str, schema: &str) -> SchemaResult<bool> {
    |                  ^^^^^^^^^^^^^^^^^^^
...
174 |     pub async fn resolve_schema_with_references(&self, id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
198 |     pub async fn get_versions(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^
...
208 |     pub async fn delete_schema_version(&self, subject: &str, version: i32) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
221 |     pub fn backend_metadata(&self) -> BackendMetadata {
    |            ^^^^^^^^^^^^^^^^
...
226 |     pub async fn health_check(&self) -> SchemaResult<HealthStatus> {
    |                  ^^^^^^^^^^^^
...
240 |     pub async fn warm_up_cache(&self, schema_ids: Vec<u32>) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^
...
255 |     pub async fn clear_cache(&self) {
    |                  ^^^^^^^^^^^
...
262 |     pub async fn switch_backend(&mut self, new_backend_config: BackendConfig) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^^

warning: methods `backend`, `confluent`, `confluent_with_auth`, `references`, `retry`, and `fallback_to_cache` are never used
   --> src/ferris/schema/client/unified_client.rs:303:12
    |
293 | impl UnifiedClientBuilder {
    | ------------------------- methods in this implementation
...
303 |     pub fn backend(mut self, config: BackendConfig) -> Self {
    |            ^^^^^^^
...
309 |     pub fn confluent(mut self, base_url: &str) -> Self {
    |            ^^^^^^^^^
...
320 |     pub fn confluent_with_auth(mut self, base_url: &str, auth: ConfluentAuth) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
345 |     pub fn references(mut self, enabled: bool) -> Self {
    |            ^^^^^^^^^^
...
351 |     pub fn retry(mut self, enabled: bool, max_retries: u32) -> Self {
    |            ^^^^^
...
358 |     pub fn fallback_to_cache(mut self, enabled: bool) -> Self {
    |            ^^^^^^^^^^^^^^^^^

warning: fields `version` and `source_uri` are never read
  --> src/ferris/schema/client/cache.rs:55:5
   |
43 | struct CacheEntry {
   |        ---------- fields in this struct
...
55 |     version: String,
   |     ^^^^^^^
56 |     /// Source URI this schema was loaded from
57 |     source_uri: String,
   |     ^^^^^^^^^^
   |
   = note: `CacheEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `age` and `access_count` are never read
  --> src/ferris/schema/client/cache.rs:87:9
   |
85 |     Hit {
   |     --- fields in this variant
86 |         schema: Schema,
87 |         age: Duration,
   |         ^^^
88 |         access_count: u64,
   |         ^^^^^^^^^^^^
   |
   = note: `CacheLookupResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `schema`, `age`, and `needs_refresh` are never read
  --> src/ferris/schema/client/cache.rs:94:9
   |
93 |     Stale {
   |     ----- fields in this variant
94 |         schema: Schema,
   |         ^^^^^^
95 |         age: Duration,
   |         ^^^
96 |         needs_refresh: bool,
   |         ^^^^^^^^^^^^^
   |
   = note: `CacheLookupResult` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `Invalidated` is never constructed
   --> src/ferris/schema/client/cache.rs:108:5
    |
102 | pub enum MissReason {
    |          ---------- variant in this enum
...
108 |     Invalidated,
    |     ^^^^^^^^^^^
    |
    = note: `MissReason` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: enum `EvictionPolicy` is never used
   --> src/ferris/schema/client/cache.rs:113:10
    |
113 | pub enum EvictionPolicy {
    |          ^^^^^^^^^^^^^^

warning: methods `clear`, `maintenance`, and `is_version_current` are never used
   --> src/ferris/schema/client/cache.rs:286:18
    |
124 | impl SchemaCache {
    | ---------------- methods in this implementation
...
286 |     pub async fn clear(&self) {
    |                  ^^^^^
...
324 |     pub async fn maintenance(&self) -> SchemaResult<MaintenanceResult> {
    |                  ^^^^^^^^^^^
...
358 |     pub async fn is_version_current(&self, source_uri: &str, version: &str) -> bool {
    |                  ^^^^^^^^^^^^^^^^^^

warning: fields `max_entries`, `expired_entries`, and `active_entries` are never read
   --> src/ferris/schema/client/cache.rs:430:9
    |
428 | pub struct CacheSizeInfo {
    |            ------------- fields in this struct
429 |     pub current_entries: usize,
430 |     pub max_entries: usize,
    |         ^^^^^^^^^^^
431 |     pub expired_entries: usize,
    |         ^^^^^^^^^^^^^^^
432 |     pub active_entries: usize,
    |         ^^^^^^^^^^^^^^
    |
    = note: `CacheSizeInfo` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `MaintenanceResult` is never constructed
   --> src/ferris/schema/client/cache.rs:438:12
    |
438 | pub struct MaintenanceResult {
    |            ^^^^^^^^^^^^^^^^^

warning: methods `miss_rate` and `total_evictions` are never used
   --> src/ferris/schema/client/cache.rs:474:12
    |
463 | impl CacheStatistics {
    | -------------------- methods in this implementation
...
474 |     pub fn miss_rate(&self) -> f64 {
    |            ^^^^^^^^^
...
479 |     pub fn total_evictions(&self) -> u64 {
    |            ^^^^^^^^^^^^^^^

warning: field `resolved_cache` is never read
  --> src/ferris/schema/client/enhanced_cache.rs:24:5
   |
16 | pub struct EnhancedSchemaCache {
   |            ------------------- field in this struct
...
24 |     resolved_cache: Arc<RwLock<HashMap<u32, ResolvedEntry>>>,
   |     ^^^^^^^^^^^^^^

warning: fields `resolved_ttl_seconds`, `refresh_interval_seconds`, `enable_persistence`, and `persistence_path` are never read
  --> src/ferris/schema/client/enhanced_cache.rs:52:9
   |
41 | pub struct CacheConfig {
   |            ----------- fields in this struct
...
52 |     pub resolved_ttl_seconds: u64,
   |         ^^^^^^^^^^^^^^^^^^^^
...
58 |     pub refresh_interval_seconds: u64,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^
...
64 |     pub enable_persistence: bool,
   |         ^^^^^^^^^^^^^^^^^^
...
67 |     pub persistence_path: Option<String>,
   |         ^^^^^^^^^^^^^^^^
   |
   = note: `CacheConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `resolved`, `graph`, `inserted_at`, `last_accessed`, `resolution_time_ms`, and `dependency_count` are never read
  --> src/ferris/schema/client/enhanced_cache.rs:92:5
   |
91 | struct ResolvedEntry {
   |        ------------- fields in this struct
92 |     resolved: ResolvedSchema,
   |     ^^^^^^^^
93 |     graph: DependencyGraph,
   |     ^^^^^
94 |     inserted_at: Instant,
   |     ^^^^^^^^^^^
95 |     last_accessed: Instant,
   |     ^^^^^^^^^^^^^
96 |     resolution_time_ms: u64,
   |     ^^^^^^^^^^^^^^^^^^
97 |     dependency_count: usize,
   |     ^^^^^^^^^^^^^^^^
   |
   = note: `ResolvedEntry` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Normal` and `Critical` are never constructed
   --> src/ferris/schema/client/enhanced_cache.rs:132:5
    |
130 | enum RefreshPriority {
    |      --------------- variants in this enum
131 |     Low = 0,
132 |     Normal = 1,
    |     ^^^^^^
133 |     High = 2,
134 |     Critical = 3,
    |     ^^^^^^^^
    |
    = note: `RefreshPriority` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/ferris/schema/client/enhanced_cache.rs:299:18
    |
183 | impl EnhancedSchemaCache {
    | ------------------------ methods in this implementation
...
299 |     pub async fn get_resolved(&self, schema_id: u32) -> Option<ResolvedSchema> {
    |                  ^^^^^^^^^^^^
...
322 |     pub async fn put_resolved(
    |                  ^^^^^^^^^^^^
...
345 |     pub async fn invalidate(&self, schema_id: u32) {
    |                  ^^^^^^^^^^
...
376 |     pub async fn clear(&self) {
    |                  ^^^^^
...
410 |     pub async fn warm_up(&self, schema_ids: Vec<u32>) {
    |                  ^^^^^^^
...
417 |     pub async fn persist(&self) -> SchemaResult<()> {
    |                  ^^^^^^^
...
447 |     pub async fn load(&self) -> SchemaResult<()> {
    |                  ^^^^
...
577 |     async fn get_dependents(&self, schema_id: u32) -> Vec<u32> {
    |              ^^^^^^^^^^^^^^
...
586 |     async fn invalidate_resolved(&self, schema_id: u32) {
    |              ^^^^^^^^^^^^^^^^^^^
...
604 |     async fn export_state(&self) -> CacheState {
    |              ^^^^^^^^^^^^
...
616 |     async fn import_state(&self, _state: CacheState) {
    |              ^^^^^^^^^^^^

warning: methods `remove` and `clear` are never used
   --> src/ferris/schema/client/enhanced_cache.rs:661:8
    |
622 | impl<K: std::hash::Hash + Eq + Clone, V: Clone> LruCache<K, V> {
    | -------------------------------------------------------------- methods in this implementation
...
661 |     fn remove(&mut self, key: &K) -> Option<V> {
    |        ^^^^^^
...
667 |     fn clear(&mut self) {
    |        ^^^^^

warning: method `is_expired` is never used
   --> src/ferris/schema/client/enhanced_cache.rs:681:8
    |
680 | impl ResolvedEntry {
    | ------------------ method in this implementation
681 |     fn is_expired(&self, ttl_seconds: u64) -> bool {
    |        ^^^^^^^^^^

warning: method `clear` is never used
   --> src/ferris/schema/client/enhanced_cache.rs:695:8
    |
686 | impl DependencyIndex {
    | -------------------- method in this implementation
...
695 |     fn clear(&mut self) {
    |        ^^^^^

warning: struct `MultiLevelSchemaCache` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:16:12
   |
16 | pub struct MultiLevelSchemaCache {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `HotCache` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:33:8
   |
33 | struct HotCache {
   |        ^^^^^^^^

warning: struct `WarmCache` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:44:8
   |
44 | struct WarmCache {
   |        ^^^^^^^^^

warning: struct `ColdCache` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:57:8
   |
57 | struct ColdCache {
   |        ^^^^^^^^^

warning: struct `HotCacheEntry` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:70:8
   |
70 | struct HotCacheEntry {
   |        ^^^^^^^^^^^^^

warning: struct `WarmCacheEntry` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:80:8
   |
80 | struct WarmCacheEntry {
   |        ^^^^^^^^^^^^^^

warning: struct `ColdCacheEntry` is never constructed
  --> src/ferris/schema/client/multilevel_cache.rs:91:8
   |
91 | struct ColdCacheEntry {
   |        ^^^^^^^^^^^^^^

warning: struct `AccessPattern` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:103:8
    |
103 | struct AccessPattern {
    |        ^^^^^^^^^^^^^

warning: enum `AccessPatternType` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:113:6
    |
113 | enum AccessPatternType {
    |      ^^^^^^^^^^^^^^^^^

warning: struct `AdaptiveCacheManager` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:123:8
    |
123 | struct AdaptiveCacheManager {
    |        ^^^^^^^^^^^^^^^^^^^^

warning: struct `PerformanceMetrics` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:133:12
    |
133 | pub struct PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^

warning: struct `AdaptationEvent` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:145:8
    |
145 | struct AdaptationEvent {
    |        ^^^^^^^^^^^^^^^

warning: enum `AdaptationEventType` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:153:6
    |
153 | enum AdaptationEventType {
    |      ^^^^^^^^^^^^^^^^^^^

warning: enum `CacheLevel` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:173:6
    |
173 | enum CacheLevel {
    |      ^^^^^^^^^^

warning: struct `RefreshManager` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:181:8
    |
181 | struct RefreshManager {
    |        ^^^^^^^^^^^^^^

warning: struct `RefreshTask` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:188:8
    |
188 | struct RefreshTask {
    |        ^^^^^^^^^^^

warning: enum `RefreshPriority` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:196:6
    |
196 | enum RefreshPriority {
    |      ^^^^^^^^^^^^^^^

warning: struct `RefreshScheduler` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:205:8
    |
205 | struct RefreshScheduler {
    |        ^^^^^^^^^^^^^^^^

warning: struct `CacheStats` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:213:12
    |
213 | pub struct CacheStats {
    |            ^^^^^^^^^^

warning: struct `CompressionStats` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:225:8
    |
225 | struct CompressionStats {
    |        ^^^^^^^^^^^^^^^^

warning: fields `heat_decay_rate`, `background_refresh_enabled`, `refresh_interval`, and `max_concurrent_refreshes` are never read
   --> src/ferris/schema/client/multilevel_cache.rs:254:9
    |
234 | pub struct MultiLevelCacheConfig {
    |            --------------------- fields in this struct
...
254 |     pub heat_decay_rate: f64,
    |         ^^^^^^^^^^^^^^^
...
257 |     pub background_refresh_enabled: bool,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
258 |     pub refresh_interval: Duration,
    |         ^^^^^^^^^^^^^^^^
259 |     pub max_concurrent_refreshes: usize,
    |         ^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `MultiLevelCacheConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated items are never used
   --> src/ferris/schema/client/multilevel_cache.rs:291:12
    |
289 | impl MultiLevelSchemaCache {
    | -------------------------- associated items in this implementation
290 |     /// Create a new multi-level cache with configuration
291 |     pub fn new(config: MultiLevelCacheConfig) -> Self {
    |            ^^^
...
307 |     pub async fn get_schema(&self, schema_id: u32) -> SchemaResult<Option<CachedSchema>> {
    |                  ^^^^^^^^^^
...
351 |     pub async fn store_schema(&self, schema: CachedSchema) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^
...
373 |     pub async fn refresh_schema(
    |                  ^^^^^^^^^^^^^^
...
392 |     pub async fn get_cache_stats(&self) -> CacheStatsSummary {
    |                  ^^^^^^^^^^^^^^^
...
409 |     pub async fn start_background_tasks(&self) {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
434 |     async fn l1_lookup(&self, schema_id: u32) -> Option<HotCacheEntry> {
    |              ^^^^^^^^^
...
455 |     async fn l2_lookup(&self, schema_id: u32) -> Option<WarmCacheEntry> {
    |              ^^^^^^^^^
...
471 |     async fn l3_lookup(&self, schema_id: u32) -> Option<ColdCacheEntry> {
    |              ^^^^^^^^^
...
482 |     async fn should_promote_to_l1(&self, _schema_id: u32, pattern: &AccessPattern) -> bool {
    |              ^^^^^^^^^^^^^^^^^^^^
...
496 |     async fn should_promote_to_l2(&self, _schema_id: u32, entry: &ColdCacheEntry) -> bool {
    |              ^^^^^^^^^^^^^^^^^^^^
...
506 |     async fn promote_to_l1(&self, schema_id: u32, schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^
...
529 |     async fn promote_to_l2(&self, schema_id: u32, schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^
...
552 |     async fn store_in_l1(&self, schema_id: u32, schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^
...
556 |     async fn store_in_l2(&self, schema_id: u32, schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^
...
560 |     async fn store_in_l3(&self, schema_id: u32, schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^
...
585 |     fn calculate_heat_score(&self, frequency: u64, last_accessed: Instant) -> f64 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
591 |     async fn update_access_pattern(&self, pattern: &mut AccessPattern) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
616 |     fn classify_access_pattern(&self, intervals: &[Duration]) -> AccessPatternType {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
643 |     async fn predict_optimal_cache_level(&self, _schema: &CachedSchema) -> CacheLevel {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
648 |     fn compress_schema(&self, schema: &CachedSchema) -> SchemaResult<Vec<u8>> {
    |        ^^^^^^^^^^^^^^^
...
653 |     fn decompress_schema(&self, entry: &ColdCacheEntry) -> SchemaResult<CachedSchema> {
    |        ^^^^^^^^^^^^^^^^^
...
671 |     fn estimate_schema_size(&self, schema: &CachedSchema) -> u64 {
    |        ^^^^^^^^^^^^^^^^^^^^
...
677 |     async fn evict_from_l1(&self, l1: &mut HotCache) {
    |              ^^^^^^^^^^^^^
...
685 |     async fn evict_from_l2(&self, l2: &mut WarmCache) {
    |              ^^^^^^^^^^^^^
...
696 |     async fn update_all_levels(&self, _schema_id: u32, _schema: CachedSchema) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^^^^^
...
700 |     async fn schedule_dependent_refreshes(&self, _schema_id: u32) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
704 |     async fn record_hit(&self, _level: CacheLevel, _schema_id: u32) {
    |              ^^^^^^^^^^
...
708 |     async fn record_miss(&self) {
    |              ^^^^^^^^^^^
...
712 |     async fn calculate_total_memory_usage(&self) -> u64 {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
717 |     async fn calculate_efficiency_score(&self) -> f64 {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
722 |     async fn run_adaptive_management(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
726 |     async fn run_refresh_scheduler(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
730 |     async fn run_performance_monitoring(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `CacheStatsSummary` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:737:12
    |
737 | pub struct CacheStatsSummary {
    |            ^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:749:8
    |
748 | impl HotCache {
    | ------------- associated function in this implementation
749 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:759:8
    |
758 | impl WarmCache {
    | -------------- associated function in this implementation
759 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:770:8
    |
769 | impl ColdCache {
    | -------------- associated function in this implementation
770 |     fn new(storage_path: String) -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:781:8
    |
780 | impl AccessPattern {
    | ------------------ associated function in this implementation
781 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:793:8
    |
792 | impl AdaptiveCacheManager {
    | ------------------------- associated function in this implementation
793 |     fn new(promotion_threshold: f64, demotion_threshold: f64, heat_decay_rate: f64) -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:805:8
    |
804 | impl PerformanceMetrics {
    | ----------------------- associated function in this implementation
805 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:819:8
    |
818 | impl RefreshManager {
    | ------------------- associated function in this implementation
819 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:829:8
    |
828 | impl RefreshScheduler {
    | --------------------- associated function in this implementation
829 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:839:8
    |
838 | impl CacheStats {
    | --------------- associated function in this implementation
839 |     fn new() -> Self {
    |        ^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/multilevel_cache.rs:853:8
    |
852 | impl CompressionStats {
    | --------------------- associated function in this implementation
853 |     fn new() -> Self {
    |        ^^^

warning: fields `registry`, `dependency_cache`, `evolution_tracker`, and `config` are never read
  --> src/ferris/schema/client/reference_resolver.rs:17:5
   |
16 | pub struct SchemaReferenceResolver {
   |            ----------------------- fields in this struct
17 |     registry: Arc<SchemaRegistryClient>,
   |     ^^^^^^^^
18 |     dependency_cache: Arc<RwLock<HashMap<u32, Vec<ResolvedDependency>>>>,
   |     ^^^^^^^^^^^^^^^^
19 |     evolution_tracker: Arc<RwLock<SchemaEvolutionTracker>>,
   |     ^^^^^^^^^^^^^^^^^
20 |     config: ResolverConfig,
   |     ^^^^^^

warning: fields `max_depth`, `detect_cycles`, `cache_dependencies`, `validate_compatibility`, and `max_references` are never read
  --> src/ferris/schema/client/reference_resolver.rs:27:9
   |
25 | pub struct ResolverConfig {
   |            -------------- fields in this struct
26 |     /// Maximum depth for reference resolution
27 |     pub max_depth: usize,
   |         ^^^^^^^^^
28 |     /// Enable circular reference detection
29 |     pub detect_cycles: bool,
   |         ^^^^^^^^^^^^^
30 |     /// Cache resolved dependencies
31 |     pub cache_dependencies: bool,
   |         ^^^^^^^^^^^^^^^^^^
32 |     /// Validate schema compatibility
33 |     pub validate_compatibility: bool,
   |         ^^^^^^^^^^^^^^^^^^^^^^
34 |     /// Maximum number of references per schema
35 |     pub max_references: usize,
   |         ^^^^^^^^^^^^^^
   |
   = note: `ResolverConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `schema_id`, `resolved_at`, `dependency_depth`, and `schema` are never read
  --> src/ferris/schema/client/reference_resolver.rs:53:9
   |
52 | pub struct ResolvedDependency {
   |            ------------------ fields in this struct
53 |     pub schema_id: u32,
   |         ^^^^^^^^^
54 |     pub resolved_at: std::time::Instant,
   |         ^^^^^^^^^^^
55 |     pub dependency_depth: usize,
   |         ^^^^^^^^^^^^^^^^
56 |     pub schema: CachedSchema,
   |         ^^^^^^
   |
   = note: `ResolvedDependency` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `evolution_history` and `subject_compatibility` are never read
  --> src/ferris/schema/client/reference_resolver.rs:62:5
   |
61 | pub struct SchemaEvolutionTracker {
   |            ---------------------- fields in this struct
62 |     evolution_history: HashMap<String, Vec<EvolutionRecord>>,
   |     ^^^^^^^^^^^^^^^^^
63 |     subject_compatibility: HashMap<String, CompatibilityLevel>,
   |     ^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `SchemaEvolutionTracker` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `record_evolution` and `get_evolution_history` are never used
  --> src/ferris/schema/client/reference_resolver.rs:80:12
   |
72 | impl SchemaEvolutionTracker {
   | --------------------------- methods in this implementation
...
80 |     pub fn record_evolution(&mut self, subject: String, record: EvolutionRecord) {
   |            ^^^^^^^^^^^^^^^^
...
87 |     pub fn get_evolution_history(&self, subject: &str) -> Vec<&EvolutionRecord> {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: fields `from_version`, `to_version`, `from_schema_id`, `to_schema_id`, `evolution_type`, and `timestamp` are never read
   --> src/ferris/schema/client/reference_resolver.rs:97:9
    |
96  | pub struct EvolutionRecord {
    |            --------------- fields in this struct
97  |     pub from_version: i32,
    |         ^^^^^^^^^^^^
98  |     pub to_version: i32,
    |         ^^^^^^^^^^
99  |     pub from_schema_id: u32,
    |         ^^^^^^^^^^^^^^
100 |     pub to_schema_id: u32,
    |         ^^^^^^^^^^^^
101 |     pub evolution_type: EvolutionType,
    |         ^^^^^^^^^^^^^^
102 |     pub timestamp: std::time::Instant,
    |         ^^^^^^^^^
    |
    = note: `EvolutionRecord` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Compatible`, `Breaking`, `ReferenceAdded`, and `ReferenceRemoved` are never constructed
   --> src/ferris/schema/client/reference_resolver.rs:108:5
    |
107 | pub enum EvolutionType {
    |          ------------- variants in this enum
108 |     Compatible,
    |     ^^^^^^^^^^
109 |     Breaking,
    |     ^^^^^^^^
110 |     ReferenceAdded,
    |     ^^^^^^^^^^^^^^
111 |     ReferenceRemoved,
    |     ^^^^^^^^^^^^^^^^
    |
    = note: `EvolutionType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `None`, `Backward`, `Forward`, `Full`, and `Transitive` are never constructed
   --> src/ferris/schema/client/reference_resolver.rs:117:5
    |
116 | pub enum CompatibilityLevel {
    |          ------------------ variants in this enum
117 |     None,
    |     ^^^^
118 |     Backward,
    |     ^^^^^^^^
119 |     Forward,
    |     ^^^^^^^
120 |     Full,
    |     ^^^^
121 |     Transitive,
    |     ^^^^^^^^^^
    |
    = note: `CompatibilityLevel` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `CompatibilityResult` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:126:12
    |
126 | pub struct CompatibilityResult {
    |            ^^^^^^^^^^^^^^^^^^^

warning: struct `BreakingChange` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:135:12
    |
135 | pub struct BreakingChange {
    |            ^^^^^^^^^^^^^^

warning: enum `ChangeSeverity` is never used
   --> src/ferris/schema/client/reference_resolver.rs:144:10
    |
144 | pub enum ChangeSeverity {
    |          ^^^^^^^^^^^^^^

warning: struct `MigrationPlan` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:153:12
    |
153 | pub struct MigrationPlan {
    |            ^^^^^^^^^^^^^

warning: struct `MigrationStep` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:163:12
    |
163 | pub struct MigrationStep {
    |            ^^^^^^^^^^^^^

warning: enum `MigrationOperation` is never used
   --> src/ferris/schema/client/reference_resolver.rs:172:10
    |
172 | pub enum MigrationOperation {
    |          ^^^^^^^^^^^^^^^^^^

warning: enum `RiskLevel` is never used
   --> src/ferris/schema/client/reference_resolver.rs:199:10
    |
199 | pub enum RiskLevel {
    |          ^^^^^^^^^

warning: enum `RolloutStrategy` is never used
   --> src/ferris/schema/client/reference_resolver.rs:208:10
    |
208 | pub enum RolloutStrategy {
    |          ^^^^^^^^^^^^^^^

warning: struct `RolloutPlan` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:216:12
    |
216 | pub struct RolloutPlan {
    |            ^^^^^^^^^^^

warning: struct `RolloutPhase` is never constructed
   --> src/ferris/schema/client/reference_resolver.rs:225:12
    |
225 | pub struct RolloutPhase {
    |            ^^^^^^^^^^^^

warning: enum `Color` is never used
   --> src/ferris/schema/client/reference_resolver.rs:235:6
    |
235 | enum Color {
    |      ^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/reference_resolver.rs:243:12
    |
241 | impl SchemaReferenceResolver {
    | ---------------------------- associated items in this implementation
242 |     /// Create new resolver with registry client
243 |     pub fn new(registry: Arc<SchemaRegistryClient>) -> Self {
    |            ^^^
...
263 |     pub fn with_config(registry: Arc<SchemaRegistryClient>, config: ResolverConfig) -> Self {
    |            ^^^^^^^^^^^
...
273 |     pub async fn resolve_with_references(&self, schema_id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
307 |     pub async fn build_dependency_graph(&self, schema_id: u32) -> SchemaResult<DependencyGraph> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
325 |     async fn build_graph_recursively(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     fn detect_and_handle_cycles(&self, graph: &DependencyGraph) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
417 |     fn dfs_cycle_detection(
    |        ^^^^^^^^^^^^^^^^^^^
...
452 |     fn build_cycle_path(&self, parent: &HashMap<u32, u32>) -> Vec<u32> {
    |        ^^^^^^^^^^^^^^^^
...
477 |     async fn validate_reference_compatibility(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
494 |     async fn get_cached_resolution(&self, _schema_id: u32) -> Option<ResolvedSchema> {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
500 |     async fn cache_resolution(
    |              ^^^^^^^^^^^^^^^^
...
510 |     fn topological_sort(&self, graph: &DependencyGraph) -> SchemaResult<Vec<u32>> {
    |        ^^^^^^^^^^^^^^^^
...
562 |     async fn resolve_from_graph(
    |              ^^^^^^^^^^^^^^^^^^
...
592 |     fn extract_references(&self, _schema: &str) -> SchemaResult<Vec<SchemaReference>> {
    |        ^^^^^^^^^^^^^^^^^^
...
599 |     async fn track_evolution(&self, subject: String, evolution: EvolutionRecord) {
    |              ^^^^^^^^^^^^^^^
...
605 |     fn extract_fields(&self, _schema: &str) -> HashSet<String> {
    |        ^^^^^^^^^^^^^^
...
611 |     async fn create_canary_plan(
    |              ^^^^^^^^^^^^^^^^^^
...
647 |     async fn create_blue_green_plan(
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
676 |     async fn create_rolling_plan(
    |              ^^^^^^^^^^^^^^^^^^^

warning: field `sample_size` is never read
  --> src/ferris/schema/client/providers.rs:22:5
   |
20 | pub struct FileSchemaProvider {
   |            ------------------ field in this struct
21 |     /// Maximum number of records to sample for schema inference
22 |     sample_size: usize,
   |     ^^^^^^^^^^^

warning: field `sample_size` is never read
  --> src/ferris/schema/client/providers.rs:30:5
   |
26 | pub struct S3SchemaProvider {
   |            ---------------- field in this struct
...
30 |     sample_size: usize,
   |     ^^^^^^^^^^^

warning: struct `JsonSchemaProvider` is never constructed
  --> src/ferris/schema/client/providers.rs:34:12
   |
34 | pub struct JsonSchemaProvider {
   |            ^^^^^^^^^^^^^^^^^^

warning: method `with_schema_registry` is never used
  --> src/ferris/schema/client/providers.rs:53:12
   |
44 | impl KafkaSchemaProvider {
   | ------------------------ method in this implementation
...
53 |     pub fn with_schema_registry(mut self, registry_url: String) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: method `with_sample_size` is never used
   --> src/ferris/schema/client/providers.rs:160:12
    |
155 | impl FileSchemaProvider {
    | ----------------------- method in this implementation
...
160 |     pub fn with_sample_size(mut self, sample_size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^

warning: method `with_sample_size` is never used
   --> src/ferris/schema/client/providers.rs:303:12
    |
295 | impl S3SchemaProvider {
    | --------------------- method in this implementation
...
303 |     pub fn with_sample_size(mut self, sample_size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^

warning: type alias `SchemaRegistryServer` is never used
  --> src/ferris/schema/server/mod.rs:22:10
   |
22 | pub type SchemaRegistryServer = dyn SchemaRegistryBackend;
   |          ^^^^^^^^^^^^^^^^^^^^

warning: methods `get_schema_version`, `check_compatibility`, `get_versions`, `delete_schema_version`, `metadata`, and `health_check` are never used
  --> src/ferris/schema/server/registry_backend.rs:31:14
   |
23 | pub trait SchemaRegistryBackend: Send + Sync {
   |           --------------------- methods in this trait
...
31 |     async fn get_schema_version(&self, subject: &str, version: i32)
   |              ^^^^^^^^^^^^^^^^^^
...
43 |     async fn check_compatibility(&self, subject: &str, schema: &str) -> SchemaResult<bool>;
   |              ^^^^^^^^^^^^^^^^^^^
...
46 |     async fn get_versions(&self, subject: &str) -> SchemaResult<Vec<i32>>;
   |              ^^^^^^^^^^^^
...
52 |     async fn delete_schema_version(&self, subject: &str, version: i32) -> SchemaResult<()>;
   |              ^^^^^^^^^^^^^^^^^^^^^
...
55 |     fn metadata(&self) -> BackendMetadata;
   |        ^^^^^^^^
...
58 |     async fn health_check(&self) -> SchemaResult<HealthStatus>;
   |              ^^^^^^^^^^^^

warning: struct `BackendMetadata` is never constructed
  --> src/ferris/schema/server/registry_backend.rs:74:12
   |
74 | pub struct BackendMetadata {
   |            ^^^^^^^^^^^^^^^

warning: struct `BackendCapabilities` is never constructed
  --> src/ferris/schema/server/registry_backend.rs:83:12
   |
83 | pub struct BackendCapabilities {
   |            ^^^^^^^^^^^^^^^^^^^

warning: struct `HealthStatus` is never constructed
  --> src/ferris/schema/server/registry_backend.rs:95:12
   |
95 | pub struct HealthStatus {
   |            ^^^^^^^^^^^^

warning: variants `Custom` and `FileSystem` are never constructed
   --> src/ferris/schema/server/registry_backend.rs:123:5
    |
104 | pub enum BackendConfig {
    |          ------------- variants in this enum
...
123 |     Custom {
    |     ^^^^^^
...
129 |     FileSystem {
    |     ^^^^^^^^^^
    |
    = note: `BackendConfig` has a derived impl for the trait `Clone`, but this is intentionally ignored during dead code analysis

warning: fields `access_key_id`, `secret_access_key`, and `session_token` are never read
  --> src/ferris/schema/server/backends/amazon_msk.rs:18:9
   |
17 | pub struct AwsCredentials {
   |            -------------- fields in this struct
18 |     pub access_key_id: String,
   |         ^^^^^^^^^^^^^
19 |     pub secret_access_key: String,
   |         ^^^^^^^^^^^^^^^^^
20 |     pub session_token: Option<String>,
   |         ^^^^^^^^^^^^^
   |
   = note: `AwsCredentials` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `cluster_arn`, `region`, `registry_name`, and `credentials` are never read
  --> src/ferris/schema/server/backends/amazon_msk.rs:25:5
   |
24 | pub struct AmazonMskSchemaRegistryBackend {
   |            ------------------------------ fields in this struct
25 |     cluster_arn: String,
   |     ^^^^^^^^^^^
26 |     region: String,
   |     ^^^^^^
27 |     registry_name: String,
   |     ^^^^^^^^^^^^^
28 |     credentials: AwsCredentials,
   |     ^^^^^^^^^^^

warning: variants `Basic`, `Bearer`, and `ApiKey` are never constructed
  --> src/ferris/schema/server/backends/confluent.rs:20:5
   |
18 | pub enum ConfluentAuth {
   |          ------------- variants in this enum
19 |     None,
20 |     Basic { username: String, password: String },
   |     ^^^^^
21 |     Bearer { token: String },
   |     ^^^^^^
22 |     ApiKey { key: String, secret: String },
   |     ^^^^^^
   |
   = note: `ConfluentAuth` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `watch_for_changes` is never read
  --> src/ferris/schema/server/backends/filesystem.rs:25:5
   |
23 | pub struct FileSystemSchemaRegistryBackend {
   |            ------------------------------- field in this struct
24 |     base_path: PathBuf,
25 |     watch_for_changes: bool,
   |     ^^^^^^^^^^^^^^^^^

warning: field `created_at` is never read
  --> src/ferris/schema/server/backends/memory.rs:23:9
   |
18 | pub struct SchemaVersion {
   |            ------------- field in this struct
...
23 |     pub created_at: i64,
   |         ^^^^^^^^^^
   |
   = note: `SchemaVersion` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `service_url`, `auth_token`, `namespace`, and `timeout_seconds` are never read
  --> src/ferris/schema/server/backends/pulsar.rs:17:5
   |
16 | pub struct PulsarSchemaRegistryBackend {
   |            --------------------------- fields in this struct
17 |     service_url: String,
   |     ^^^^^^^^^^^
18 |     auth_token: Option<String>,
   |     ^^^^^^^^^^
19 |     namespace: String,
   |     ^^^^^^^^^
20 |     timeout_seconds: u64,
   |     ^^^^^^^^^^^^^^^

warning: fields `allow_field_additions`, `allow_field_deletions`, and `allow_nullability_changes` are never read
  --> src/ferris/schema/evolution.rs:25:9
   |
23 | pub struct EvolutionConfig {
   |            --------------- fields in this struct
24 |     /// Whether to allow field additions
25 |     pub allow_field_additions: bool,
   |         ^^^^^^^^^^^^^^^^^^^^^
26 |     /// Whether to allow field deletions
27 |     pub allow_field_deletions: bool,
   |         ^^^^^^^^^^^^^^^^^^^^^
...
31 |     pub allow_nullability_changes: bool,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `EvolutionConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `field_mappings` is never read
  --> src/ferris/schema/evolution.rs:76:9
   |
73 | pub struct MigrationPlan {
   |            ------------- field in this struct
...
76 |     pub field_mappings: Vec<FieldMapping>,
   |         ^^^^^^^^^^^^^^
   |
   = note: `MigrationPlan` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Renamed` and `Dropped` are never constructed
  --> src/ferris/schema/evolution.rs:86:5
   |
82 | pub enum FieldMapping {
   |          ------------ variants in this enum
...
86 |     Renamed { old_name: String, new_name: String },
   |     ^^^^^^^
...
98 |     Dropped { field_name: String },
   |     ^^^^^^^
   |
   = note: `FieldMapping` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `target_field` and `operation` are never read
   --> src/ferris/schema/evolution.rs:104:9
    |
103 | pub struct FieldTransformation {
    |            ------------------- fields in this struct
104 |     pub target_field: String,
    |         ^^^^^^^^^^^^
105 |     pub operation: TransformationOperation,
    |         ^^^^^^^^^
    |
    = note: `FieldTransformation` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `source_field` is never read
   --> src/ferris/schema/evolution.rs:112:12
    |
112 |     Copy { source_field: String },
    |     ----   ^^^^^^^^^^^^
    |     |
    |     field in this variant
    |
    = note: `TransformationOperation` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `source_field` and `converter` are never read
   --> src/ferris/schema/evolution.rs:115:9
    |
114 |     Convert {
    |     ------- fields in this variant
115 |         source_field: String,
    |         ^^^^^^^^^^^^
116 |         converter: TypeConverter,
    |         ^^^^^^^^^
    |
    = note: `TransformationOperation` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `value` is never read
   --> src/ferris/schema/evolution.rs:119:16
    |
119 |     Constant { value: FieldValue },
    |     --------   ^^^^^
    |     |
    |     field in this variant
    |
    = note: `TransformationOperation` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `Calculate` is never constructed
   --> src/ferris/schema/evolution.rs:121:5
    |
110 | pub enum TransformationOperation {
    |          ----------------------- variant in this enum
...
121 |     Calculate {
    |     ^^^^^^^^^
    |
    = note: `TransformationOperation` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `0` is never read
   --> src/ferris/schema/evolution.rs:140:12
    |
140 |     Custom(String), // Custom conversion function name
    |     ------ ^^^^^^
    |     |
    |     field in this variant
    |
    = note: `TypeConverter` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis
help: consider changing the field to be of unit type to suppress this warning while preserving the field numbering, or remove the field
    |
140 -     Custom(String), // Custom conversion function name
140 +     Custom(()), // Custom conversion function name
    |

warning: associated items `with_config`, `evolve_record`, `check_compatibility`, `convert_field_value`, `check_backward_compatibility`, and `check_forward_compatibility` are never used
   --> src/ferris/schema/evolution.rs:153:12
    |
143 | impl SchemaEvolution {
    | -------------------- associated items in this implementation
...
153 |     pub fn with_config(config: EvolutionConfig) -> Self {
    |            ^^^^^^^^^^^
...
251 |     pub fn evolve_record(
    |            ^^^^^^^^^^^^^
...
301 |     pub fn check_compatibility(
    |            ^^^^^^^^^^^^^^^^^^^
...
566 |     fn convert_field_value(
    |        ^^^^^^^^^^^^^^^^^^^
...
624 |     fn check_backward_compatibility(&self, diff: &SchemaDiff) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
652 |     fn check_forward_compatibility(&self, diff: &SchemaDiff) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: fields `auto_discovery` and `validation_enabled` are never read
  --> src/ferris/schema/registry.rs:30:9
   |
24 | pub struct RegistryConfig {
   |            -------------- fields in this struct
...
30 |     pub auto_discovery: bool,
   |         ^^^^^^^^^^^^^^
31 |     /// Whether to enable schema validation
32 |     pub validation_enabled: bool,
   |         ^^^^^^^^^^^^^^^^^^
   |
   = note: `RegistryConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `supports_scheme` is never used
  --> src/ferris/schema/registry.rs:51:8
   |
46 | pub trait SchemaProvider: Send + Sync {
   |           -------------- method in this trait
...
51 |     fn supports_scheme(&self, scheme: &str) -> bool;
   |        ^^^^^^^^^^^^^^^

warning: fields `name`, `version`, `supported_schemes`, and `capabilities` are never read
  --> src/ferris/schema/registry.rs:60:9
   |
59 | pub struct ProviderMetadata {
   |            ---------------- fields in this struct
60 |     pub name: String,
   |         ^^^^
61 |     pub version: String,
   |         ^^^^^^^
62 |     pub supported_schemes: Vec<String>,
   |         ^^^^^^^^^^^^^^^^^
63 |     pub capabilities: Vec<String>,
   |         ^^^^^^^^^^^^
   |
   = note: `ProviderMetadata` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `with_config`, `get_schema`, `invalidate_cache`, `clear_cache`, and `validate_schema` are never used
   --> src/ferris/schema/registry.rs:83:12
    |
72  | impl SchemaRegistry {
    | ------------------- associated items in this implementation
...
83  |     pub fn with_config(config: RegistryConfig) -> Self {
    |            ^^^^^^^^^^^
...
125 |     pub async fn get_schema(&self, source_uri: &str) -> SchemaResult<Schema> {
    |                  ^^^^^^^^^^
...
158 |     pub async fn invalidate_cache(&self, source_uri: &str) {
    |                  ^^^^^^^^^^^^^^^^
...
164 |     pub async fn clear_cache(&self) {
    |                  ^^^^^^^^^^^
...
206 |     pub fn validate_schema(&self, schema: &Schema) -> SchemaResult<()> {
    |            ^^^^^^^^^^^^^^^

warning: fields `expired_entries`, `total_access_count`, and `hit_rate` are never read
   --> src/ferris/schema/registry.rs:301:9
    |
299 | pub struct CacheStats {
    |            ---------- fields in this struct
300 |     pub total_entries: usize,
301 |     pub expired_entries: usize,
    |         ^^^^^^^^^^^^^^^
302 |     pub active_entries: usize,
303 |     pub total_access_count: u64,
    |         ^^^^^^^^^^^^^^^^^^
304 |     pub hit_rate: f64,
    |         ^^^^^^^^
    |
    = note: `CacheStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: enum `SerializationCodec` is never used
   --> src/ferris/serialization/mod.rs:116:10
    |
116 | pub enum SerializationCodec {
    |          ^^^^^^^^^^^^^^^^^^

warning: method `format_name` is never used
   --> src/ferris/serialization/mod.rs:145:12
    |
143 | impl SerializationCodec {
    | ----------------------- method in this implementation
144 |     /// Get the format name for debugging/logging
145 |     pub fn format_name(&self) -> &'static str {
    |            ^^^^^^^^^^^

warning: multiple variants are never constructed
  --> src/ferris/serialization/error.rs:9:5
   |
7  | pub enum SerializationError {
   |          ------------------ variants in this enum
8  |     // Legacy string-only variants (kept for backward compatibility)
9  |     SerializationFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^
10 |     DeserializationFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^^^
11 |     FormatConversionFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^^^^
12 |     UnsupportedType(String),
   |     ^^^^^^^^^^^^^^^
...
22 |     AvroError {
   |     ^^^^^^^^^
...
27 |     ProtobufError {
   |     ^^^^^^^^^^^^^
...
32 |     EncodingError {
   |     ^^^^^^^^^^^^^
...
37 |     SchemaValidationError {
   |     ^^^^^^^^^^^^^^^^^^^^^
...
42 |     TypeConversionError {
   |     ^^^^^^^^^^^^^^^^^^^
...
50 |     JsonSerializationFailed(Box<dyn std::error::Error + Send + Sync>),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `SerializationError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: associated functions `avro_error`, `protobuf_error`, `encoding_error`, `schema_validation_error`, and `type_conversion_error` are never used
   --> src/ferris/serialization/error.rs:151:12
    |
138 | impl SerializationError {
    | ----------------------- associated functions in this implementation
...
151 |     pub fn avro_error(
    |            ^^^^^^^^^^
...
162 |     pub fn protobuf_error(
    |            ^^^^^^^^^^^^^^
...
173 |     pub fn encoding_error(
    |            ^^^^^^^^^^^^^^
...
184 |     pub fn schema_validation_error(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
195 |     pub fn type_conversion_error(
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: trait `SerializationFormat` is never used
  --> src/ferris/serialization/traits.rs:17:11
   |
17 | pub trait SerializationFormat: Send + Sync {
   |           ^^^^^^^^^^^^^^^^^^^

warning: struct `JsonFormat` is never constructed
 --> src/ferris/serialization/json.rs:8:12
  |
8 | pub struct JsonFormat;
  |            ^^^^^^^^^^

warning: struct `AvroFormat` is never constructed
  --> src/ferris/serialization/avro.rs:11:12
   |
11 | pub struct AvroFormat {
   |            ^^^^^^^^^^

warning: associated functions `new`, `with_schemas`, and `default_format` are never used
  --> src/ferris/serialization/avro.rs:20:12
   |
18 | impl AvroFormat {
   | --------------- associated functions in this implementation
19 |     /// Create new Avro format with schema
20 |     pub fn new(schema_json: &str) -> Result<Self, SerializationError> {
   |            ^^^
...
37 |     pub fn with_schemas(
   |            ^^^^^^^^^^^^
...
61 |     pub fn default_format() -> Result<Self, SerializationError> {
   |            ^^^^^^^^^^^^^^

warning: function `record_to_avro_value_with_schema` is never used
   --> src/ferris/serialization/avro.rs:152:4
    |
152 | fn record_to_avro_value_with_schema(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `avro_value_to_record_with_schema` is never used
   --> src/ferris/serialization/avro.rs:214:4
    |
214 | fn avro_value_to_record_with_schema(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `extract_union_null_indices` is never used
   --> src/ferris/serialization/avro.rs:237:4
    |
237 | fn extract_union_null_indices(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `extract_decimal_fields` is never used
   --> src/ferris/serialization/avro.rs:275:4
    |
275 | fn extract_decimal_fields(
    |    ^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_decimal_field` is never used
   --> src/ferris/serialization/avro.rs:326:4
    |
326 | fn is_decimal_field(field_schema: &apache_avro::Schema) -> bool {
    |    ^^^^^^^^^^^^^^^^

warning: function `extract_decimal_info` is never used
   --> src/ferris/serialization/avro.rs:356:4
    |
356 | fn extract_decimal_info(field_schema: &apache_avro::Schema) -> Option<DecimalSchemaInfo> {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: function `extract_decimal_info_from_field` is never used
   --> src/ferris/serialization/avro.rs:413:4
    |
413 | fn extract_decimal_info_from_field(
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_decimal_field_from_field` is never used
   --> src/ferris/serialization/avro.rs:469:4
    |
469 | fn is_decimal_field_from_field(field: &apache_avro::schema::RecordField) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `AvroCodec` is never constructed
  --> src/ferris/serialization/avro_codec.rs:11:12
   |
11 | pub struct AvroCodec {
   |            ^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/serialization/avro_codec.rs:17:12
    |
15  | impl AvroCodec {
    | -------------- associated items in this implementation
16  |     /// Create a new AvroCodec with the given schema JSON
17  |     pub fn new(schema_json: &str) -> Result<Self, SerializationError> {
    |            ^^^
...
25  |     pub fn with_schema(schema: AvroSchema) -> Self {
    |            ^^^^^^^^^^^
...
30  |     pub fn serialize(
    |            ^^^^^^^^^
...
49  |     pub fn deserialize(
    |            ^^^^^^^^^^^
...
73  |     pub fn schema(&self) -> &AvroSchema {
    |            ^^^^^^
...
78  |     fn record_to_avro_value(
    |        ^^^^^^^^^^^^^^^^^^^^
...
93  |     fn field_value_to_avro(
    |        ^^^^^^^^^^^^^^^^^^^
...
174 |     fn avro_value_to_record(
    |        ^^^^^^^^^^^^^^^^^^^^
...
195 |     fn avro_value_to_field_value_with_context(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
311 |     fn avro_value_to_field_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
319 |     fn get_decimal_scale_from_schema(&self, field_name: &str) -> Option<u8> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
340 |     fn extract_decimal_scale_from_type(&self, type_def: &serde_json::Value) -> Option<u8> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_avro_serializer` is never used
   --> src/ferris/serialization/avro_codec.rs:381:8
    |
381 | pub fn create_avro_serializer(schema_json: &str) -> Result<AvroCodec, SerializationError> {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: function `serialize_to_avro` is never used
   --> src/ferris/serialization/avro_codec.rs:386:8
    |
386 | pub fn serialize_to_avro(
    |        ^^^^^^^^^^^^^^^^^

warning: function `deserialize_from_avro` is never used
   --> src/ferris/serialization/avro_codec.rs:395:8
    |
395 | pub fn deserialize_from_avro(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: struct `ProtobufFormat` is never constructed
 --> src/ferris/serialization/protobuf.rs:8:12
  |
8 | pub struct ProtobufFormat<T>
  |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/serialization/protobuf.rs:29:12
   |
24 | / impl<T> ProtobufFormat<T>
25 | | where
26 | |     T: prost::Message + Default,
   | |________________________________- associated function in this implementation
...
29 |       pub fn new() -> Self {
   |              ^^^

warning: function `record_to_json_map` is never used
  --> src/ferris/serialization/protobuf.rs:91:4
   |
91 | fn record_to_json_map(
   |    ^^^^^^^^^^^^^^^^^^

warning: struct `DecimalMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:15:12
   |
15 | pub struct DecimalMessage {
   |            ^^^^^^^^^^^^^^

warning: enum `FieldValueOneof` is never used
  --> src/ferris/serialization/protobuf_codec.rs:26:10
   |
26 | pub enum FieldValueOneof {
   |          ^^^^^^^^^^^^^^^

warning: struct `TimestampMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:47:12
   |
47 | pub struct TimestampMessage {
   |            ^^^^^^^^^^^^^^^^

warning: struct `ArrayMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:56:12
   |
56 | pub struct ArrayMessage {
   |            ^^^^^^^^^^^^

warning: struct `MapMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:63:12
   |
63 | pub struct MapMessage {
   |            ^^^^^^^^^^

warning: struct `FieldMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:70:12
   |
70 | pub struct FieldMessage {
   |            ^^^^^^^^^^^^

warning: struct `RecordMessage` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:77:12
   |
77 | pub struct RecordMessage {
   |            ^^^^^^^^^^^^^

warning: struct `ProtobufCodec` is never constructed
  --> src/ferris/serialization/protobuf_codec.rs:86:12
   |
86 | pub struct ProtobufCodec {
   |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/serialization/protobuf_codec.rs:127:12
    |
96  | impl ProtobufCodec {
    | ------------------ associated items in this implementation
...
127 |     pub fn new(schema: &str, message_type: &str) -> Result<Self, SerializationError> {
    |            ^^^
...
151 |     pub fn new_with_default_schema() -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
198 |     pub fn from_proto_file(proto_path: &str) -> Result<Self, SerializationError> {
    |            ^^^^^^^^^^^^^^^
...
216 |     pub fn schema(&self) -> &str {
    |            ^^^^^^
...
221 |     pub fn message_type(&self) -> &str {
    |            ^^^^^^^^^^^^
...
226 |     pub fn serialize(
    |            ^^^^^^^^^
...
250 |     pub fn deserialize(
    |            ^^^^^^^^^^^
...
268 |     fn field_value_to_proto(
    |        ^^^^^^^^^^^^^^^^^^^^
...
357 |     fn proto_to_field_value(
    |        ^^^^^^^^^^^^^^^^^^^^

warning: function `serialize_to_protobuf` is never used
   --> src/ferris/serialization/protobuf_codec.rs:404:8
    |
404 | pub fn serialize_to_protobuf(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `deserialize_from_protobuf` is never used
   --> src/ferris/serialization/protobuf_codec.rs:420:8
    |
420 | pub fn deserialize_from_protobuf(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_protobuf_serializer` is never used
   --> src/ferris/serialization/protobuf_codec.rs:437:8
    |
437 | pub fn create_protobuf_serializer(schema: &str) -> Result<ProtobufCodec, SerializationError> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `JsonCodec` is never constructed
  --> src/ferris/serialization/json_codec.rs:12:12
   |
12 | pub struct JsonCodec;
   |            ^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/serialization/json_codec.rs:16:12
   |
14 | impl JsonCodec {
   | -------------- associated function in this implementation
15 |     /// Create a new JsonCodec
16 |     pub fn new() -> Self {
   |            ^^^

warning: function `field_value_to_json_value` is never used
  --> src/ferris/serialization/json_codec.rs:89:4
   |
89 | fn field_value_to_json_value(field_value: &FieldValue) -> Value {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `json_to_field_value` is never used
 --> src/ferris/serialization/helpers.rs:9:8
  |
9 | pub fn json_to_field_value(
  |        ^^^^^^^^^^^^^^^^^^^

warning: function `field_value_to_json` is never used
  --> src/ferris/serialization/helpers.rs:66:8
   |
66 | pub fn field_value_to_json(
   |        ^^^^^^^^^^^^^^^^^^^

warning: function `avro_value_to_field_value` is never used
   --> src/ferris/serialization/helpers.rs:148:8
    |
148 | pub fn avro_value_to_field_value(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `field_value_to_avro` is never used
   --> src/ferris/serialization/helpers.rs:237:8
    |
237 | pub fn field_value_to_avro(
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `scaled_integer_to_avro_decimal_bytes` is never used
   --> src/ferris/serialization/helpers.rs:300:8
    |
300 | pub fn scaled_integer_to_avro_decimal_bytes(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `scaled_integer_to_avro_bytes_custom` is never used
   --> src/ferris/serialization/helpers.rs:322:8
    |
322 | pub fn scaled_integer_to_avro_bytes_custom(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `field_value_to_avro_with_schema` is never used
   --> src/ferris/serialization/helpers.rs:346:8
    |
346 | pub fn field_value_to_avro_with_schema(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `field_value_to_avro_with_decimal_schema` is never used
   --> src/ferris/serialization/helpers.rs:364:8
    |
364 | pub fn field_value_to_avro_with_decimal_schema(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `avro_value_to_field_value_with_schema` is never used
   --> src/ferris/serialization/helpers.rs:388:8
    |
388 | pub fn avro_value_to_field_value_with_schema(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `DecimalSchemaInfo` is never constructed
   --> src/ferris/serialization/helpers.rs:436:12
    |
436 | pub struct DecimalSchemaInfo {
    |            ^^^^^^^^^^^^^^^^^

warning: function `encode_big_endian_signed` is never used
   --> src/ferris/serialization/helpers.rs:443:4
    |
443 | fn encode_big_endian_signed(value: i64) -> Vec<u8> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `protobuf_bytes_to_field_value` is never used
   --> src/ferris/serialization/helpers.rs:488:8
    |
488 | pub fn protobuf_bytes_to_field_value(_bytes: &[u8]) -> Result<FieldValue, SerializationError> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `parse_decimal_string_to_scaled_integer` is never used
   --> src/ferris/serialization/helpers.rs:500:4
    |
500 | fn parse_decimal_string_to_scaled_integer(s: &str) -> Option<FieldValue> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `try_decode_avro_decimal_bytes` is never used
   --> src/ferris/serialization/helpers.rs:549:4
    |
549 | fn try_decode_avro_decimal_bytes(bytes: &[u8]) -> Option<FieldValue> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `decode_avro_decimal_bytes_with_schema` is never used
   --> src/ferris/serialization/helpers.rs:580:8
    |
580 | pub fn decode_avro_decimal_bytes_with_schema(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `decode_big_endian_signed_extended` is never used
   --> src/ferris/serialization/helpers.rs:642:4
    |
642 | fn decode_big_endian_signed_extended(bytes: &[u8]) -> Option<i64> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `decode_big_endian_signed` is never used
   --> src/ferris/serialization/helpers.rs:665:4
    |
665 | fn decode_big_endian_signed(bytes: &[u8]) -> Option<i64> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_avro_codec` is never used
   --> src/ferris/serialization/helpers.rs:693:8
    |
693 | pub fn create_avro_codec(
    |        ^^^^^^^^^^^^^^^^^

warning: function `create_protobuf_codec` is never used
   --> src/ferris/serialization/helpers.rs:709:8
    |
709 | pub fn create_protobuf_codec(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `extract_message_type_from_schema` is never used
   --> src/ferris/serialization/helpers.rs:726:8
    |
726 | pub fn extract_message_type_from_schema(schema: &str) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `StreamJobServer` is never constructed
  --> src/ferris/server/stream_job_server.rs:25:12
   |
25 | pub struct StreamJobServer {
   |            ^^^^^^^^^^^^^^^

warning: struct `RunningJob` is never constructed
  --> src/ferris/server/stream_job_server.rs:34:12
   |
34 | pub struct RunningJob {
   |            ^^^^^^^^^^

warning: enum `JobStatus` is never used
  --> src/ferris/server/stream_job_server.rs:48:10
   |
48 | pub enum JobStatus {
   |          ^^^^^^^^^

warning: struct `JobMetrics` is never constructed
  --> src/ferris/server/stream_job_server.rs:57:12
   |
57 | pub struct JobMetrics {
   |            ^^^^^^^^^^

warning: struct `JobSummary` is never constructed
  --> src/ferris/server/stream_job_server.rs:78:12
   |
78 | pub struct JobSummary {
   |            ^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/server/stream_job_server.rs:88:12
    |
87  | impl StreamJobServer {
    | -------------------- associated items in this implementation
88  |     pub fn new(_brokers: String, base_group_id: String, max_jobs: usize) -> Self {
    |            ^^^
...
92  |     pub fn new_with_monitoring(
    |            ^^^^^^^^^^^^^^^^^^^
...
116 |     pub fn get_performance_metrics(&self) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
123 |     pub fn has_performance_monitoring(&self) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
128 |     pub fn get_health_status(&self) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^^
...
143 |     pub fn get_performance_report(&self) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
154 |     fn get_job_summary(&self) -> String {
    |        ^^^^^^^^^^^^^^^
...
176 |     pub async fn deploy_job(
    |                  ^^^^^^^^^^
...
499 |     pub async fn stop_job(&self, name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^
...
523 |     pub async fn pause_job(&self, name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^^
...
543 |     pub async fn list_jobs(&self) -> Vec<JobSummary> {
    |                  ^^^^^^^^^
...
557 |     pub async fn get_job_status(&self, name: &str) -> Option<JobSummary> {
    |                  ^^^^^^^^^^^^^^
...
570 |     pub async fn deploy_sql_application(
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
579 |     pub async fn deploy_sql_application_with_filename(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
789 |     fn extract_sql_snippet(sql: &str) -> String {
    |        ^^^^^^^^^^^^^^^^^^^
...
809 |     fn extract_job_config_from_query(query: &StreamingQuery) -> JobProcessingConfig {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
862 |     fn get_query_properties(query: &StreamingQuery) -> HashMap<String, String> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
878 |     fn extract_batch_config_from_query(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `BatchProcessingResult` is never constructed
  --> src/ferris/server/processors/common.rs:24:12
   |
24 | pub struct BatchProcessingResult {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `ProcessingError` is never constructed
  --> src/ferris/server/processors/common.rs:34:12
   |
34 | pub struct ProcessingError {
   |            ^^^^^^^^^^^^^^^

warning: struct `JobExecutionStats` is never constructed
  --> src/ferris/server/processors/common.rs:42:12
   |
42 | pub struct JobExecutionStats {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new`, `update_from_batch`, `records_per_second`, `success_rate`, and `elapsed` are never used
   --> src/ferris/server/processors/common.rs:55:12
    |
54  | impl JobExecutionStats {
    | ---------------------- associated items in this implementation
55  |     pub fn new() -> Self {
    |            ^^^
...
63  |     pub fn update_from_batch(&mut self, result: &BatchProcessingResult) {
    |            ^^^^^^^^^^^^^^^^^
...
89  |     pub fn records_per_second(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^
...
99  |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
108 |     pub fn elapsed(&self) -> Duration {
    |            ^^^^^^^

warning: struct `JobProcessingConfig` is never constructed
   --> src/ferris/server/processors/common.rs:117:12
    |
117 | pub struct JobProcessingConfig {
    |            ^^^^^^^^^^^^^^^^^^^

warning: enum `FailureStrategy` is never used
   --> src/ferris/server/processors/common.rs:153:10
    |
153 | pub enum FailureStrategy {
    |          ^^^^^^^^^^^^^^^

warning: struct `BatchProcessingResultWithOutput` is never constructed
   --> src/ferris/server/processors/common.rs:166:12
    |
166 | pub struct BatchProcessingResultWithOutput {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `process_batch_common` is never used
   --> src/ferris/server/processors/common.rs:176:14
    |
176 | pub async fn process_batch_common(
    |              ^^^^^^^^^^^^^^^^^^^^

warning: function `process_batch_with_output` is never used
   --> src/ferris/server/processors/common.rs:196:14
    |
196 | pub async fn process_batch_with_output(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `is_recoverable_error` is never used
   --> src/ferris/server/processors/common.rs:249:4
    |
249 | fn is_recoverable_error(_error: &crate::ferris::sql::SqlError) -> bool {
    |    ^^^^^^^^^^^^^^^^^^^^

warning: function `log_job_progress` is never used
   --> src/ferris/server/processors/common.rs:256:8
    |
256 | pub fn log_job_progress(job_name: &str, stats: &JobExecutionStats) {
    |        ^^^^^^^^^^^^^^^^

warning: function `log_final_stats` is never used
   --> src/ferris/server/processors/common.rs:272:8
    |
272 | pub fn log_final_stats(job_name: &str, stats: &JobExecutionStats) {
    |        ^^^^^^^^^^^^^^^

warning: type alias `DataSourceResult` is never used
   --> src/ferris/server/processors/common.rs:299:10
    |
299 | pub type DataSourceResult<T> = Result<T, Box<dyn std::error::Error + Send + Sync>>;
    |          ^^^^^^^^^^^^^^^^

warning: struct `DataSourceConfig` is never constructed
   --> src/ferris/server/processors/common.rs:303:12
    |
303 | pub struct DataSourceConfig {
    |            ^^^^^^^^^^^^^^^^

warning: struct `DataSinkConfig` is never constructed
   --> src/ferris/server/processors/common.rs:311:12
    |
311 | pub struct DataSinkConfig {
    |            ^^^^^^^^^^^^^^

warning: type alias `DataSourceCreationResult` is never used
   --> src/ferris/server/processors/common.rs:318:10
    |
318 | pub type DataSourceCreationResult = Result<Box<dyn DataReader>, String>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^

warning: type alias `DataSinkCreationResult` is never used
   --> src/ferris/server/processors/common.rs:321:10
    |
321 | pub type DataSinkCreationResult = Result<Box<dyn DataWriter>, String>;
    |          ^^^^^^^^^^^^^^^^^^^^^^

warning: type alias `MultiSourceCreationResult` is never used
   --> src/ferris/server/processors/common.rs:324:10
    |
324 | pub type MultiSourceCreationResult = Result<HashMap<String, Box<dyn DataReader>>, String>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: type alias `MultiSinkCreationResult` is never used
   --> src/ferris/server/processors/common.rs:325:10
    |
325 | pub type MultiSinkCreationResult = Result<HashMap<String, Box<dyn DataWriter>>, String>;
    |          ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `check_transaction_support` is never used
   --> src/ferris/server/processors/common.rs:328:8
    |
328 | pub fn check_transaction_support(reader: &dyn DataReader, job_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `check_writer_transaction_support` is never used
   --> src/ferris/server/processors/common.rs:345:8
    |
345 | pub fn check_writer_transaction_support(writer: &dyn DataWriter, job_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `retry_with_backoff` is never used
   --> src/ferris/server/processors/common.rs:359:14
    |
359 | pub async fn retry_with_backoff<F, T>(
    |              ^^^^^^^^^^^^^^^^^^

warning: function `create_datasource_reader` is never used
   --> src/ferris/server/processors/common.rs:396:14
    |
396 | pub async fn create_datasource_reader(config: &DataSourceConfig) -> DataSourceCreationResult {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_kafka_reader` is never used
   --> src/ferris/server/processors/common.rs:420:10
    |
420 | async fn create_kafka_reader(
    |          ^^^^^^^^^^^^^^^^^^^

warning: function `create_file_reader` is never used
   --> src/ferris/server/processors/common.rs:458:10
    |
458 | async fn create_file_reader(
    |          ^^^^^^^^^^^^^^^^^^

warning: function `create_datasource_writer` is never used
   --> src/ferris/server/processors/common.rs:494:14
    |
494 | pub async fn create_datasource_writer(config: &DataSinkConfig) -> DataSinkCreationResult {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_kafka_writer` is never used
   --> src/ferris/server/processors/common.rs:517:10
    |
517 | async fn create_kafka_writer(
    |          ^^^^^^^^^^^^^^^^^^^

warning: function `create_file_writer` is never used
   --> src/ferris/server/processors/common.rs:559:10
    |
559 | async fn create_file_writer(
    |          ^^^^^^^^^^^^^^^^^^

warning: function `create_multi_source_readers` is never used
   --> src/ferris/server/processors/common.rs:601:14
    |
601 | pub async fn create_multi_source_readers(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_multi_sink_writers` is never used
   --> src/ferris/server/processors/common.rs:656:14
    |
656 | pub async fn create_multi_sink_writers(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `log_job_configuration` is never used
   --> src/ferris/server/processors/common.rs:713:8
    |
713 | pub fn log_job_configuration(job_name: &str, config: &JobProcessingConfig) {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `log_datasource_info` is never used
   --> src/ferris/server/processors/common.rs:729:8
    |
729 | pub fn log_datasource_info(
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `should_commit_batch` is never used
   --> src/ferris/server/processors/common.rs:751:8
    |
751 | pub fn should_commit_batch(
    |        ^^^^^^^^^^^^^^^^^^^

warning: function `write_batch_to_sink` is never used
   --> src/ferris/server/processors/common.rs:791:14
    |
791 | pub async fn write_batch_to_sink(
    |              ^^^^^^^^^^^^^^^^^^^

warning: function `update_stats_from_batch_result` is never used
   --> src/ferris/server/processors/common.rs:834:8
    |
834 | pub fn update_stats_from_batch_result(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `ensure_sink_or_create_stdout` is never used
   --> src/ferris/server/processors/common.rs:849:8
    |
849 | pub fn ensure_sink_or_create_stdout(writer: &mut Option<Box<dyn DataWriter>>, job_name: &str) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `run_processing_loop` is never used
   --> src/ferris/server/processors/common.rs:860:14
    |
860 | pub async fn run_processing_loop<F, Fut>(
    |              ^^^^^^^^^^^^^^^^^^^

warning: function `process_datasource_records` is never used
   --> src/ferris/server/processors/common.rs:911:14
    |
911 | pub async fn process_datasource_records(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `SimpleJobProcessor` is never constructed
  --> src/ferris/server/processors/simple.rs:16:12
   |
16 | pub struct SimpleJobProcessor {
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/server/processors/simple.rs:21:12
    |
20  | impl SimpleJobProcessor {
    | ----------------------- associated items in this implementation
21  |     pub fn new(config: JobProcessingConfig) -> Self {
    |            ^^^
...
26  |     pub fn get_config(&self) -> &JobProcessingConfig {
    |            ^^^^^^^^^^
...
31  |     pub async fn process_multi_job(
    |                  ^^^^^^^^^^^^^^^^^
...
127 |     pub async fn process_job(
    |                  ^^^^^^^^^^^
...
220 |     async fn process_simple_batch(
    |              ^^^^^^^^^^^^^^^^^^^^
...
350 |     async fn commit_simple(
    |              ^^^^^^^^^^^^^
...
388 |     async fn process_multi_source_batch(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_simple_processor` is never used
   --> src/ferris/server/processors/simple.rs:537:8
    |
537 | pub fn create_simple_processor() -> SimpleJobProcessor {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_conservative_simple_processor` is never used
   --> src/ferris/server/processors/simple.rs:551:8
    |
551 | pub fn create_conservative_simple_processor() -> SimpleJobProcessor {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_low_latency_processor` is never used
   --> src/ferris/server/processors/simple.rs:565:8
    |
565 | pub fn create_low_latency_processor() -> SimpleJobProcessor {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `TransactionalJobProcessor` is never constructed
  --> src/ferris/server/processors/transactional.rs:16:12
   |
16 | pub struct TransactionalJobProcessor {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/server/processors/transactional.rs:21:12
    |
20  | impl TransactionalJobProcessor {
    | ------------------------------ associated items in this implementation
21  |     pub fn new(config: JobProcessingConfig) -> Self {
    |            ^^^
...
26  |     pub fn get_config(&self) -> &JobProcessingConfig {
    |            ^^^^^^^^^^
...
31  |     pub async fn process_multi_job(
    |                  ^^^^^^^^^^^^^^^^^
...
150 |     pub async fn process_job(
    |                  ^^^^^^^^^^^
...
234 |     async fn process_transactional_batch(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
395 |     async fn commit_transactions(
    |              ^^^^^^^^^^^^^^^^^^^
...
502 |     async fn process_multi_source_transactional_batch(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
759 |     async fn commit_multi_source_transactions(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
804 |     async fn abort_multi_source_transactions(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
864 |     async fn abort_transactions(
    |              ^^^^^^^^^^^^^^^^^^

warning: function `create_transactional_processor` is never used
   --> src/ferris/server/processors/transactional.rs:901:8
    |
901 | pub fn create_transactional_processor() -> TransactionalJobProcessor {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_best_effort_transactional_processor` is never used
   --> src/ferris/server/processors/transactional.rs:910:8
    |
910 | pub fn create_best_effort_transactional_processor() -> TransactionalJobProcessor {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: constant `VERSION` is never used
  --> src/ferris/sql/mod.rs:24:11
   |
24 | pub const VERSION: &str = env!("CARGO_PKG_VERSION");
   |           ^^^^^^^

warning: constant `FEATURES` is never used
  --> src/ferris/sql/mod.rs:25:11
   |
25 | pub const FEATURES: &[&str] = &[
   |           ^^^^^^^^

warning: struct `SqlApplicationParser` is never constructed
   --> src/ferris/sql/app_parser.rs:119:12
    |
119 | pub struct SqlApplicationParser {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/app_parser.rs:124:12
    |
123 | impl SqlApplicationParser {
    | ------------------------- associated items in this implementation
124 |     pub fn new() -> Self {
    |            ^^^
...
131 |     pub fn parse_application(&self, content: &str) -> Result<SqlApplication, SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
149 |     fn extract_metadata(&self, content: &str) -> Result<ApplicationMetadata, SqlError> {
    |        ^^^^^^^^^^^^^^^^
...
208 |     fn parse_statements(&self, content: &str) -> Result<Vec<SqlStatement>, SqlError> {
    |        ^^^^^^^^^^^^^^^^
...
311 |     fn determine_statement_type(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
348 |     fn extract_dependencies(&self, sql: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
365 |     fn extract_dependencies_from_ast(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
417 |     fn extract_source_dependencies(&self, source: &StreamSource, dependencies: &mut Vec<String>) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
437 |     fn extract_dependencies_text_fallback(&self, sql: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
464 |     fn extract_resources(&self, statements: &[SqlStatement]) -> ApplicationResources {
    |        ^^^^^^^^^^^^^^^^^
...
492 |     fn extract_create_name(&self, sql: &str, create_type: &str) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^
...
505 |     fn extract_job_name(&self, sql: &str) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^

warning: variants `Changes` and `Final` are never constructed
  --> src/ferris/sql/ast.rs:64:5
   |
60 | pub enum EmitMode {
   |          -------- variants in this enum
...
64 |     Changes,
   |     ^^^^^^^
...
69 |     Final,
   |     ^^^^^
   |
   = note: `EmitMode` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:137:5
    |
98  | pub enum StreamingQuery {
    |          -------------- variants in this enum
...
137 |     CreateStream {
    |     ^^^^^^^^^^^^
...
153 |     CreateStreamInto {
    |     ^^^^^^^^^^^^^^^^
...
172 |     CreateTable {
    |     ^^^^^^^^^^^
...
189 |     CreateTableInto {
    |     ^^^^^^^^^^^^^^^
...
208 |     Show {
    |     ^^^^
...
218 |     StartJob {
    |     ^^^^^^^^
...
230 |     StopJob {
    |     ^^^^^^^
...
240 |     PauseJob {
    |     ^^^^^^^^
...
248 |     ResumeJob {
    |     ^^^^^^^^^
...
256 |     DeployJob {
    |     ^^^^^^^^^
...
272 |     RollbackJob {
    |     ^^^^^^^^^^^
...
282 |     InsertInto {
    |     ^^^^^^^^^^
...
294 |     Update {
    |     ^^^^^^
...
306 |     Delete {
    |     ^^^^^^
...
316 |     Union {
    |     ^^^^^
    |
    = note: `StreamingQuery` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Values` and `Select` are never constructed
   --> src/ferris/sql/ast.rs:332:5
    |
330 | pub enum InsertSource {
    |          ------------ variants in this enum
331 |     /// Insert explicit values: INSERT INTO table VALUES (1, 'abc', true), (2, 'def', false)
332 |     Values {
    |     ^^^^^^
...
337 |     Select {
    |     ^^^^^^
    |
    = note: `InsertSource` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `BlueGreen`, `Canary`, `Rolling`, and `Replace` are never constructed
   --> src/ferris/sql/ast.rs:350:5
    |
348 | pub enum DeploymentStrategy {
    |          ------------------ variants in this enum
349 |     /// Blue-Green deployment: Deploy to new infrastructure, switch traffic
350 |     BlueGreen,
    |     ^^^^^^^^^
351 |     /// Canary deployment: Gradually roll out to percentage of traffic
352 |     Canary { percentage: u8 },
    |     ^^^^^^
353 |     /// Rolling deployment: Replace instances one by one
354 |     Rolling,
    |     ^^^^^^^
355 |     /// Direct replacement: Stop old, start new (fastest but riskier)
356 |     Replace,
    |     ^^^^^^^
    |
    = note: `DeploymentStrategy` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: enum `JobStatus` is never used
   --> src/ferris/sql/ast.rs:361:10
    |
361 | pub enum JobStatus {
    |          ^^^^^^^^^

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:385:5
    |
383 | pub enum ShowResourceType {
    |          ---------------- variants in this enum
384 |     /// Show all registered streams (Kafka topics exposed as streams)
385 |     Streams,
    |     ^^^^^^^
386 |     /// Show all registered tables (KTables and materialized views)
387 |     Tables,
    |     ^^^^^^
388 |     /// Show all available Kafka topics (whether registered or not)
389 |     Topics,
    |     ^^^^^^
390 |     /// Show all registered functions (built-in and user-defined)
391 |     Functions,
    |     ^^^^^^^^^
392 |     /// Show schema information for a specific stream or table
393 |     Schema { name: String },
    |     ^^^^^^
394 |     /// Show properties for a specific resource
395 |     Properties { resource_type: String, name: String },
    |     ^^^^^^^^^^
396 |     /// Show active jobs currently running
397 |     Jobs,
    |     ^^^^
398 |     /// Show detailed job status including versions and deployment info
399 |     JobStatus { name: Option<String> },
    |     ^^^^^^^^^
400 |     /// Show job versions and deployment history
401 |     JobVersions { name: String },
    |     ^^^^^^^^^^^
402 |     /// Show job metrics and performance statistics
403 |     JobMetrics { name: Option<String> },
    |     ^^^^^^^^^^
404 |     /// Show partitions for a specific topic/stream
405 |     Partitions { name: String },
    |     ^^^^^^^^^^
406 |     /// Describe the schema of a stream or table
407 |     Describe { name: String },
    |     ^^^^^^^^
    |
    = note: `ShowResourceType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Column`, `AliasedColumn`, `Expression`, and `Wildcard` are never constructed
   --> src/ferris/sql/ast.rs:414:5
    |
412 | pub enum SelectField {
    |          ----------- variants in this enum
413 |     /// Simple column reference: column_name
414 |     Column(String),
    |     ^^^^^^
415 |     /// Aliased column: column_name AS alias
416 |     AliasedColumn { column: String, alias: String },
    |     ^^^^^^^^^^^^^
417 |     /// Expression with optional alias: expr [AS alias]
418 |     Expression { expr: Expr, alias: Option<String> },
    |     ^^^^^^^^^^
419 |     /// Wildcard selection: *
420 |     Wildcard,
    |     ^^^^^^^^
    |
    = note: `SelectField` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Table`, `Uri`, and `Subquery` are never constructed
   --> src/ferris/sql/ast.rs:429:5
    |
425 | pub enum StreamSource {
    |          ------------ variants in this enum
...
429 |     Table(String),
    |     ^^^^^
430 |     /// URI-based data source (FR-047 compliant)
431 |     Uri(String),
    |     ^^^
432 |     /// Subquery (for future implementation)
433 |     Subquery(Box<StreamingQuery>),
    |     ^^^^^^^^
    |
    = note: `StreamSource` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Inner`, `Left`, `Right`, and `FullOuter` are never constructed
   --> src/ferris/sql/ast.rs:455:5
    |
453 | pub enum JoinType {
    |          -------- variants in this enum
454 |     /// INNER JOIN - only matching records from both sides
455 |     Inner,
    |     ^^^^^
456 |     /// LEFT JOIN - all records from left, matching from right
457 |     Left,
    |     ^^^^
458 |     /// RIGHT JOIN - all records from right, matching from left  
459 |     Right,
    |     ^^^^^
460 |     /// FULL OUTER JOIN - all records from both sides
461 |     FullOuter,
    |     ^^^^^^^^^
    |
    = note: `JoinType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Tumbling`, `Sliding`, and `Session` are never constructed
   --> src/ferris/sql/ast.rs:477:5
    |
475 | pub enum WindowSpec {
    |          ---------- variants in this enum
476 |     /// Fixed-size tumbling window
477 |     Tumbling {
    |     ^^^^^^^^
...
482 |     Sliding {
    |     ^^^^^^^
...
488 |     Session {
    |     ^^^^^^^
    |
    = note: `WindowSpec` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Asc` and `Desc` are never constructed
   --> src/ferris/sql/ast.rs:504:5
    |
503 | pub enum OrderDirection {
    |          -------------- variants in this enum
504 |     Asc,
    |     ^^^
505 |     Desc,
    |     ^^^^
    |
    = note: `OrderDirection` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Rows` and `Range` are never constructed
   --> src/ferris/sql/ast.rs:533:5
    |
532 | pub enum FrameType {
    |          --------- variants in this enum
533 |     Rows,
    |     ^^^^
534 |     Range,
    |     ^^^^^
    |
    = note: `FrameType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `UnboundedPreceding`, `Preceding`, `CurrentRow`, `Following`, and `UnboundedFollowing` are never constructed
   --> src/ferris/sql/ast.rs:540:5
    |
539 | pub enum FrameBound {
    |          ---------- variants in this enum
540 |     UnboundedPreceding,
    |     ^^^^^^^^^^^^^^^^^^
541 |     Preceding(u64),
    |     ^^^^^^^^^
542 |     CurrentRow,
    |     ^^^^^^^^^^
543 |     Following(u64),
    |     ^^^^^^^^^
544 |     UnboundedFollowing,
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `FrameBound` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:553:5
    |
549 | pub enum Expr {
    |          ---- variants in this enum
...
553 |     Literal(LiteralValue),
    |     ^^^^^^^
554 |     /// Binary operations: expr op expr
555 |     BinaryOp {
    |     ^^^^^^^^
...
561 |     UnaryOp { op: UnaryOperator, expr: Box<Expr> },
    |     ^^^^^^^
562 |     /// Function calls: func_name(args...)
563 |     Function { name: String, args: Vec<Expr> },
    |     ^^^^^^^^
564 |     /// Window functions like LAG(expr) OVER (PARTITION BY col ORDER BY col)
565 |     WindowFunction {
    |     ^^^^^^^^^^^^^^
...
571 |     Case {
    |     ^^^^
...
576 |     List(Vec<Expr>),
    |     ^^^^
577 |     /// Subquery expressions for complex SQL operations
578 |     Subquery {
    |     ^^^^^^^^
...
583 |     Between {
    |     ^^^^^^^
    |
    = note: `Expr` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:595:5
    |
593 | pub enum SubqueryType {
    |          ------------ variants in this enum
594 |     /// Scalar subquery: SELECT (SELECT max_price FROM products) as max_p FROM orders
595 |     Scalar,
    |     ^^^^^^
596 |     /// EXISTS subquery: WHERE EXISTS (SELECT 1 FROM table WHERE condition)  
597 |     Exists,
    |     ^^^^^^
598 |     /// NOT EXISTS subquery: WHERE NOT EXISTS (SELECT 1 FROM table WHERE condition)
599 |     NotExists,
    |     ^^^^^^^^^
600 |     /// IN subquery: WHERE column IN (SELECT column FROM table WHERE condition)
601 |     In,
    |     ^^
602 |     /// NOT IN subquery: WHERE column NOT IN (SELECT column FROM table WHERE condition)
603 |     NotIn,
    |     ^^^^^
604 |     /// ANY/SOME subquery: WHERE column = ANY (SELECT column FROM table)
605 |     Any,
    |     ^^^
606 |     /// ALL subquery: WHERE column > ALL (SELECT column FROM table)
607 |     All,
    |     ^^^
    |
    = note: `SubqueryType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:613:5
    |
612 | pub enum LiteralValue {
    |          ------------ variants in this enum
613 |     String(String),
    |     ^^^^^^
614 |     Integer(i64),
    |     ^^^^^^^
615 |     Float(f64),
    |     ^^^^^
616 |     Boolean(bool),
    |     ^^^^^^^
617 |     Null,
    |     ^^^^
618 |     /// High-precision decimal literal for financial calculations
619 |     Decimal(String), // Store as string to preserve exact precision during parsing
    |     ^^^^^^^
620 |     /// Time intervals: INTERVAL '5' MINUTE
621 |     Interval {
    |     ^^^^^^^^
    |
    = note: `LiteralValue` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Millisecond`, `Second`, `Minute`, `Hour`, and `Day` are never constructed
   --> src/ferris/sql/ast.rs:630:5
    |
629 | pub enum TimeUnit {
    |          -------- variants in this enum
630 |     Millisecond,
    |     ^^^^^^^^^^^
631 |     Second,
    |     ^^^^^^
632 |     Minute,
    |     ^^^^^^
633 |     Hour,
    |     ^^^^
634 |     Day,
    |     ^^^
    |
    = note: `TimeUnit` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple variants are never constructed
   --> src/ferris/sql/ast.rs:641:5
    |
639 | pub enum BinaryOperator {
    |          -------------- variants in this enum
640 |     // Arithmetic
641 |     Add,
    |     ^^^
642 |     Subtract,
    |     ^^^^^^^^
643 |     Multiply,
    |     ^^^^^^^^
644 |     Divide,
    |     ^^^^^^
645 |     Modulo,
    |     ^^^^^^
...
648 |     Equal,
    |     ^^^^^
649 |     NotEqual,
    |     ^^^^^^^^
650 |     LessThan,
    |     ^^^^^^^^
651 |     LessThanOrEqual,
    |     ^^^^^^^^^^^^^^^
652 |     GreaterThan,
    |     ^^^^^^^^^^^
653 |     GreaterThanOrEqual,
    |     ^^^^^^^^^^^^^^^^^^
...
656 |     And,
    |     ^^^
657 |     Or,
    |     ^^
...
660 |     Like,
    |     ^^^^
661 |     NotLike,
    |     ^^^^^^^
662 |     Concat, // || concatenation operator
    |     ^^^^^^
...
665 |     In,
    |     ^^
666 |     NotIn,
    |     ^^^^^
    |
    = note: `BinaryOperator` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Not`, `Minus`, `Plus`, `IsNull`, and `IsNotNull` are never constructed
   --> src/ferris/sql/ast.rs:672:5
    |
671 | pub enum UnaryOperator {
    |          ------------- variants in this enum
672 |     Not,
    |     ^^^
673 |     Minus,
    |     ^^^^^
674 |     Plus,
    |     ^^^^
675 |     IsNull,
    |     ^^^^^^
676 |     IsNotNull,
    |     ^^^^^^^^^
    |
    = note: `UnaryOperator` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `KafkaSource` is never constructed
   --> src/ferris/sql/ast.rs:681:12
    |
681 | pub struct KafkaSource {
    |            ^^^^^^^^^^^

warning: variants `Float`, `Boolean`, `Decimal`, `Array`, and `Struct` are never constructed
   --> src/ferris/sql/ast.rs:701:5
    |
699 | pub enum DataType {
    |          -------- variants in this enum
700 |     Integer,
701 |     Float,
    |     ^^^^^
702 |     String,
703 |     Boolean,
    |     ^^^^^^^
...
706 |     Decimal,
    |     ^^^^^^^
707 |     /// Array of elements of a specific type
708 |     Array(Box<DataType>),
    |     ^^^^^
...
712 |     Struct(Vec<StructField>),
    |     ^^^^^^
    |
    = note: `DataType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `into_legacy_format` and `from_legacy_format` are never used
   --> src/ferris/sql/ast.rs:749:12
    |
747 | impl ConfigProperties {
    | --------------------- associated items in this implementation
748 |     /// Convert to legacy HashMap format for backward compatibility
749 |     pub fn into_legacy_format(self) -> HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^^
...
770 |     pub fn from_legacy_format(properties: HashMap<String, String>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^

warning: methods `has_window` and `get_columns` are never used
   --> src/ferris/sql/ast.rs:792:12
    |
790 | impl StreamingQuery {
    | ------------------- methods in this implementation
791 |     /// Check if this query requires windowing
792 |     pub fn has_window(&self) -> bool {
    |            ^^^^^^^^^^
...
814 |     pub fn get_columns(&self) -> Vec<String> {
    |            ^^^^^^^^^^^

warning: method `get_columns` is never used
   --> src/ferris/sql/ast.rs:918:12
    |
916 | impl SelectField {
    | ---------------- method in this implementation
917 |     /// Get column references from this field
918 |     pub fn get_columns(&self) -> Vec<String> {
    |            ^^^^^^^^^^^

warning: method `get_columns` is never used
   --> src/ferris/sql/ast.rs:930:12
    |
928 | impl Expr {
    | --------- method in this implementation
929 |     /// Extract all column references from this expression
930 |     pub fn get_columns(&self) -> Vec<String> {
    |            ^^^^^^^^^^^

warning: methods `time_column` and `is_stateful` are never used
    --> src/ferris/sql/ast.rs:1002:12
     |
1000 | impl WindowSpec {
     | --------------- methods in this implementation
1001 |     /// Get the time column used for windowing
1002 |     pub fn time_column(&self) -> Option<&str> {
     |            ^^^^^^^^^^^
...
1011 |     pub fn is_stateful(&self) -> bool {
     |            ^^^^^^^^^^^

warning: method `to_duration` is never used
    --> src/ferris/sql/ast.rs:1019:12
     |
1017 | impl TimeUnit {
     | ------------- method in this implementation
1018 |     /// Convert to Duration
1019 |     pub fn to_duration(&self, value: i64) -> Duration {
     |            ^^^^^^^^^^^

warning: struct `DataSourceConfigBuilder` is never constructed
  --> src/ferris/sql/config/builder.rs:23:12
   |
23 | pub struct DataSourceConfigBuilder {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: enum `ConfigurationError` is never used
  --> src/ferris/sql/config/builder.rs:39:10
   |
39 | pub enum ConfigurationError {
   |          ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/builder.rs:66:12
    |
64  | impl DataSourceConfigBuilder {
    | ---------------------------- associated items in this implementation
65  |     /// Create new builder
66  |     pub fn new() -> Self {
    |            ^^^
...
76  |     pub fn with_scheme<S: Into<String>>(scheme: S) -> Self {
    |            ^^^^^^^^^^^
...
83  |     pub fn from_config(config: DataSourceConfig) -> Self {
    |            ^^^^^^^^^^^
...
93  |     pub fn from_uri<S: Into<String>>(uri: S) -> Result<Self, ConfigurationError> {
    |            ^^^^^^^^
...
106 |     pub fn from_template<S: Into<String>>(template_name: S) -> Result<Self, ConfigurationError> {
    |            ^^^^^^^^^^^^^
...
119 |     pub fn scheme<S: Into<String>>(mut self, scheme: S) -> Self {
    |            ^^^^^^
...
125 |     pub fn host<S: Into<String>>(mut self, host: S) -> Self {
    |            ^^^^
...
131 |     pub fn port(mut self, port: u16) -> Self {
    |            ^^^^
...
137 |     pub fn path<S: Into<String>>(mut self, path: S) -> Self {
    |            ^^^^
...
143 |     pub fn parameter<K, V>(mut self, key: K, value: V) -> Self
    |            ^^^^^^^^^
...
153 |     pub fn parameters<K, V>(mut self, params: HashMap<K, V>) -> Self
    |            ^^^^^^^^^^
...
165 |     pub fn timeout_ms(mut self, timeout: u64) -> Self {
    |            ^^^^^^^^^^
...
171 |     pub fn timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^
...
177 |     pub fn max_retries(mut self, retries: u32) -> Self {
    |            ^^^^^^^^^^^
...
183 |     pub fn source(mut self, source: ConfigSource) -> Self {
    |            ^^^^^^
...
191 |     pub fn host_port<S: Into<String>>(self, host: S, port: u16) -> Self {
    |            ^^^^^^^^^
...
196 |     pub fn bool_parameter<K: Into<String>>(self, key: K, value: bool) -> Self {
    |            ^^^^^^^^^^^^^^
...
201 |     pub fn int_parameter<K: Into<String>>(self, key: K, value: i64) -> Self {
    |            ^^^^^^^^^^^^^
...
206 |     pub fn float_parameter<K: Into<String>>(self, key: K, value: f64) -> Self {
    |            ^^^^^^^^^^^^^^^
...
213 |     pub fn kafka(self) -> KafkaConfigBuilder {
    |            ^^^^^
...
218 |     pub fn s3(self) -> S3ConfigBuilder {
    |            ^^
...
223 |     pub fn file(self) -> FileConfigBuilder {
    |            ^^^^
...
228 |     pub fn postgresql(self) -> PostgreSQLConfigBuilder {
    |            ^^^^^^^^^^
...
233 |     pub fn topic<S: Into<String>>(self, topic: S) -> Self {
    |            ^^^^^
...
240 |     pub fn validate_on_build(mut self, validate: bool) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
246 |     pub fn validator(mut self, validator: ConfigValidatorRegistry) -> Self {
    |            ^^^^^^^^^
...
254 |     pub fn build(mut self) -> Result<DataSourceConfig, ConfigurationError> {
    |            ^^^^^
...
272 |     pub fn build_unchecked(mut self) -> DataSourceConfig {
    |            ^^^^^^^^^^^^^^^
...
278 |     pub fn try_build(
    |            ^^^^^^^^^
...
305 |     pub fn current(&self) -> &DataSourceConfig {
    |            ^^^^^^^
...
310 |     pub fn clone_current(&self) -> DataSourceConfig {
    |            ^^^^^^^^^^^^^
...
315 |     pub fn duplicate(&self) -> Self {
    |            ^^^^^^^^^

warning: struct `KafkaConfigBuilder` is never constructed
   --> src/ferris/sql/config/builder.rs:327:12
    |
327 | pub struct KafkaConfigBuilder {
    |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/builder.rs:332:8
    |
331 | impl KafkaConfigBuilder {
    | ----------------------- associated items in this implementation
332 |     fn new(builder: DataSourceConfigBuilder) -> Self {
    |        ^^^
...
337 |     pub fn brokers<S: Into<String>>(self, brokers: S) -> Self {
    |            ^^^^^^^
...
359 |     pub fn topic<S: Into<String>>(self, topic: S) -> Self {
    |            ^^^^^
...
369 |     pub fn group_id<S: Into<String>>(self, group_id: S) -> Self {
    |            ^^^^^^^^
...
376 |     pub fn auto_commit(self, enabled: bool) -> Self {
    |            ^^^^^^^^^^^
...
383 |     pub fn session_timeout(self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
392 |     pub fn security_protocol<S: Into<String>>(self, protocol: S) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
399 |     pub fn parameter<K, V>(self, key: K, value: V) -> Self
    |            ^^^^^^^^^
...
410 |     pub fn host<S: Into<String>>(self, host: S) -> Self {
    |            ^^^^
...
417 |     pub fn port(self, port: u16) -> Self {
    |            ^^^^
...
424 |     pub fn timeout(self, timeout: Duration) -> Self {
    |            ^^^^^^^
...
431 |     pub fn max_retries(self, retries: u32) -> Self {
    |            ^^^^^^^^^^^
...
438 |     pub fn into_builder(self) -> DataSourceConfigBuilder {
    |            ^^^^^^^^^^^^
...
443 |     pub fn build(self) -> Result<DataSourceConfig, ConfigurationError> {
    |            ^^^^^
...
448 |     pub fn build_unchecked(self) -> DataSourceConfig {
    |            ^^^^^^^^^^^^^^^

warning: struct `S3ConfigBuilder` is never constructed
   --> src/ferris/sql/config/builder.rs:455:12
    |
455 | pub struct S3ConfigBuilder {
    |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/builder.rs:460:8
    |
459 | impl S3ConfigBuilder {
    | -------------------- associated items in this implementation
460 |     fn new(builder: DataSourceConfigBuilder) -> Self {
    |        ^^^
...
465 |     pub fn bucket<S: Into<String>>(self, bucket: S) -> Self {
    |            ^^^^^^
...
472 |     pub fn key<S: Into<String>>(self, key: S) -> Self {
    |            ^^^
...
480 |     pub fn region<S: Into<String>>(self, region: S) -> Self {
    |            ^^^^^^
...
487 |     pub fn credentials<K: Into<String>, S: Into<String>>(
    |            ^^^^^^^^^^^
...
501 |     pub fn profile<S: Into<String>>(self, profile: S) -> Self {
    |            ^^^^^^^
...
508 |     pub fn into_builder(self) -> DataSourceConfigBuilder {
    |            ^^^^^^^^^^^^
...
513 |     pub fn build(self) -> Result<DataSourceConfig, ConfigurationError> {
    |            ^^^^^

warning: struct `FileConfigBuilder` is never constructed
   --> src/ferris/sql/config/builder.rs:520:12
    |
520 | pub struct FileConfigBuilder {
    |            ^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/builder.rs:525:8
    |
524 | impl FileConfigBuilder {
    | ---------------------- associated items in this implementation
525 |     fn new(builder: DataSourceConfigBuilder) -> Self {
    |        ^^^
...
530 |     pub fn file_path<S: Into<String>>(self, path: S) -> Self {
    |            ^^^^^^^^^
...
537 |     pub fn format<S: Into<String>>(self, format: S) -> Self {
    |            ^^^^^^
...
544 |     pub fn watch(self, enabled: bool) -> Self {
    |            ^^^^^
...
551 |     pub fn compression<S: Into<String>>(self, compression: S) -> Self {
    |            ^^^^^^^^^^^
...
558 |     pub fn into_builder(self) -> DataSourceConfigBuilder {
    |            ^^^^^^^^^^^^
...
563 |     pub fn build(self) -> Result<DataSourceConfig, ConfigurationError> {
    |            ^^^^^

warning: struct `PostgreSQLConfigBuilder` is never constructed
   --> src/ferris/sql/config/builder.rs:570:12
    |
570 | pub struct PostgreSQLConfigBuilder {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/builder.rs:575:8
    |
574 | impl PostgreSQLConfigBuilder {
    | ---------------------------- associated items in this implementation
575 |     fn new(builder: DataSourceConfigBuilder) -> Self {
    |        ^^^
...
580 |     pub fn database<S: Into<String>>(self, database: S) -> Self {
    |            ^^^^^^^^
...
590 |     pub fn credentials<U: Into<String>, P: Into<String>>(self, username: U, password: P) -> Self {
    |            ^^^^^^^^^^^
...
600 |     pub fn ssl_mode<S: Into<String>>(self, ssl_mode: S) -> Self {
    |            ^^^^^^^^
...
607 |     pub fn pool_size(self, size: u32) -> Self {
    |            ^^^^^^^^^
...
614 |     pub fn into_builder(self) -> DataSourceConfigBuilder {
    |            ^^^^^^^^^^^^
...
619 |     pub fn build(self) -> Result<DataSourceConfig, ConfigurationError> {
    |            ^^^^^

warning: struct `ConfigTemplate` is never constructed
   --> src/ferris/sql/config/builder.rs:626:12
    |
626 | pub struct ConfigTemplate {
    |            ^^^^^^^^^^^^^^

warning: associated functions `all`, `get`, and `list_names` are never used
   --> src/ferris/sql/config/builder.rs:639:12
    |
637 | impl ConfigTemplate {
    | ------------------- associated functions in this implementation
638 |     /// Get all available templates
639 |     pub fn all() -> HashMap<String, ConfigTemplate> {
    |            ^^^
...
711 |     pub fn get(name: &str) -> Option<ConfigTemplate> {
    |            ^^^
...
716 |     pub fn list_names() -> Vec<String> {
    |            ^^^^^^^^^^

warning: struct `UriComponents` is never constructed
  --> src/ferris/sql/config/connection_string.rs:64:12
   |
64 | pub struct UriComponents {
   |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/connection_string.rs:102:12
    |
81  | impl ConnectionString {
    | --------------------- associated items in this implementation
...
102 |     pub fn parse(uri: &str) -> Result<Self, ParseError> {
    |            ^^^^^
...
181 |     fn parse_hosts(host_str: &str, scheme: &str) -> Result<Vec<HostPort>, ParseError> {
    |        ^^^^^^^^^^^
...
235 |     fn parse_query(query_str: &str) -> Result<HashMap<String, String>, ParseError> {
    |        ^^^^^^^^^^^
...
267 |     fn url_decode(s: &str) -> Result<String, ()> {
    |        ^^^^^^^^^^
...
289 |     pub fn components(&self) -> UriComponents {
    |            ^^^^^^^^^^
...
326 |     pub fn validate(&self) -> Result<(), ParseError> {
    |            ^^^^^^^^
...
338 |     fn validate_kafka(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^
...
358 |     fn validate_s3(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^
...
369 |     fn validate_file(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^
...
380 |     fn validate_postgresql(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^^^^^^
...
391 |     fn validate_clickhouse(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^^^^^^
...
402 |     fn validate_http(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^

warning: enum `ParseError` is never used
   --> src/ferris/sql/config/connection_string.rs:504:10
    |
504 | pub enum ParseError {
    |          ^^^^^^^^^^

warning: variants `Environment`, `File`, `Merged`, and `Template` are never constructed
  --> src/ferris/sql/config/environment.rs:32:5
   |
24 | pub enum ConfigSource {
   |          ------------ variants in this enum
...
32 |     Environment,
   |     ^^^^^^^^^^^
...
35 |     File(String),
   |     ^^^^
...
38 |     Merged(Vec<ConfigSource>),
   |     ^^^^^^
...
41 |     Template(String),
   |     ^^^^^^^^
   |
   = note: `ConfigSource` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `EnvironmentConfig` is never constructed
  --> src/ferris/sql/config/environment.rs:46:12
   |
46 | pub struct EnvironmentConfig {
   |            ^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/environment.rs:68:12
    |
66  | impl EnvironmentConfig {
    | ---------------------- associated items in this implementation
67  |     /// Create new environment configuration with defaults
68  |     pub fn new() -> Self {
    |            ^^^
...
85  |     pub fn with_prefix<S: Into<String>>(prefix: S) -> Self {
    |            ^^^^^^^^^^^
...
92  |     pub fn add_config_file<S: Into<String>>(&mut self, path: S) {
    |            ^^^^^^^^^^^^^^^
...
97  |     pub fn set_env_mapping<K: Into<String>, V: Into<String>>(&mut self, env_var: K, config_key: V) {
    |            ^^^^^^^^^^^^^^^
...
102 |     pub fn set_default<K: Into<String>, V: Into<String>>(&mut self, key: K, value: V) {
    |            ^^^^^^^^^^^
...
107 |     pub fn set_template_var<K: Into<String>, V: Into<String>>(&mut self, key: K, value: V) {
    |            ^^^^^^^^^^^^^^^^
...
112 |     pub fn load_config(&self, scheme: &str) -> Result<DataSourceConfig, ConfigError> {
    |            ^^^^^^^^^^^
...
132 |     pub fn load_all_configs(&self) -> Result<HashMap<String, DataSourceConfig>, ConfigError> {
    |            ^^^^^^^^^^^^^^^^
...
147 |     fn apply_defaults(&self, config: &mut DataSourceConfig) {
    |        ^^^^^^^^^^^^^^
...
164 |     fn load_from_files(
    |        ^^^^^^^^^^^^^^^
...
204 |     fn load_config_file(
    |        ^^^^^^^^^^^^^^^^
...
237 |     fn parse_json_config(
    |        ^^^^^^^^^^^^^^^^^
...
267 |     fn parse_yaml_config(
    |        ^^^^^^^^^^^^^^^^^
...
308 |     fn parse_toml_config(
    |        ^^^^^^^^^^^^^^^^^
...
345 |     fn load_from_environment(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
379 |     fn expand_templates(&self, config: &mut DataSourceConfig) -> Result<(), ConfigError> {
    |        ^^^^^^^^^^^^^^^^
...
403 |     pub fn expand_string(&self, s: &str) -> Result<String, ConfigError> {
    |            ^^^^^^^^^^^^^
...
436 |     pub fn set_config_value(&self, config: &mut DataSourceConfig, key: &str, value: &str) {
    |            ^^^^^^^^^^^^^^^^
...
462 |     fn merge_config(&self, target: &mut DataSourceConfig, source: &HashMap<String, String>) {
    |        ^^^^^^^^^^^^
...
469 |     fn detect_schemes(&self) -> Result<Vec<String>, ConfigError> {
    |        ^^^^^^^^^^^^^^
...
507 |     pub fn detect_schemes_in_content(&self, content: &str) -> Vec<String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
521 |     pub fn is_global_key(key: &str) -> bool {
    |            ^^^^^^^^^^^^^
...
529 |     pub fn expand_path(&self, path: &str) -> String {
    |            ^^^^^^^^^^^
...
548 |     fn default_env_mappings() -> HashMap<String, String> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
565 |     fn default_values() -> HashMap<String, String> {
    |        ^^^^^^^^^^^^^^
...
575 |     fn default_template_vars() -> HashMap<String, String> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/types.rs:57:12
    |
40  | impl DataSourceConfig {
    | --------------------- associated items in this implementation
...
57  |     pub fn from_uri(uri: &str) -> Result<Self, ParseError> {
    |            ^^^^^^^^
...
94  |     pub fn get_parameter(&self, key: &str) -> Option<&String> {
    |            ^^^^^^^^^^^^^
...
99  |     pub fn get_parameter_or(&self, key: &str, default: &str) -> String {
    |            ^^^^^^^^^^^^^^^^
...
107 |     pub fn get_bool_parameter(&self, key: &str) -> Option<bool> {
    |            ^^^^^^^^^^^^^^^^^^
...
118 |     pub fn get_int_parameter(&self, key: &str) -> Option<i64> {
    |            ^^^^^^^^^^^^^^^^^
...
123 |     pub fn set_parameter<K: Into<String>, V: Into<String>>(&mut self, key: K, value: V) {
    |            ^^^^^^^^^^^^^
...
129 |     pub fn remove_parameter(&mut self, key: &str) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^
...
138 |     pub fn is_valid(&self) -> bool {
    |            ^^^^^^^^
...
143 |     pub fn mark_validated(&mut self) {
    |            ^^^^^^^^^^^^^^
...
148 |     pub fn clear_validation(&mut self) {
    |            ^^^^^^^^^^^^^^^^

warning: struct `ConfigMetadata` is never constructed
   --> src/ferris/sql/config/types.rs:167:12
    |
167 | pub struct ConfigMetadata {
    |            ^^^^^^^^^^^^^^

warning: struct `ValidationStats` is never constructed
   --> src/ferris/sql/config/types.rs:183:12
    |
183 | pub struct ValidationStats {
    |            ^^^^^^^^^^^^^^^

warning: associated items `new` and `success_rate` are never used
   --> src/ferris/sql/config/types.rs:198:12
    |
197 | impl ValidationStats {
    | -------------------- associated items in this implementation
198 |     pub fn new() -> Self {
    |            ^^^
...
207 |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^

warning: type alias `ConfigResult` is never used
   --> src/ferris/sql/config/types.rs:223:10
    |
223 | pub type ConfigResult<T> = Result<T, ConfigError>;
    |          ^^^^^^^^^^^^

warning: enum `ConfigError` is never used
   --> src/ferris/sql/config/types.rs:227:10
    |
227 | pub enum ConfigError {
    |          ^^^^^^^^^^^

warning: trait `ConfigValidator` is never used
  --> src/ferris/sql/config/validation.rs:21:11
   |
21 | pub trait ConfigValidator {
   |           ^^^^^^^^^^^^^^^

warning: type alias `ValidationResult` is never used
  --> src/ferris/sql/config/validation.rs:36:10
   |
36 | pub type ValidationResult = Result<Vec<ValidationWarning>, ValidationError>;
   |          ^^^^^^^^^^^^^^^^

warning: struct `ValidationWarning` is never constructed
  --> src/ferris/sql/config/validation.rs:40:12
   |
40 | pub struct ValidationWarning {
   |            ^^^^^^^^^^^^^^^^^

warning: enum `ValidationError` is never used
  --> src/ferris/sql/config/validation.rs:56:10
   |
56 | pub enum ValidationError {
   |          ^^^^^^^^^^^^^^^

warning: struct `ValidatorMetadata` is never constructed
   --> src/ferris/sql/config/validation.rs:103:12
    |
103 | pub struct ValidatorMetadata {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `ConfigValidatorRegistry` is never constructed
   --> src/ferris/sql/config/validation.rs:118:12
    |
118 | pub struct ConfigValidatorRegistry {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ValidationStats` is never constructed
   --> src/ferris/sql/config/validation.rs:128:12
    |
128 | pub struct ValidationStats {
    |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/validation.rs:156:12
    |
154 | impl ConfigValidatorRegistry {
    | ---------------------------- associated items in this implementation
155 |     /// Create new registry with default validators
156 |     pub fn new() -> Self {
    |            ^^^
...
174 |     pub fn register(&mut self, scheme: &str, validator: Box<dyn ConfigValidator>) {
    |            ^^^^^^^^
...
179 |     pub fn validate(&mut self, config: &DataSourceConfig) -> ValidationResult {
    |            ^^^^^^^^
...
217 |     fn validate_basic(&self, config: &DataSourceConfig) -> ValidationResult {
    |        ^^^^^^^^^^^^^^
...
245 |     pub fn stats(&self) -> &ValidationStats {
    |            ^^^^^
...
250 |     pub fn reset_stats(&mut self) {
    |            ^^^^^^^^^^^
...
255 |     pub fn supported_schemes(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `KafkaValidator` is never constructed
   --> src/ferris/sql/config/validation.rs:262:12
    |
262 | pub struct KafkaValidator {
    |            ^^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:273:12
    |
272 | impl KafkaValidator {
    | ------------------- associated function in this implementation
273 |     pub fn new() -> Self {
    |            ^^^

warning: struct `S3Validator` is never constructed
   --> src/ferris/sql/config/validation.rs:397:12
    |
397 | pub struct S3Validator {
    |            ^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:408:12
    |
407 | impl S3Validator {
    | ---------------- associated function in this implementation
408 |     pub fn new() -> Self {
    |            ^^^

warning: associated function `is_valid_aws_region` is never used
   --> src/ferris/sql/config/validation.rs:506:8
    |
505 | impl S3Validator {
    | ---------------- associated function in this implementation
506 |     fn is_valid_aws_region(region: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^

warning: struct `FileValidator` is never constructed
   --> src/ferris/sql/config/validation.rs:536:12
    |
536 | pub struct FileValidator {
    |            ^^^^^^^^^^^^^

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:547:12
    |
546 | impl FileValidator {
    | ------------------ associated function in this implementation
547 |     pub fn new() -> Self {
    |            ^^^

warning: struct `PostgreSQLValidator` is never constructed
   --> src/ferris/sql/config/validation.rs:684:5
    |
684 |     PostgreSQLValidator,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:631:20
    |
630 |           impl $name {
    |           ---------- associated function in this implementation
631 |               pub fn new() -> Self {
    |                      ^^^
...
683 | / simple_validator!(
684 | |     PostgreSQLValidator,
685 | |     "postgresql",
686 | |     "Validates PostgreSQL database configurations"
687 | | );
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: struct `ClickHouseValidator` is never constructed
   --> src/ferris/sql/config/validation.rs:689:5
    |
689 |     ClickHouseValidator,
    |     ^^^^^^^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:631:20
    |
630 |           impl $name {
    |           ---------- associated function in this implementation
631 |               pub fn new() -> Self {
    |                      ^^^
...
688 | / simple_validator!(
689 | |     ClickHouseValidator,
690 | |     "clickhouse",
691 | |     "Validates ClickHouse database configurations"
692 | | );
    | |_- in this macro invocation
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: struct `HttpValidator` is never constructed
   --> src/ferris/sql/config/validation.rs:693:19
    |
693 | simple_validator!(HttpValidator, "http", "Validates HTTP API configurations");
    |                   ^^^^^^^^^^^^^
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: associated function `new` is never used
   --> src/ferris/sql/config/validation.rs:631:20
    |
630 |         impl $name {
    |         ---------- associated function in this implementation
631 |             pub fn new() -> Self {
    |                    ^^^
...
693 | simple_validator!(HttpValidator, "http", "Validates HTTP API configurations");
    | ----------------------------------------------------------------------------- in this macro invocation
    |
    = note: this warning originates in the macro `simple_validator` (in Nightly builds, run with -Z macro-backtrace for more info)

warning: methods `success_rate` and `avg_validation_time_us` are never used
   --> src/ferris/sql/config/validation.rs:697:12
    |
695 | impl ValidationStats {
    | -------------------- methods in this implementation
696 |     /// Get success rate percentage
697 |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
706 |     pub fn avg_validation_time_us(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: fields `validation_pattern`, `description`, and `allowed_values` are never read
  --> src/ferris/sql/config/with_clause_parser.rs:33:9
   |
23 | pub struct ConfigKeySchema {
   |            --------------- fields in this struct
...
33 |     pub validation_pattern: Option<String>,
   |         ^^^^^^^^^^^^^^^^^^
34 |     /// Description for documentation
35 |     pub description: String,
   |         ^^^^^^^^^^^
36 |     /// Allowed values for enum types
37 |     pub allowed_values: Option<Vec<String>>,
   |         ^^^^^^^^^^^^^^
   |
   = note: `ConfigKeySchema` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `Float`, `FilePath`, and `List` are never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:45:5
   |
42 | pub enum ConfigValueType {
   |          --------------- variants in this enum
...
45 |     Float,
   |     ^^^^^
...
49 |     FilePath,
   |     ^^^^^^^^
50 |     Enum(Vec<String>),
51 |     List(Box<ConfigValueType>),
   |     ^^^^
   |
   = note: `ConfigValueType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `warnings` is never read
  --> src/ferris/sql/config/with_clause_parser.rs:70:9
   |
56 | pub struct WithClauseConfig {
   |            ---------------- field in this struct
...
70 |     pub warnings: Vec<String>,
   |         ^^^^^^^^
   |
   = note: `WithClauseConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `FilePath` and `List` are never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:82:5
   |
75 | pub enum ConfigValue {
   |          ----------- variants in this enum
...
82 |     FilePath(String),
   |     ^^^^^^^^
83 |     List(Vec<ConfigValue>),
   |     ^^^^
   |
   = note: `ConfigValue` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variant `ValidationError` is never constructed
   --> src/ferris/sql/config/with_clause_parser.rs:117:5
    |
100 | pub enum WithClauseError {
    |          --------------- variant in this enum
...
117 |     ValidationError { key: String, message: String },
    |     ^^^^^^^^^^^^^^^
    |
    = note: `WithClauseError` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `InvalidExtendsPath` and `MergeError` are never constructed
   --> src/ferris/sql/config/yaml_loader.rs:104:5
    |
84  | pub enum YamlConfigError {
    |          --------------- variants in this enum
...
104 |     InvalidExtendsPath { path: String, file: PathBuf },
    |     ^^^^^^^^^^^^^^^^^^
...
107 |     MergeError { message: String },
    |     ^^^^^^^^^^
    |
    = note: `YamlConfigError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `clear_cache` and `cache_stats` are never used
   --> src/ferris/sql/config/yaml_loader.rs:284:12
    |
110 | impl YamlConfigLoader {
    | --------------------- methods in this implementation
...
284 |     pub fn clear_cache(&mut self) {
    |            ^^^^^^^^^^^
...
289 |     pub fn cache_stats(&self) -> (usize, usize) {
    |            ^^^^^^^^^^^

warning: function `load_yaml_config` is never used
   --> src/ferris/sql/config/yaml_loader.rs:295:8
    |
295 | pub fn load_yaml_config<P: AsRef<Path>>(
    |        ^^^^^^^^^^^^^^^^

warning: struct `StreamingSqlContext` is never constructed
 --> src/ferris/sql/context.rs:8:12
  |
8 | pub struct StreamingSqlContext {
  |            ^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/context.rs:15:12
    |
14  | impl StreamingSqlContext {
    | ------------------------ associated items in this implementation
15  |     pub fn new() -> Self {
    |            ^^^
...
23  |     pub fn register_stream(
    |            ^^^^^^^^^^^^^^^
...
41  |     pub fn unregister_stream(&mut self, name: &str) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
54  |     pub fn execute_query(&self, sql: &str) -> Result<StreamHandle, SqlError> {
    |            ^^^^^^^^^^^^^
...
60  |     pub fn get_stream_schema(&self, name: &str) -> Option<&Schema> {
    |            ^^^^^^^^^^^^^^^^^
...
64  |     pub fn list_streams(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^
...
68  |     fn validate_query(&self, query: &StreamingQuery) -> Result<(), SqlError> {
    |        ^^^^^^^^^^^^^^
...
240 |     fn validate_expression(
    |        ^^^^^^^^^^^^^^^^^^^
...
273 |     fn create_execution_plan(&self, query: StreamingQuery) -> Result<StreamHandle, SqlError> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: struct `SqlQueryExecutor` is never constructed
   --> src/ferris/sql/context.rs:368:12
    |
368 | pub struct SqlQueryExecutor {
    |            ^^^^^^^^^^^^^^^^

warning: associated items `new`, `execute`, and `explain` are never used
   --> src/ferris/sql/context.rs:373:12
    |
372 | impl SqlQueryExecutor {
    | --------------------- associated items in this implementation
373 |     pub fn new(context: Arc<StreamingSqlContext>) -> Self {
    |            ^^^
...
377 |     pub async fn execute(&self, sql: &str) -> Result<StreamHandle, SqlError> {
    |                  ^^^^^^^
...
381 |     pub fn explain(&self, sql: &str) -> Result<String, SqlError> {
    |            ^^^^^^^

warning: multiple variants are never constructed
   --> src/ferris/sql/error.rs:137:5
    |
132 | pub enum SqlError {
    |          -------- variants in this enum
...
137 |     ParseError {
    |     ^^^^^^^^^^
...
148 |     SchemaError {
    |     ^^^^^^^^^^^
...
183 |     StreamError {
    |     ^^^^^^^^^^^
...
194 |     WindowError {
    |     ^^^^^^^^^^^
...
205 |     ResourceError {
    |     ^^^^^^^^^^^^^
...
216 |     TableNotFound {
    |     ^^^^^^^^^^^^^
...
225 |     ConfigurationError {
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `SqlError` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated functions are never used
   --> src/ferris/sql/error.rs:303:12
    |
301 | impl SqlError {
    | ------------- associated functions in this implementation
302 |     /// Create a parse error with position and optional SQL text for enhanced reporting
303 |     pub fn parse_error(message: impl Into<String>, position: Option<usize>) -> Self {
    |            ^^^^^^^^^^^
...
311 |     pub fn parse_error_with_context(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
336 |     fn calculate_line_column(text: &str, position: usize) -> (usize, usize) {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
356 |     fn extract_snippet(text: &str, position: usize, context_chars: usize) -> String {
    |        ^^^^^^^^^^^^^^^
...
414 |     fn enhance_parse_error_message(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
436 |     pub fn schema_error(message: impl Into<String>, column: Option<String>) -> Self {
    |            ^^^^^^^^^^^^
...
452 |     pub fn type_error(
    |            ^^^^^^^^^^
...
465 |     pub fn stream_error(stream_name: impl Into<String>, message: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^
...
473 |     pub fn window_error(message: impl Into<String>, window_type: Option<String>) -> Self {
    |            ^^^^^^^^^^^^
...
481 |     pub fn resource_error(resource: impl Into<String>, message: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^

warning: type alias `SqlResult` is never used
   --> src/ferris/sql/error.rs:645:10
    |
645 | pub type SqlResult<T> = Result<T, SqlError>;
    |          ^^^^^^^^^

warning: type alias `ParseResult` is never used
   --> src/ferris/sql/error.rs:648:10
    |
648 | pub type ParseResult<'a, T> = Result<(&'a str, T), SqlError>;
    |          ^^^^^^^^^^^

warning: variants `DeadLetterError`, `ResourceExhausted`, and `HealthCheckFailed` are never constructed
  --> src/ferris/sql/error/recovery.rs:69:5
   |
55 | pub enum RecoveryError {
   |          ------------- variants in this enum
...
69 |     DeadLetterError { queue: String, message: String },
   |     ^^^^^^^^^^^^^^^
70 |     /// Resource pool exhausted
71 |     ResourceExhausted {
   |     ^^^^^^^^^^^^^^^^^
...
77 |     HealthCheckFailed {
   |     ^^^^^^^^^^^^^^^^^
   |
   = note: `RecoveryError` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `metrics` and `reset` are never used
   --> src/ferris/sql/error/recovery.rs:331:18
    |
213 | impl CircuitBreaker {
    | ------------------- methods in this implementation
...
331 |     pub async fn metrics(&self) -> CircuitBreakerMetrics {
    |                  ^^^^^^^
...
340 |     pub async fn reset(&self) {
    |                  ^^^^^

warning: methods `recovery_timeout`, `success_threshold`, `request_timeout`, and `enable_metrics` are never used
   --> src/ferris/sql/error/recovery.rs:477:12
    |
454 | impl CircuitBreakerBuilder {
    | -------------------------- methods in this implementation
...
477 |     pub fn recovery_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
482 |     pub fn success_threshold(mut self, threshold: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
487 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
492 |     pub fn enable_metrics(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^^^^

warning: variants `Fixed` and `Linear` are never constructed
   --> src/ferris/sql/error/recovery.rs:532:5
    |
530 | pub enum BackoffStrategy {
    |          --------------- variants in this enum
531 |     /// Fixed delay between retries
532 |     Fixed,
    |     ^^^^^
533 |     /// Linear increase in delay
534 |     Linear { increment: Duration },
    |     ^^^^^^
    |
    = note: `BackoffStrategy` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `OnError`, `OnTimeout`, `OnCircuitOpen`, and `Custom` are never constructed
   --> src/ferris/sql/error/recovery.rs:543:5
    |
541 | pub enum RetryCondition {
    |          -------------- variants in this enum
542 |     /// Retry on specific error types
543 |     OnError(String),
    |     ^^^^^^^
544 |     /// Retry on timeouts
545 |     OnTimeout,
    |     ^^^^^^^^^
546 |     /// Retry on circuit breaker open
547 |     OnCircuitOpen,
    |     ^^^^^^^^^^^^^
548 |     /// Custom condition function
549 |     Custom(fn(&RecoveryError) -> bool),
    |     ^^^^^^
    |
    = note: `RetryCondition` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated function `fixed_delay` is never used
   --> src/ferris/sql/error/recovery.rs:559:12
    |
552 | impl RetryPolicy {
    | ---------------- associated function in this implementation
...
559 |     pub fn fixed_delay() -> RetryPolicyBuilder {
    |            ^^^^^^^^^^^

warning: methods `max_delay`, `retry_condition`, and `enable_jitter` are never used
   --> src/ferris/sql/error/recovery.rs:677:12
    |
655 | impl RetryPolicyBuilder {
    | ----------------------- methods in this implementation
...
677 |     pub fn max_delay(mut self, delay: Duration) -> Self {
    |            ^^^^^^^^^
...
687 |     pub fn retry_condition(mut self, condition: RetryCondition) -> Self {
    |            ^^^^^^^^^^^^^^^
...
692 |     pub fn enable_jitter(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^^^

warning: fields `message_ttl`, `enable_auto_retry`, and `retry_interval` are never read
   --> src/ferris/sql/error/recovery.rs:723:9
    |
719 | pub struct DeadLetterConfig {
    |            ---------------- fields in this struct
...
723 |     pub message_ttl: Duration,
    |         ^^^^^^^^^^^
724 |     /// Enable automatic retry from DLQ
725 |     pub enable_auto_retry: bool,
    |         ^^^^^^^^^^^^^^^^^
726 |     /// Retry interval for auto-retry
727 |     pub retry_interval: Duration,
    |         ^^^^^^^^^^^^^^
    |
    = note: `DeadLetterConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `original_data`, `error_details`, `failed_at`, `retry_count`, `source_topic`, and `headers` are never read
   --> src/ferris/sql/error/recovery.rs:748:9
    |
746 | pub struct FailedMessage {
    |            ------------- fields in this struct
747 |     pub id: String,
748 |     pub original_data: String,
    |         ^^^^^^^^^^^^^
749 |     pub error_details: String,
    |         ^^^^^^^^^^^^^
750 |     pub failed_at: Instant,
    |         ^^^^^^^^^
751 |     pub retry_count: u32,
    |         ^^^^^^^^^^^
752 |     pub source_topic: Option<String>,
    |         ^^^^^^^^^^^^
753 |     pub headers: HashMap<String, String>,
    |         ^^^^^^^
    |
    = note: `FailedMessage` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `messages_retried`, `messages_expired`, and `avg_processing_time_ms` are never read
   --> src/ferris/sql/error/recovery.rs:760:9
    |
758 | pub struct DeadLetterMetrics {
    |            ----------------- fields in this struct
759 |     pub total_messages: u64,
760 |     pub messages_retried: u64,
    |         ^^^^^^^^^^^^^^^^
761 |     pub messages_expired: u64,
    |         ^^^^^^^^^^^^^^^^
762 |     pub current_queue_size: usize,
763 |     pub avg_processing_time_ms: f64,
    |         ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `DeadLetterMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `with_config`, `metrics`, `maintenance`, and `clear` are never used
   --> src/ferris/sql/error/recovery.rs:778:18
    |
766 | impl DeadLetterQueue {
    | -------------------- associated items in this implementation
...
778 |     pub async fn with_config(name: &str, config: DeadLetterConfig) -> RecoveryResult<Self> {
    |                  ^^^^^^^^^^^
...
826 |     pub async fn metrics(&self) -> DeadLetterMetrics {
    |                  ^^^^^^^
...
835 |     pub async fn maintenance(&self) -> RecoveryResult<usize> {
    |                  ^^^^^^^^^^^
...
855 |     pub async fn clear(&self) -> RecoveryResult<usize> {
    |                  ^^^^^

warning: fields `config` and `metrics` are never read
   --> src/ferris/sql/error/recovery.rs:873:5
    |
871 | pub struct HealthMonitor {
    |            ------------- fields in this struct
872 |     components: Arc<RwLock<HashMap<String, ComponentHealth>>>,
873 |     config: HealthConfig,
    |     ^^^^^^
874 |     metrics: Arc<RwLock<HealthMetrics>>,
    |     ^^^^^^^

warning: fields `check_interval`, `check_timeout`, `failure_threshold`, and `enable_metrics` are never read
   --> src/ferris/sql/error/recovery.rs:881:9
    |
879 | pub struct HealthConfig {
    |            ------------ fields in this struct
880 |     /// Health check interval
881 |     pub check_interval: Duration,
    |         ^^^^^^^^^^^^^^
882 |     /// Timeout for individual health checks
883 |     pub check_timeout: Duration,
    |         ^^^^^^^^^^^^^
884 |     /// Number of consecutive failures to mark as unhealthy
885 |     pub failure_threshold: u32,
    |         ^^^^^^^^^^^^^^^^^
886 |     /// Enable detailed health metrics
887 |     pub enable_metrics: bool,
    |         ^^^^^^^^^^^^^^
    |
    = note: `HealthConfig` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `name` is never read
   --> src/ferris/sql/error/recovery.rs:904:9
    |
903 | pub struct ComponentHealth {
    |            --------------- field in this struct
904 |     pub name: String,
    |         ^^^^
    |
    = note: `ComponentHealth` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `total_checks`, `successful_checks`, `failed_checks`, `avg_check_time_ms`, `components_healthy`, and `components_unhealthy` are never read
   --> src/ferris/sql/error/recovery.rs:923:9
    |
922 | pub struct HealthMetrics {
    |            ------------- fields in this struct
923 |     pub total_checks: u64,
    |         ^^^^^^^^^^^^
924 |     pub successful_checks: u64,
    |         ^^^^^^^^^^^^^^^^^
925 |     pub failed_checks: u64,
    |         ^^^^^^^^^^^^^
926 |     pub avg_check_time_ms: f64,
    |         ^^^^^^^^^^^^^^^^^
927 |     pub components_healthy: usize,
    |         ^^^^^^^^^^^^^^^^^^
928 |     pub components_unhealthy: usize,
    |         ^^^^^^^^^^^^^^^^^^^^
    |
    = note: `HealthMetrics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: method `metrics` is never used
    --> src/ferris/sql/error/recovery.rs:1016:18
     |
931  | impl HealthMonitor {
     | ------------------ method in this implementation
...
1016 |     pub async fn metrics(&self) -> HealthMetrics {
     |                  ^^^^^^^

warning: struct `AggregationEngine` is never constructed
  --> src/ferris/sql/execution/aggregation/mod.rs:60:12
   |
60 | pub struct AggregationEngine;
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `new`, `create_accumulator`, and `create_group_by_state` are never used
  --> src/ferris/sql/execution/aggregation/mod.rs:64:12
   |
62 | impl AggregationEngine {
   | ---------------------- associated items in this implementation
63 |     /// Create a new aggregation engine
64 |     pub fn new() -> Self {
   |            ^^^
...
69 |     pub fn create_accumulator(&self) -> GroupAccumulator {
   |            ^^^^^^^^^^^^^^^^^^
...
74 |     pub fn create_group_by_state(
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `AccumulatorManager` is never constructed
  --> src/ferris/sql/execution/aggregation/accumulator.rs:13:12
   |
13 | pub struct AccumulatorManager;
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/aggregation/accumulator.rs:18:12
    |
15  | impl AccumulatorManager {
    | ----------------------- associated functions in this implementation
...
18  |     pub fn process_record_into_accumulator(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
40  |     fn process_aggregate_expression(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
228 |     pub fn field_value_to_string(value: &FieldValue) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn extract_aggregate_expressions(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
312 |     pub fn is_aggregate_expression(expr: &Expr) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
337 |     pub fn generate_field_name(expr: &Expr) -> String {
    |            ^^^^^^^^^^^^^^^^^^^
...
351 |     fn expr_to_string(expr: &Expr) -> String {
    |        ^^^^^^^^^^^^^^

warning: struct `AggregateFunctions` is never constructed
  --> src/ferris/sql/execution/aggregation/functions.rs:13:12
   |
13 | pub struct AggregateFunctions;
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/aggregation/functions.rs:20:12
    |
15  | impl AggregateFunctions {
    | ----------------------- associated functions in this implementation
...
20  |     pub fn compute_field_aggregate_value(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
68  |     fn compute_count_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
94  |     fn compute_sum_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
104 |     fn compute_avg_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
121 |     fn compute_min_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
133 |     fn compute_max_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
145 |     fn compute_stddev_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
164 |     fn compute_variance_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
183 |     fn compute_first_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
195 |     fn compute_last_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
207 |     fn compute_string_agg_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
235 |     fn compute_count_distinct_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
247 |     fn compute_approx_count_distinct_aggregate(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
263 |     pub fn is_aggregate_function(expr: &Expr) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
289 |     pub fn supported_functions() -> &'static [&'static str] {
    |            ^^^^^^^^^^^^^^^^^^^

warning: struct `GroupByStateManager` is never constructed
  --> src/ferris/sql/execution/aggregation/state.rs:12:12
   |
12 | pub struct GroupByStateManager;
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated functions `generate_group_key`, `field_value_to_group_key`, `record_matches_group_key`, `get_group_records`, and `extract_group_keys` are never used
   --> src/ferris/sql/execution/aggregation/state.rs:17:12
    |
14  | impl GroupByStateManager {
    | ------------------------ associated functions in this implementation
...
17  |     pub fn generate_group_key(
    |            ^^^^^^^^^^^^^^^^^^
...
34  |     pub fn field_value_to_group_key(value: &FieldValue) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
94  |     pub fn record_matches_group_key(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
105 |     pub fn get_group_records<'a>(
    |            ^^^^^^^^^^^^^^^^^
...
123 |     pub fn extract_group_keys(
    |            ^^^^^^^^^^^^^^^^^^

warning: variant `Auto` is never constructed
  --> src/ferris/sql/execution/algorithms/hash_join.rs:25:5
   |
19 | pub enum JoinStrategy {
   |          ------------ variant in this enum
...
25 |     Auto,
   |     ^^^^
   |
   = note: `JoinStrategy` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: field `selectivity` is never read
  --> src/ferris/sql/execution/algorithms/hash_join.rs:38:9
   |
30 | pub struct JoinStatistics {
   |            -------------- field in this struct
...
38 |     pub selectivity: f64,
   |         ^^^^^^^^^^^
   |
   = note: `JoinStatistics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `build_from_records` and `memory_usage` are never used
   --> src/ferris/sql/execution/algorithms/hash_join.rs:93:12
    |
82  | impl HashJoinTable {
    | ------------------ methods in this implementation
...
93  |     pub fn build_from_records(
    |            ^^^^^^^^^^^^^^^^^^
...
177 |     pub fn memory_usage(&self) -> usize {
    |            ^^^^^^^^^^^^

warning: struct `HashJoinExecutor` is never constructed
   --> src/ferris/sql/execution/algorithms/hash_join.rs:184:12
    |
184 | pub struct HashJoinExecutor {
    |            ^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/algorithms/hash_join.rs:195:12
    |
193 | impl HashJoinExecutor {
    | --------------------- associated items in this implementation
194 |     /// Create new hash join executor
195 |     pub fn new(join_clause: JoinClause, key_exprs: Vec<Expr>) -> Self {
    |            ^^^
...
204 |     pub fn build_phase(
    |            ^^^^^^^^^^^
...
213 |     pub fn probe_phase(
    |            ^^^^^^^^^^^
...
242 |     pub fn execute(
    |            ^^^^^^^
...
316 |     fn combine_records(
    |        ^^^^^^^^^^^^^^^
...
343 |     fn add_unmatched_left_records(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
367 |     fn add_unmatched_right_records(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     fn extract_left_key(&self, _record: &StreamRecord) -> u64 {
    |        ^^^^^^^^^^^^^^^^
...
398 |     fn extract_right_key(&self, _record: &StreamRecord) -> u64 {
    |        ^^^^^^^^^^^^^^^^^
...
405 |     fn create_null_left_record(&self) -> StreamRecord {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
416 |     fn create_null_right_record(&self) -> StreamRecord {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `HashJoinBuilder` is never constructed
   --> src/ferris/sql/execution/algorithms/hash_join.rs:428:12
    |
428 | pub struct HashJoinBuilder {
    |            ^^^^^^^^^^^^^^^

warning: associated items `new`, `with_strategy`, `with_statistics`, `with_memory_limit`, `build`, and `extract_join_keys` are never used
   --> src/ferris/sql/execution/algorithms/hash_join.rs:436:12
    |
434 | impl HashJoinBuilder {
    | -------------------- associated items in this implementation
435 |     /// Create new hash join builder
436 |     pub fn new() -> Self {
    |            ^^^
...
445 |     pub fn with_strategy(mut self, strategy: JoinStrategy) -> Self {
    |            ^^^^^^^^^^^^^
...
451 |     pub fn with_statistics(mut self, stats: JoinStatistics) -> Self {
    |            ^^^^^^^^^^^^^^^
...
457 |     pub fn with_memory_limit(mut self, limit: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
463 |     pub fn build(self, join_clause: JoinClause) -> Result<HashJoinExecutor, SqlError> {
    |            ^^^^^
...
484 |     fn extract_join_keys(condition: &Expr) -> Result<Vec<Expr>, SqlError> {
    |        ^^^^^^^^^^^^^^^^^

warning: struct `StreamExecutionEngine` is never constructed
   --> src/ferris/sql/execution/engine.rs:148:12
    |
148 | pub struct StreamExecutionEngine {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
    --> src/ferris/sql/execution/engine.rs:166:12
     |
165  | impl StreamExecutionEngine {
     | -------------------------- associated items in this implementation
166  |     pub fn new(output_sender: mpsc::UnboundedSender<StreamRecord>) -> Self {
     |            ^^^
...
180  |     pub fn set_performance_monitor(
     |            ^^^^^^^^^^^^^^^^^^^^^^^
...
188  |     pub fn performance_monitor(
     |            ^^^^^^^^^^^^^^^^^^^
...
197  |     fn create_processor_context(&self, query_id: &str) -> ProcessorContext {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
213  |     fn get_window_context_for_processors(&self, query_id: &str) -> Option<WindowContext> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
236  |     fn load_window_states_for_context(&self, query_id: &str) -> Vec<(String, WindowState)> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
251  |     fn save_window_states_from_context(&mut self, context: &ProcessorContext) {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
262  |     fn apply_query(
     |        ^^^^^^^^^^^
...
272  |     fn apply_query_with_processors(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
318  |     fn generate_query_id(&self, query: &StreamingQuery) -> String {
     |        ^^^^^^^^^^^^^^^^^
...
345  |     fn apply_header_mutations(
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
377  |     pub async fn execute_with_record(
     |                  ^^^^^^^^^^^^^^^^^^^
...
402  |     async fn execute_internal(
     |              ^^^^^^^^^^^^^^^^
...
482  |     pub async fn start(&mut self) -> Result<(), SqlError> {
     |                  ^^^^^
...
515  |     pub async fn start_query_execution(
     |                  ^^^^^^^^^^^^^^^^^^^^^
...
541  |     async fn stop_query_execution(&mut self, query_id: &str) -> Result<(), SqlError> {
     |              ^^^^^^^^^^^^^^^^^^^^
...
549  |     pub async fn process_stream_record(
     |                  ^^^^^^^^^^^^^^^^^^^^^
...
613  |     pub async fn flush_windows(&mut self) -> Result<(), SqlError> {
     |                  ^^^^^^^^^^^^^
...
657  |     fn query_matches_stream(&self, query: &StreamingQuery, stream_name: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^
...
710  |     pub fn flush_group_by_results(&mut self, query: &StreamingQuery) -> Result<(), SqlError> {
     |            ^^^^^^^^^^^^^^^^^^^^^^
...
725  |     fn emit_group_by_results(
     |        ^^^^^^^^^^^^^^^^^^^^^
...
900  |     pub async fn execute_with_sources(
     |                  ^^^^^^^^^^^^^^^^^^^^
...
1003 |     pub async fn execute_from_source(
     |                  ^^^^^^^^^^^^^^^^^^^
...
1067 |     pub async fn stream_process(
     |                  ^^^^^^^^^^^^^^

warning: associated functions `evaluate_expression_with_subqueries` and `evaluate_expression_value_with_subqueries` are never used
   --> src/ferris/sql/execution/expression/evaluator.rs:882:12
    |
18  | impl ExpressionEvaluator {
    | ------------------------ associated functions in this implementation
...
882 |     pub fn evaluate_expression_with_subqueries<T: SubqueryExecutor>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
921 |     pub fn evaluate_expression_value_with_subqueries<T: SubqueryExecutor>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: trait `SubqueryExecutor` is never used
  --> src/ferris/sql/execution/expression/subquery_executor.rs:20:11
   |
20 | pub trait SubqueryExecutor {
   |           ^^^^^^^^^^^^^^^^

warning: function `evaluate_subquery_with_executor` is never used
   --> src/ferris/sql/execution/expression/subquery_executor.rs:104:8
    |
104 | pub fn evaluate_subquery_with_executor<T: SubqueryExecutor>(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `frame_bounds` is never read
  --> src/ferris/sql/execution/expression/window_functions.rs:57:9
   |
49 | pub struct WindowContext {
   |            ------------- field in this struct
...
57 |     pub frame_bounds: Option<(i64, i64)>,
   |         ^^^^^^^^^^^^
   |
   = note: `WindowContext` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: fields `groups`, `group_expressions`, `select_fields`, and `having_clause` are never read
  --> src/ferris/sql/execution/internal.rs:20:9
   |
18 | pub struct GroupByState {
   |            ------------ fields in this struct
19 |     /// Map of group keys to their accumulated state
20 |     pub groups: HashMap<Vec<String>, GroupAccumulator>,
   |         ^^^^^^
21 |     /// The GROUP BY expressions for this state
22 |     pub group_expressions: Vec<Expr>,
   |         ^^^^^^^^^^^^^^^^^
23 |     /// The SELECT fields to compute for each group
24 |     pub select_fields: Vec<SelectField>,
   |         ^^^^^^^^^^^^^
25 |     /// Optional HAVING clause
26 |     pub having_clause: Option<Expr>,
   |         ^^^^^^^^^^^^^
   |
   = note: `GroupByState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `new`, `get_or_create_group`, `get_group_keys`, `get_group`, and `get_group_mut` are never used
  --> src/ferris/sql/execution/internal.rs:31:12
   |
29 | impl GroupByState {
   | ----------------- associated items in this implementation
30 |     /// Create a new GroupByState for the given expressions and fields
31 |     pub fn new(
   |            ^^^
...
45 |     pub fn get_or_create_group(&mut self, key_values: Vec<String>) -> &mut GroupAccumulator {
   |            ^^^^^^^^^^^^^^^^^^^
...
50 |     pub fn get_group_keys(&self) -> Vec<&Vec<String>> {
   |            ^^^^^^^^^^^^^^
...
55 |     pub fn get_group(&self, key_values: &[String]) -> Option<&GroupAccumulator> {
   |            ^^^^^^^^^
...
60 |     pub fn get_group_mut(&mut self, key_values: &[String]) -> Option<&mut GroupAccumulator> {
   |            ^^^^^^^^^^^^^

warning: multiple fields are never read
  --> src/ferris/sql/execution/internal.rs:72:9
   |
70 | pub struct GroupAccumulator {
   |            ---------------- fields in this struct
71 |     /// Count of records in this group
72 |     pub count: u64,
   |         ^^^^^
73 |     /// Count of non-NULL values for COUNT(column) aggregates (field_name -> count)
74 |     pub non_null_counts: HashMap<String, u64>,
   |         ^^^^^^^^^^^^^^^
75 |     /// Sum values for SUM() aggregates (field_name -> sum)
76 |     pub sums: HashMap<String, f64>,
   |         ^^^^
77 |     /// Values for MIN() aggregates (field_name -> min_value)
78 |     pub mins: HashMap<String, FieldValue>,
   |         ^^^^
79 |     /// Values for MAX() aggregates (field_name -> max_value)
80 |     pub maxs: HashMap<String, FieldValue>,
   |         ^^^^
81 |     /// Values for statistical aggregates (field_name -> [values])
82 |     pub numeric_values: HashMap<String, Vec<f64>>,
   |         ^^^^^^^^^^^^^^
83 |     /// First values for FIRST() aggregates
84 |     pub first_values: HashMap<String, FieldValue>,
   |         ^^^^^^^^^^^^
85 |     /// Last values for LAST() aggregates (updated on each record)
86 |     pub last_values: HashMap<String, FieldValue>,
   |         ^^^^^^^^^^^
87 |     /// String values for STRING_AGG
88 |     pub string_values: HashMap<String, Vec<String>>,
   |         ^^^^^^^^^^^^^
89 |     /// Distinct values for COUNT_DISTINCT
90 |     pub distinct_values: HashMap<String, HashSet<String>>,
   |         ^^^^^^^^^^^^^^^
91 |     /// HyperLogLog estimators for APPROX_COUNT_DISTINCT
92 |     pub approx_distinct_values: HashMap<String, HyperLogLogPlus<String, RandomState>>,
   |         ^^^^^^^^^^^^^^^^^^^^^^
93 |     /// Sample record for non-aggregate fields (takes first record's values)
94 |     pub sample_record: Option<StreamRecord>,
   |         ^^^^^^^^^^^^^
   |
   = note: `GroupAccumulator` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/ferris/sql/execution/internal.rs:117:12
    |
97  | impl GroupAccumulator {
    | --------------------- methods in this implementation
...
117 |     pub fn increment_count(&mut self) {
    |            ^^^^^^^^^^^^^^^
...
122 |     pub fn add_non_null_count(&mut self, field_name: &str) {
    |            ^^^^^^^^^^^^^^^^^^
...
130 |     pub fn add_sum(&mut self, field_name: &str, value: f64) {
    |            ^^^^^^^
...
135 |     pub fn update_min(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
151 |     pub fn update_max(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
166 |     fn is_value_less_than(&self, left: &FieldValue, right: &FieldValue) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
176 |     fn is_value_greater_than(&self, left: &FieldValue, right: &FieldValue) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
186 |     pub fn set_sample_record(&mut self, record: StreamRecord) {
    |            ^^^^^^^^^^^^^^^^^
...
193 |     pub fn add_to_set(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
202 |     pub fn add_to_approx_set(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^^^^
...
212 |     pub fn set_first_value(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^^
...
219 |     pub fn set_last_value(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^
...
224 |     pub fn add_value_for_stats(&mut self, field_name: &str, value: f64) {
    |            ^^^^^^^^^^^^^^^^^^^
...
232 |     pub fn add_to_string_agg(&mut self, field_name: &str, value: FieldValue, _delimiter: &str) {
    |            ^^^^^^^^^^^^^^^^^

warning: enum `ExecutionMessage` is never used
   --> src/ferris/sql/execution/internal.rs:256:10
    |
256 | pub enum ExecutionMessage {
    |          ^^^^^^^^^^^^^^^^

warning: struct `HeaderMutation` is never constructed
   --> src/ferris/sql/execution/internal.rs:281:12
    |
281 | pub struct HeaderMutation {
    |            ^^^^^^^^^^^^^^

warning: associated functions `set` and `remove` are never used
   --> src/ferris/sql/execution/internal.rs:292:12
    |
290 | impl HeaderMutation {
    | ------------------- associated functions in this implementation
291 |     /// Create a new header set operation
292 |     pub fn set(key: String, value: String) -> Self {
    |            ^^^
...
301 |     pub fn remove(key: String) -> Self {
    |            ^^^^^^

warning: enum `HeaderOperation` is never used
   --> src/ferris/sql/execution/internal.rs:312:10
    |
312 | pub enum HeaderOperation {
    |          ^^^^^^^^^^^^^^^

warning: struct `QueryExecution` is never constructed
   --> src/ferris/sql/execution/internal.rs:323:12
    |
323 | pub struct QueryExecution {
    |            ^^^^^^^^^^^^^^

warning: associated items `new`, `query`, `state`, `set_state`, and `is_running` are never used
   --> src/ferris/sql/execution/internal.rs:334:12
    |
332 | impl QueryExecution {
    | ------------------- associated items in this implementation
333 |     /// Create a new query execution context
334 |     pub fn new(query: StreamingQuery) -> Self {
    |            ^^^
...
343 |     pub fn query(&self) -> &StreamingQuery {
    |            ^^^^^
...
348 |     pub fn state(&self) -> &ExecutionState {
    |            ^^^^^
...
353 |     pub fn set_state(&mut self, state: ExecutionState) {
    |            ^^^^^^^^^
...
358 |     pub fn is_running(&self) -> bool {
    |            ^^^^^^^^^^

warning: enum `ExecutionState` is never used
   --> src/ferris/sql/execution/internal.rs:365:10
    |
365 | pub enum ExecutionState {
    |          ^^^^^^^^^^^^^^

warning: fields `window_spec`, `buffer`, and `last_emit` are never read
   --> src/ferris/sql/execution/internal.rs:383:9
    |
381 | pub struct WindowState {
    |            ----------- fields in this struct
382 |     /// Window specification from the query
383 |     pub window_spec: WindowSpec,
    |         ^^^^^^^^^^^
384 |     /// Buffer of records within the current window
385 |     pub buffer: Vec<StreamRecord>,
    |         ^^^^^^
386 |     /// Timestamp of the last window emission
387 |     pub last_emit: i64,
    |         ^^^^^^^^^
    |
    = note: `WindowState` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: associated items `new`, `add_record`, `clear_buffer`, `buffer_size`, and `update_last_emit` are never used
   --> src/ferris/sql/execution/internal.rs:392:12
    |
390 | impl WindowState {
    | ---------------- associated items in this implementation
391 |     /// Create a new window state with the given specification
392 |     pub fn new(window_spec: WindowSpec) -> Self {
    |            ^^^
...
401 |     pub fn add_record(&mut self, record: StreamRecord) {
    |            ^^^^^^^^^^
...
406 |     pub fn clear_buffer(&mut self) {
    |            ^^^^^^^^^^^^
...
411 |     pub fn buffer_size(&self) -> usize {
    |            ^^^^^^^^^^^
...
416 |     pub fn update_last_emit(&mut self, timestamp: i64) {
    |            ^^^^^^^^^^^^^^^^

warning: method `summary` is never used
  --> src/ferris/sql/execution/performance/query_performance.rs:85:12
   |
34 | impl QueryPerformance {
   | --------------------- method in this implementation
...
85 |     pub fn summary(&self) -> String {
   |            ^^^^^^^

warning: method `memory_efficiency` is never used
  --> src/ferris/sql/execution/performance/metrics.rs:46:12
   |
29 | impl MemoryMetrics {
   | ------------------ method in this implementation
...
46 |     pub fn memory_efficiency(&self, bytes_processed: u64) -> f64 {
   |            ^^^^^^^^^^^^^^^^^

warning: method `top_processors_by_time` is never used
   --> src/ferris/sql/execution/performance/metrics.rs:260:12
    |
208 | impl PerformanceMetrics {
    | ----------------------- method in this implementation
...
260 |     pub fn top_processors_by_time(&self, limit: usize) -> Vec<&ProcessorMetrics> {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: method `reset` is never used
   --> src/ferris/sql/execution/performance/metrics.rs:372:12
    |
306 | impl AtomicMetricsCollector {
    | --------------------------- method in this implementation
...
372 |     pub fn reset(&self) {
    |            ^^^^^

warning: methods `get_slow_queries` and `reset_statistics` are never used
   --> src/ferris/sql/execution/performance/monitor.rs:99:12
    |
26  | impl PerformanceMonitor {
    | ----------------------- methods in this implementation
...
99  |     pub fn get_slow_queries(&self, limit: usize) -> Vec<QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^
...
109 |     pub fn reset_statistics(&self) {
    |            ^^^^^^^^^^^^^^^^

warning: fields `last_minute` and `last_day` are never read
   --> src/ferris/sql/execution/performance/monitor.rs:301:9
    |
297 | pub struct StatisticsSummary {
    |            ----------------- fields in this struct
...
301 |     pub last_minute: Option<WindowStatistics>,
    |         ^^^^^^^^^^^
...
305 |     pub last_day: Option<WindowStatistics>,
    |         ^^^^^^^^
    |
    = note: `StatisticsSummary` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: field `last_check` is never read
   --> src/ferris/sql/execution/performance/monitor.rs:331:9
    |
323 | pub struct PerformanceHealth {
    |            ----------------- field in this struct
...
331 |     pub last_check: Instant,
    |         ^^^^^^^^^^
    |
    = note: `PerformanceHealth` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: methods `get_slowest_queries` and `get_memory_trend` are never used
   --> src/ferris/sql/execution/performance/statistics.rs:157:12
    |
29  | impl QueryStatistics {
    | -------------------- methods in this implementation
...
157 |     pub fn get_slowest_queries(&self, limit: usize) -> Vec<&QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn get_memory_trend(&self, window_duration: Duration) -> MemoryTrend {
    |            ^^^^^^^^^^^^^^^^

warning: field `first_seen` is never read
   --> src/ferris/sql/execution/performance/statistics.rs:217:9
    |
201 | pub struct QueryPatternStats {
    |            ----------------- field in this struct
...
217 |     pub first_seen: Instant,
    |         ^^^^^^^^^^
    |
    = note: `QueryPatternStats` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: methods `efficiency` and `memory_efficiency` are never used
   --> src/ferris/sql/execution/performance/statistics.rs:264:12
    |
228 | impl QueryPatternStats {
    | ---------------------- methods in this implementation
...
264 |     pub fn efficiency(&self) -> f64 {
    |            ^^^^^^^^^^
...
273 |     pub fn memory_efficiency(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^

warning: fields `window_duration`, `total_bytes_processed`, `p50_execution_time`, and `p99_execution_time` are never read
   --> src/ferris/sql/execution/performance/statistics.rs:287:9
    |
285 | pub struct WindowStatistics {
    |            ---------------- fields in this struct
286 |     /// Duration of the window
287 |     pub window_duration: Duration,
    |         ^^^^^^^^^^^^^^^
...
293 |     pub total_bytes_processed: u64,
    |         ^^^^^^^^^^^^^^^^^^^^^
...
297 |     pub p50_execution_time: Duration,
    |         ^^^^^^^^^^^^^^^^^^
...
301 |     pub p99_execution_time: Duration,
    |         ^^^^^^^^^^^^^^^^^^
    |
    = note: `WindowStatistics` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: struct `MemoryTrend` is never constructed
   --> src/ferris/sql/execution/performance/statistics.rs:308:12
    |
308 | pub struct MemoryTrend {
    |            ^^^^^^^^^^^

warning: methods `get_recent_slow_queries` and `reset` are never used
   --> src/ferris/sql/execution/performance/statistics.rs:381:12
    |
328 | impl StatisticsCollector {
    | ------------------------ methods in this implementation
...
381 |     pub fn get_recent_slow_queries(&self, limit: usize) -> Vec<QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
396 |     pub fn reset(&self) {
    |            ^^^^^

warning: struct `QueryProcessor` is never constructed
  --> src/ferris/sql/execution/processors/mod.rs:20:12
   |
20 | pub struct QueryProcessor;
   |            ^^^^^^^^^^^^^^

warning: associated functions `process_query`, `process_query_with_monitoring`, `get_metrics`, `reset_context`, and `validate_context` are never used
   --> src/ferris/sql/execution/processors/mod.rs:24:12
    |
22  | impl QueryProcessor {
    | ------------------- associated functions in this implementation
23  |     /// Process a query against a record using the appropriate processor
24  |     pub fn process_query(
    |            ^^^^^^^^^^^^^
...
109 |     pub fn process_query_with_monitoring(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
120 |     pub fn get_metrics(context: &ProcessorContext) -> std::collections::HashMap<String, u64> {
    |            ^^^^^^^^^^^
...
160 |     pub fn reset_context(context: &mut ProcessorContext) {
    |            ^^^^^^^^^^^^^
...
167 |     pub fn validate_context(context: &ProcessorContext) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^

warning: multiple fields are never read
  --> src/ferris/sql/execution/processors/context.rs:23:9
   |
21 | pub struct ProcessorContext {
   |            ---------------- fields in this struct
22 |     /// Current record count for limit checking
23 |     pub record_count: u64,
   |         ^^^^^^^^^^^^
24 |     /// Maximum record count (for LIMIT)
25 |     pub max_records: Option<u64>,
   |         ^^^^^^^^^^^
26 |     /// Window processing state (legacy - kept for compatibility)
27 |     pub window_context: Option<WindowContext>,
   |         ^^^^^^^^^^^^^^
28 |     /// JOIN processing utilities
29 |     pub join_context: JoinContext,
   |         ^^^^^^^^^^^^
30 |     /// GROUP BY processing state
31 |     pub group_by_states: HashMap<String, crate::ferris::sql::execution::internal::GroupByState>,
   |         ^^^^^^^^^^^^^^^
32 |     /// Schema registry for introspection (SHOW/DESCRIBE operations)
33 |     pub schemas: HashMap<String, Schema>,
   |         ^^^^^^^
34 |     /// Stream handles registry
35 |     pub stream_handles: HashMap<String, StreamHandle>,
   |         ^^^^^^^^^^^^^^
...
38 |     pub data_sources: HashMap<String, Vec<StreamRecord>>,
   |         ^^^^^^^^^^^^
...
43 |     pub data_readers: HashMap<String, Box<dyn DataReader>>,
   |         ^^^^^^^^^^^^
...
46 |     pub data_writers: HashMap<String, Box<dyn DataWriter>>,
   |         ^^^^^^^^^^^^
...
49 |     pub active_reader: Option<String>,
   |         ^^^^^^^^^^^^^
...
52 |     pub active_writer: Option<String>,
   |         ^^^^^^^^^^^^^
53 |     /// Source positions/offsets for commit/seek operations
54 |     pub source_positions: HashMap<String, SourceOffset>,
   |         ^^^^^^^^^^^^^^^^
...
59 |     pub persistent_window_states: Vec<(String, WindowState)>,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^
60 |     /// Track which states were modified for efficient persistence (bit mask)
61 |     pub dirty_window_states: u32,
   |         ^^^^^^^^^^^^^^^^^^^
...
67 |     pub performance_monitor: Option<Arc<PerformanceMonitor>>,
   |         ^^^^^^^^^^^^^^^^^^^

warning: fields `buffer`, `last_emit`, and `should_emit` are never read
  --> src/ferris/sql/execution/processors/context.rs:73:9
   |
71 | pub struct WindowContext {
   |            ------------- fields in this struct
72 |     /// Buffered records for windowing
73 |     pub buffer: Vec<StreamRecord>,
   |         ^^^^^^
74 |     /// Last emission time
75 |     pub last_emit: i64,
   |         ^^^^^^^^^
76 |     /// Should emit in this processing cycle
77 |     pub should_emit: bool,
   |         ^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/processors/context.rs:105:12
    |
80  | impl ProcessorContext {
    | --------------------- associated items in this implementation
...
105 |     pub fn new_with_sources(
    |            ^^^^^^^^^^^^^^^^
...
122 |     pub fn set_performance_monitor(&mut self, monitor: Arc<PerformanceMonitor>) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
127 |     pub fn get_performance_monitor(&self) -> Option<&Arc<PerformanceMonitor>> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
137 |     pub fn get_metadata(&self, key: &str) -> Option<&String> {
    |            ^^^^^^^^^^^^
...
144 |     pub fn get_or_create_window_state(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
178 |     pub fn get_window_state(&self, query_id: &str) -> Option<&WindowState> {
    |            ^^^^^^^^^^^^^^^^
...
186 |     pub fn load_window_states(&mut self, states: Vec<(String, WindowState)>) {
    |            ^^^^^^^^^^^^^^^^^^
...
192 |     pub fn get_dirty_window_states(&self) -> Vec<(String, WindowState)> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
205 |     pub fn clear_dirty_flags(&mut self) {
    |            ^^^^^^^^^^^^^^^^^
...
212 |     pub fn add_reader(&mut self, source_name: &str, reader: Box<dyn DataReader>) {
    |            ^^^^^^^^^^
...
221 |     pub fn add_writer(&mut self, sink_name: &str, writer: Box<dyn DataWriter>) {
    |            ^^^^^^^^^^
...
230 |     pub async fn read_from(&mut self, source_name: &str) -> Result<Vec<StreamRecord>, SqlError> {
    |                  ^^^^^^^^^
...
246 |     pub async fn write_to(
    |                  ^^^^^^^^
...
269 |     pub async fn read(&mut self) -> Result<Vec<StreamRecord>, SqlError> {
    |                  ^^^^
...
281 |     pub async fn write(&mut self, record: StreamRecord) -> Result<(), SqlError> {
    |                  ^^^^^
...
293 |     pub fn set_active_reader(&mut self, source_name: &str) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
305 |     pub fn set_active_writer(&mut self, sink_name: &str) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
317 |     pub fn list_sources(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^
...
322 |     pub fn list_sinks(&self) -> Vec<String> {
    |            ^^^^^^^^^^
...
327 |     pub async fn write_batch_to(
    |                  ^^^^^^^^^^^^^^
...
350 |     pub async fn commit_source(&mut self, source_name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^^
...
366 |     pub async fn commit_sink(&mut self, sink_name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^
...
382 |     pub async fn begin_reader_transaction(&mut self) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
412 |     pub async fn begin_writer_transaction(&mut self) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
442 |     pub async fn commit_writer(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^^
...
472 |     pub async fn abort_writer(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^
...
502 |     pub async fn abort_reader(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^
...
532 |     pub async fn seek_source(
    |                  ^^^^^^^^^^^
...
560 |     pub fn get_source_position(&self, source_name: &str) -> Option<&SourceOffset> {
    |            ^^^^^^^^^^^^^^^^^^^
...
565 |     pub async fn flush_all(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^
...
576 |     pub async fn has_more_data(&self, source_name: &str) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^

warning: struct `ProcessorResult` is never constructed
 --> src/ferris/sql/execution/processors/processor_types.rs:7:12
  |
7 | pub struct ProcessorResult {
  |            ^^^^^^^^^^^^^^^

warning: struct `HeaderMutation` is never constructed
  --> src/ferris/sql/execution/processors/processor_types.rs:18:12
   |
18 | pub struct HeaderMutation {
   |            ^^^^^^^^^^^^^^

warning: enum `HeaderOperation` is never used
  --> src/ferris/sql/execution/processors/processor_types.rs:26:10
   |
26 | pub enum HeaderOperation {
   |          ^^^^^^^^^^^^^^^

warning: struct `DeleteProcessor` is never constructed
  --> src/ferris/sql/execution/processors/delete.rs:50:12
   |
50 | pub struct DeleteProcessor;
   |            ^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/processors/delete.rs:54:12
    |
52  | impl DeleteProcessor {
    | -------------------- associated functions in this implementation
53  |     /// Process a DELETE statement
54  |     pub fn process_delete(
    |            ^^^^^^^^^^^^^^
...
78  |     pub fn create_tombstone_record(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
135 |     pub fn validate_delete(table_name: &str, where_clause: &Option<Expr>) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^
...
163 |     pub fn matches_where_clause(
    |            ^^^^^^^^^^^^^^^^^^^^
...
174 |     pub fn get_referenced_columns(where_clause: &Option<Expr>) -> Vec<String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
182 |     pub fn create_soft_delete_record(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
218 |     pub fn is_tombstone_record(record: &StreamRecord) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^
...
234 |     pub fn extract_tombstone_metadata(tombstone: &StreamRecord) -> HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `InsertProcessor` is never constructed
  --> src/ferris/sql/execution/processors/insert.rs:44:12
   |
44 | pub struct InsertProcessor;
   |            ^^^^^^^^^^^^^^^

warning: associated functions `process_insert`, `process_values_insert`, `process_select_insert`, `map_select_result_to_insert`, `validate_insert`, and `get_insert_columns` are never used
   --> src/ferris/sql/execution/processors/insert.rs:48:12
    |
46  | impl InsertProcessor {
    | -------------------- associated functions in this implementation
47  |     /// Process an INSERT INTO statement
48  |     pub fn process_insert(
    |            ^^^^^^^^^^^^^^
...
67  |     fn process_values_insert(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
134 |     fn process_select_insert(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
176 |     fn map_select_result_to_insert(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
246 |     pub fn validate_insert(
    |            ^^^^^^^^^^^^^^^
...
326 |     pub fn get_insert_columns(
    |            ^^^^^^^^^^^^^^^^^^

warning: methods `process_pause_job`, `process_resume_job`, `process_deploy_job`, and `process` are never used
   --> src/ferris/sql/execution/processors/job.rs:115:12
    |
23  | impl JobProcessor {
    | ----------------- methods in this implementation
...
115 |     pub fn process_pause_job(
    |            ^^^^^^^^^^^^^^^^^
...
153 |     pub fn process_resume_job(
    |            ^^^^^^^^^^^^^^^^^^
...
191 |     pub fn process_deploy_job(
    |            ^^^^^^^^^^^^^^^^^^
...
262 |     pub fn process(
    |            ^^^^^^^

warning: struct `JoinProcessor` is never constructed
  --> src/ferris/sql/execution/processors/join.rs:13:12
   |
13 | pub struct JoinProcessor;
   |            ^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/processors/join.rs:17:12
    |
15  | impl JoinProcessor {
    | ------------------ associated functions in this implementation
16  |     /// Process all JOIN clauses and combine records
17  |     pub fn process_joins(
    |            ^^^^^^^^^^^^^
...
32  |     pub fn process_batch_joins(
    |            ^^^^^^^^^^^^^^^^^^^
...
62  |     fn select_join_strategy(left_size: usize, right_size: usize) -> JoinStrategy {
    |        ^^^^^^^^^^^^^^^^^^^^
...
75  |     fn execute_hash_join(
    |        ^^^^^^^^^^^^^^^^^
...
91  |     fn execute_nested_loop_batch(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
112 |     fn try_join_records(
    |        ^^^^^^^^^^^^^^^^
...
138 |     fn get_right_records_batch(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
148 |     fn process_single_join(
    |        ^^^^^^^^^^^^^^^^^^^
...
177 |     fn process_inner_join(
    |        ^^^^^^^^^^^^^^^^^^
...
213 |     fn process_left_join(
    |        ^^^^^^^^^^^^^^^^^
...
255 |     fn process_right_join(
    |        ^^^^^^^^^^^^^^^^^^
...
289 |     fn process_full_outer_join(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
332 |     fn combine_records(
    |        ^^^^^^^^^^^^^^^
...
359 |     fn combine_records_with_nulls(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
388 |     fn create_null_fields_for_source(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
445 |     fn create_null_fields_fallback(alias: &Option<String>) -> HashMap<String, FieldValue> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
464 |     fn combine_records_with_nulls_fallback(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
493 |     fn merge_headers(
    |        ^^^^^^^^^^^^^
...
508 |     pub fn execute_subquery_for_join(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
549 |     fn get_subquery_data_source_for_join(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `get_right_record_with_context`, `get_right_record`, and `create_basic_fallback_record` are never used
  --> src/ferris/sql/execution/processors/join_context.rs:28:12
   |
21 | impl JoinContext {
   | ---------------- associated items in this implementation
...
28 |     pub fn get_right_record_with_context(
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
59 |     pub fn get_right_record(
   |            ^^^^^^^^^^^^^^^^
...
70 |     fn create_basic_fallback_record(table_name: &str) -> Result<Option<StreamRecord>, SqlError> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `LimitProcessor` is never constructed
 --> src/ferris/sql/execution/processors/limit.rs:9:12
  |
9 | pub struct LimitProcessor;
  |            ^^^^^^^^^^^^^^

warning: associated functions `check_limit`, `increment_count`, `should_increment_count`, `should_process_record`, and `remaining_capacity` are never used
  --> src/ferris/sql/execution/processors/limit.rs:13:12
   |
11 | impl LimitProcessor {
   | ------------------- associated functions in this implementation
12 |     /// Check if the limit has been reached and return early termination result if so
13 |     pub fn check_limit(
   |            ^^^^^^^^^^^
...
31 |     pub fn increment_count(context: &mut ProcessorContext) {
   |            ^^^^^^^^^^^^^^^
...
36 |     pub fn should_increment_count(result: &ProcessorResult) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^^
...
41 |     pub fn should_process_record(limit: Option<u64>, context: &ProcessorContext) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
49 |     pub fn remaining_capacity(limit: Option<u64>, context: &ProcessorContext) -> Option<u64> {
   |            ^^^^^^^^^^^^^^^^^^

warning: struct `SelectProcessor` is never constructed
  --> src/ferris/sql/execution/processors/select.rs:21:12
   |
21 | pub struct SelectProcessor;
   |            ^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
    --> src/ferris/sql/execution/processors/select.rs:25:12
     |
23   | impl SelectProcessor {
     | -------------------- associated functions in this implementation
24   |     /// Process a SELECT query
25   |     pub fn process(
     |            ^^^^^^^
...
264  |     fn handle_group_by_record(
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
678  |     fn evaluate_group_key_expression(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
714  |     fn literal_to_group_key(literal: &LiteralValue) -> String {
     |        ^^^^^^^^^^^^^^^^^^^^
...
727  |     fn calculate_variance(values: &[f64]) -> f64 {
     |        ^^^^^^^^^^^^^^^^^^
...
740  |     fn evaluate_expression_value_with_window(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
759  |     pub fn get_expression_name(expr: &Expr) -> String {
     |            ^^^^^^^^^^^^^^^^^^^
...
790  |     fn collect_header_mutations_from_fields(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
804  |     fn collect_header_mutations_from_expr(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
889  |     fn evaluate_having_expression(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
958  |     fn evaluate_having_value_expression(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
997  |     fn extract_and_compute_aggregates(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1036 |     fn get_function_key(name: &str, args: &[Expr]) -> Result<String, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1080 |     fn compute_aggregate_for_having(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1143 |     fn find_accumulator_key(name: &str, args: &[Expr], fields: &[SelectField]) -> String {
     |        ^^^^^^^^^^^^^^^^^^^^
...
1246 |     fn args_match(args1: &[Expr], args2: &[Expr]) -> bool {
     |        ^^^^^^^^^^
...
1268 |     fn field_value_to_bool(value: &FieldValue) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1283 |     fn field_values_equal(left: &FieldValue, right: &FieldValue) -> bool {
     |        ^^^^^^^^^^^^^^^^^^
...
1298 |     fn compare_having_values<F>(
     |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated items `apply_comparison`, `values_equal_helper`, `compare_values_helper`, `execute_subquery_internal`, and `get_subquery_data_source` are never used
    --> src/ferris/sql/execution/processors/select.rs:1484:8
     |
1482 | impl SelectProcessor {
     | -------------------- associated items in this implementation
1483 |     /// Helper method to apply comparison operations
1484 |     fn apply_comparison(left: &FieldValue, right: &FieldValue, op: &str) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1500 |     fn values_equal_helper(left: &FieldValue, right: &FieldValue) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^
...
1514 |     fn compare_values_helper<F>(
     |        ^^^^^^^^^^^^^^^^^^^^^
...
1545 |     fn execute_subquery_internal(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1579 |     fn get_subquery_data_source(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ShowProcessor` is never constructed
  --> src/ferris/sql/execution/processors/show.rs:15:12
   |
15 | pub struct ShowProcessor;
   |            ^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/processors/show.rs:18:12
    |
17  | impl ShowProcessor {
    | ------------------ associated functions in this implementation
18  |     pub fn process(
    |            ^^^^^^^
...
63  |     fn generate_show_results(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
99  |     fn show_streams(
    |        ^^^^^^^^^^^^
...
125 |     fn show_tables(
    |        ^^^^^^^^^^^
...
152 |     fn show_topics(
    |        ^^^^^^^^^^^
...
176 |     fn show_functions(
    |        ^^^^^^^^^^^^^^
...
218 |     fn show_schema(
    |        ^^^^^^^^^^^
...
246 |     fn describe_resource(
    |        ^^^^^^^^^^^^^^^^^
...
291 |     fn show_properties(
    |        ^^^^^^^^^^^^^^^
...
346 |     fn show_jobs() -> Result<Vec<HashMap<String, FieldValue>>, SqlError> {
    |        ^^^^^^^^^
...
356 |     fn show_job_status(
    |        ^^^^^^^^^^^^^^^
...
368 |     fn show_job_versions(_name: &str) -> Result<Vec<HashMap<String, FieldValue>>, SqlError> {
    |        ^^^^^^^^^^^^^^^^^
...
378 |     fn show_job_metrics(
    |        ^^^^^^^^^^^^^^^^
...
390 |     fn show_partitions(
    |        ^^^^^^^^^^^^^^^
...
403 |     fn matches_pattern(name: &str, pattern: &Option<String>) -> bool {
    |        ^^^^^^^^^^^^^^^

warning: struct `UpdateProcessor` is never constructed
  --> src/ferris/sql/execution/processors/update.rs:43:12
   |
43 | pub struct UpdateProcessor;
   |            ^^^^^^^^^^^^^^^

warning: associated functions `process_update`, `validate_update`, `get_affected_columns`, `matches_where_clause`, `apply_assignments`, and `create_update_metadata` are never used
   --> src/ferris/sql/execution/processors/update.rs:47:12
    |
45  | impl UpdateProcessor {
    | -------------------- associated functions in this implementation
46  |     /// Process an UPDATE statement
47  |     pub fn process_update(
    |            ^^^^^^^^^^^^^^
...
107 |     pub fn validate_update(
    |            ^^^^^^^^^^^^^^^
...
156 |     pub fn get_affected_columns(
    |            ^^^^^^^^^^^^^^^^^^^^
...
180 |     pub fn matches_where_clause(
    |            ^^^^^^^^^^^^^^^^^^^^
...
191 |     pub fn apply_assignments(
    |            ^^^^^^^^^^^^^^^^^
...
206 |     pub fn create_update_metadata(
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `WindowProcessor` is never constructed
  --> src/ferris/sql/execution/processors/window.rs:14:12
   |
14 | pub struct WindowProcessor;
   |            ^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/processors/window.rs:19:12
    |
16  | impl WindowProcessor {
    | -------------------- associated functions in this implementation
...
19  |     pub fn process_windowed_query(
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
66  |     fn process_window_emission_state(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
130 |     fn process_window_emission(
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
194 |     pub fn extract_event_time(record: &StreamRecord, time_column: Option<&str>) -> i64 {
    |            ^^^^^^^^^^^^^^^^^^
...
212 |     pub fn should_emit_window(
    |            ^^^^^^^^^^^^^^^^^^
...
239 |     pub fn should_emit_window_state(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
283 |     fn execute_windowed_aggregation_impl(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
456 |     fn update_window_state_direct(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
476 |     fn update_window_state(
    |        ^^^^^^^^^^^^^^^^^^^
...
496 |     fn cleanup_window_buffer_direct(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
581 |     fn cleanup_window_buffer(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
666 |     pub fn get_time_column(window_spec: &WindowSpec) -> Option<&str> {
    |            ^^^^^^^^^^^^^^^
...
671 |     pub fn create_window_context() -> WindowContext {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
680 |     fn evaluate_aggregate_expression(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_test_data_sources` is never used
  --> src/ferris/sql/execution/test_data_sources.rs:18:8
   |
18 | pub fn create_test_data_sources() -> HashMap<String, Vec<StreamRecord>> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_config_table_data` is never used
  --> src/ferris/sql/execution/test_data_sources.rs:45:4
   |
45 | fn create_config_table_data() -> Vec<StreamRecord> {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_active_configs_table_data` is never used
  --> src/ferris/sql/execution/test_data_sources.rs:96:4
   |
96 | fn create_active_configs_table_data() -> Vec<StreamRecord> {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_products_table_data` is never used
   --> src/ferris/sql/execution/test_data_sources.rs:117:4
    |
117 | fn create_products_table_data() -> Vec<StreamRecord> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_users_table_data` is never used
   --> src/ferris/sql/execution/test_data_sources.rs:160:4
    |
160 | fn create_users_table_data() -> Vec<StreamRecord> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_blocks_table_data` is never used
   --> src/ferris/sql/execution/test_data_sources.rs:218:4
    |
218 | fn create_blocks_table_data() -> Vec<StreamRecord> {
    |    ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_minimal_test_data_sources` is never used
   --> src/ferris/sql/execution/test_data_sources.rs:225:8
    |
225 | pub fn create_minimal_test_data_sources() -> HashMap<String, Vec<StreamRecord>> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_custom_data_source` is never used
   --> src/ferris/sql/execution/test_data_sources.rs:243:8
    |
243 | pub fn create_custom_data_source(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `is_numeric`, `from_financial_f64`, `to_financial_f64`, and `is_financial` are never used
   --> src/ferris/sql/execution/types.rs:76:12
    |
49  | impl FieldValue {
    | --------------- associated items in this implementation
...
76  |     pub fn is_numeric(&self) -> bool {
    |            ^^^^^^^^^^
...
792 |     pub fn from_financial_f64(value: f64, scale: u8) -> FieldValue {
    |            ^^^^^^^^^^^^^^^^^^
...
806 |     pub fn to_financial_f64(&self) -> Option<f64> {
    |            ^^^^^^^^^^^^^^^^
...
819 |     pub fn is_financial(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: associated items `new`, `with_metadata`, `get_field`, `has_field`, `field_count`, and `contains_key` are never used
   --> src/ferris/sql/execution/types.rs:850:12
    |
845 | impl StreamRecord {
    | ----------------- associated items in this implementation
...
850 |     pub fn new(fields: HashMap<String, FieldValue>) -> Self {
    |            ^^^
...
863 |     pub fn with_metadata(
    |            ^^^^^^^^^^^^^
...
883 |     pub fn get_field(&self, name: &str) -> Option<&FieldValue> {
    |            ^^^^^^^^^
...
890 |     pub fn has_field(&self, name: &str) -> bool {
    |            ^^^^^^^^^
...
895 |     pub fn field_count(&self) -> usize {
    |            ^^^^^^^^^^^
...
902 |     pub fn contains_key(&self, name: &str) -> bool {
    |            ^^^^^^^^^^^^

warning: struct `FieldValueComparator` is never constructed
  --> src/ferris/sql/execution/utils/field_value_comparator.rs:12:12
   |
12 | pub struct FieldValueComparator;
   |            ^^^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/utils/field_value_comparator.rs:16:12
    |
14  | impl FieldValueComparator {
    | ------------------------- associated functions in this implementation
15  |     /// Compare two FieldValues for equality with exact type matching
16  |     pub fn values_equal(left: &FieldValue, right: &FieldValue) -> bool {
    |            ^^^^^^^^^^^^
...
61  |     pub fn values_equal_with_coercion(left: &FieldValue, right: &FieldValue) -> bool {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
168 |     pub fn compare_values_for_boolean(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
192 |     fn compare_numeric_values<F>(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
259 |     fn scaled_to_f64(value: i64, scale: u8) -> f64 {
    |        ^^^^^^^^^^^^^
...
265 |     fn scaled_integers_equal(a: i64, scale_a: u8, b: i64, scale_b: u8) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
278 |     fn compare_scaled_integers<F>(a: i64, scale_a: u8, b: i64, scale_b: u8, op: &F) -> bool
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `TimeExtractor` is never constructed
 --> src/ferris/sql/execution/utils/time_extractor.rs:8:12
  |
8 | pub struct TimeExtractor;
  |            ^^^^^^^^^^^^^

warning: associated functions `extract_event_time` and `align_to_window_boundary` are never used
  --> src/ferris/sql/execution/utils/time_extractor.rs:12:12
   |
10 | impl TimeExtractor {
   | ------------------ associated functions in this implementation
11 |     /// Extract event time from a record, either from a specific column or using record timestamp
12 |     pub fn extract_event_time(record: &StreamRecord, time_column: Option<&str>) -> i64 {
   |            ^^^^^^^^^^^^^^^^^^
...
35 |     pub fn align_to_window_boundary(timestamp: i64, window_size_ms: i64) -> i64 {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `StreamingSqlParser` is never constructed
   --> src/ferris/sql/parser.rs:137:12
    |
137 | pub struct StreamingSqlParser {
    |            ^^^^^^^^^^^^^^^^^^

warning: enum `TokenType` is never used
   --> src/ferris/sql/parser.rs:147:6
    |
147 | enum TokenType {
    |      ^^^^^^^^^

warning: struct `Token` is never constructed
   --> src/ferris/sql/parser.rs:279:8
    |
279 | struct Token {
    |        ^^^^^

warning: associated items `new`, `parse`, `parse_tokens`, `tokenize`, and `parse_tokens_with_context` are never used
   --> src/ferris/sql/parser.rs:302:12
    |
288 | impl StreamingSqlParser {
    | ----------------------- associated items in this implementation
...
302 |     pub fn new() -> Self {
    |            ^^^
...
442 |     pub fn parse(&self, sql: &str) -> Result<StreamingQuery, SqlError> {
    |            ^^^^^
...
448 |     fn parse_tokens(&self, tokens: Vec<Token>) -> Result<StreamingQuery, SqlError> {
    |        ^^^^^^^^^^^^
...
452 |     fn tokenize(&self, sql: &str) -> Result<Vec<Token>, SqlError> {
    |        ^^^^^^^^
...
788 |     fn parse_tokens_with_context(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `TokenParser` is never constructed
   --> src/ferris/sql/parser.rs:811:8
    |
811 | struct TokenParser<'a> {
    |        ^^^^^^^^^^^

warning: multiple associated items are never used
    --> src/ferris/sql/parser.rs:818:8
     |
817  | impl<'a> TokenParser<'a> {
     | ------------------------ associated items in this implementation
818  |     fn new(tokens: Vec<Token>, sql_text: &'a str) -> Self {
     |        ^^^
...
827  |     fn create_parse_error(&self, message: impl Into<String>) -> SqlError {
     |        ^^^^^^^^^^^^^^^^^^
...
839  |     fn current_token(&self) -> &Token {
     |        ^^^^^^^^^^^^^
...
852  |     fn peek_token(&self, offset: usize) -> Option<&Token> {
     |        ^^^^^^^^^^
...
861  |     fn advance(&mut self) {
     |        ^^^^^^^
...
867  |     fn expect(&mut self, expected: TokenType) -> Result<Token, SqlError> {
     |        ^^^^^^
...
880  |     fn parse_select(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^
...
1047 |     fn parse_select_fields(&mut self) -> Result<Vec<SelectField>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1075 |     fn parse_join_clauses(&mut self) -> Result<Option<Vec<JoinClause>>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
1097 |     fn parse_join_clause(&mut self) -> Result<JoinClause, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1182 |     fn parse_expression(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1186 |     fn parse_logical_or(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1202 |     fn parse_logical_and(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1218 |     fn parse_comparison(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1435 |     fn parse_concatenative(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1451 |     fn parse_additive(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^
...
1478 |     fn parse_multiplicative(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^
...
1505 |     fn parse_primary(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^
...
1837 |     fn parse_case_expression(&mut self) -> Result<Expr, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
1873 |     fn parse_window_spec(&mut self) -> Result<WindowSpec, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1926 |     fn parse_duration_token(&mut self) -> Result<String, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^
...
2006 |     fn parse_duration(&self, duration_str: &str) -> Result<Duration, SqlError> {
     |        ^^^^^^^^^^^^^^
...
2086 |     fn parse_create(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^
...
2099 |     fn parse_create_stream(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
2162 |     fn parse_create_table(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
2225 |     fn parse_column_definitions(&mut self) -> Result<Vec<ColumnDef>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
2252 |     fn parse_data_type(&mut self) -> Result<DataType, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
2283 |     fn parse_with_properties(&mut self) -> Result<HashMap<String, String>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
2315 |     fn parse_into_clause(&mut self) -> Result<IntoClause, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
2345 |     fn parse_enhanced_with_properties(&mut self) -> Result<ConfigProperties, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
2393 |     fn resolve_environment_variables(&self, value: &str) -> Result<String, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
2445 |     fn parse_emit_clause(&mut self) -> Result<Option<crate::ferris::sql::ast::EmitMode>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
2470 |     fn consume_if_matches(&mut self, expected: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^
...
2480 |     fn consume_semicolon(&mut self) {
     |        ^^^^^^^^^^^^^^^^^
...
2486 |     fn expect_keyword(&mut self, keyword: &str) -> Result<(), SqlError> {
     |        ^^^^^^^^^^^^^^
...
2499 |     fn parse_group_by_list(&mut self) -> Result<Vec<Expr>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
2516 |     fn parse_order_by_list(&mut self) -> Result<Vec<OrderByExpr>, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
2543 |     fn parse_show(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^
...
2659 |     fn parse_start_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
2700 |     fn parse_stop_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^
...
2732 |     fn parse_pause_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
2756 |     fn parse_resume_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
2780 |     fn parse_deploy_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
2864 |     fn parse_rollback_job(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
2888 |     fn parse_describe(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^
...
2901 |     fn parse_tokens_inner(&mut self) -> Result<StreamingQuery, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
2915 |     fn parse_over_clause(&mut self) -> Result<OverClause, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
2984 |     fn parse_window_frame(&mut self) -> Result<WindowFrame, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
3021 |     fn parse_frame_bound(&mut self) -> Result<FrameBound, SqlError> {
     |        ^^^^^^^^^^^^^^^^^

warning: struct `QueryAnalysis` is never constructed
  --> src/ferris/sql/query_analyzer.rs:16:12
   |
16 | pub struct QueryAnalysis {
   |            ^^^^^^^^^^^^^

warning: struct `DataSourceRequirement` is never constructed
  --> src/ferris/sql/query_analyzer.rs:27:12
   |
27 | pub struct DataSourceRequirement {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `DataSinkRequirement` is never constructed
  --> src/ferris/sql/query_analyzer.rs:38:12
   |
38 | pub struct DataSinkRequirement {
   |            ^^^^^^^^^^^^^^^^^^^

warning: enum `DataSourceType` is never used
  --> src/ferris/sql/query_analyzer.rs:49:10
   |
49 | pub enum DataSourceType {
   |          ^^^^^^^^^^^^^^

warning: enum `DataSinkType` is never used
  --> src/ferris/sql/query_analyzer.rs:59:10
   |
59 | pub enum DataSinkType {
   |          ^^^^^^^^^^^^

warning: type alias `ConsumerRequirement` is never used
  --> src/ferris/sql/query_analyzer.rs:69:10
   |
69 | pub type ConsumerRequirement = DataSourceRequirement;
   |          ^^^^^^^^^^^^^^^^^^^

warning: type alias `ProducerRequirement` is never used
  --> src/ferris/sql/query_analyzer.rs:70:10
   |
70 | pub type ProducerRequirement = DataSinkRequirement;
   |          ^^^^^^^^^^^^^^^^^^^

warning: type alias `FileSourceRequirement` is never used
  --> src/ferris/sql/query_analyzer.rs:71:10
   |
71 | pub type FileSourceRequirement = DataSourceRequirement;
   |          ^^^^^^^^^^^^^^^^^^^^^

warning: type alias `FileSinkRequirement` is never used
  --> src/ferris/sql/query_analyzer.rs:72:10
   |
72 | pub type FileSinkRequirement = DataSinkRequirement;
   |          ^^^^^^^^^^^^^^^^^^^

warning: struct `QueryAnalyzer` is never constructed
  --> src/ferris/sql/query_analyzer.rs:75:12
   |
75 | pub struct QueryAnalyzer {
   |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/query_analyzer.rs:82:12
    |
80  | impl QueryAnalyzer {
    | ------------------ associated items in this implementation
81  |     /// Create a new query analyzer
82  |     pub fn new(default_group_id: String) -> Self {
    |            ^^^
...
87  |     pub fn analyze(&self, query: &StreamingQuery) -> Result<QueryAnalysis, SqlError> {
    |            ^^^^^^^
...
209 |     pub fn analyze_source(
    |            ^^^^^^^^^^^^^^
...
341 |     pub fn analyze_sink(
    |            ^^^^^^^^^^^^
...
468 |     fn analyze_from_clause(
    |        ^^^^^^^^^^^^^^^^^^^
...
503 |     fn analyze_uri_source(&self, uri: &str, analysis: &mut QueryAnalysis) -> Result<(), SqlError> {
    |        ^^^^^^^^^^^^^^^^^^
...
518 |     fn parse_data_source_uri(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
580 |     fn analyze_into_clause(
    |        ^^^^^^^^^^^^^^^^^^^
...
609 |     fn analyze_uri_sink(&self, uri: &str, analysis: &mut QueryAnalysis) -> Result<(), SqlError> {
    |        ^^^^^^^^^^^^^^^^
...
624 |     fn parse_data_sink_uri(
    |        ^^^^^^^^^^^^^^^^^^^
...
686 |     fn merge_analysis(&self, target: &mut QueryAnalysis, source: QueryAnalysis) {
    |        ^^^^^^^^^^^^^^
...
697 |     fn extract_kafka_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
716 |     fn extract_file_properties(
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ValidationError` is never constructed
  --> src/ferris/sql/validator.rs:18:12
   |
18 | pub struct ValidationError {
   |            ^^^^^^^^^^^^^^^

warning: enum `ErrorSeverity` is never used
  --> src/ferris/sql/validator.rs:26:10
   |
26 | pub enum ErrorSeverity {
   |          ^^^^^^^^^^^^^

warning: struct `QueryValidationResult` is never constructed
  --> src/ferris/sql/validator.rs:32:12
   |
32 | pub struct QueryValidationResult {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `ConfigurationIssue` is never constructed
  --> src/ferris/sql/validator.rs:47:12
   |
47 | pub struct ConfigurationIssue {
   |            ^^^^^^^^^^^^^^^^^^

warning: struct `ApplicationValidationResult` is never constructed
  --> src/ferris/sql/validator.rs:56:12
   |
56 | pub struct ApplicationValidationResult {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ConfigurationSummary` is never constructed
  --> src/ferris/sql/validator.rs:69:12
   |
69 | pub struct ConfigurationSummary {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: struct `SqlValidator` is never constructed
  --> src/ferris/sql/validator.rs:77:12
   |
77 | pub struct SqlValidator {
   |            ^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/validator.rs:87:12
    |
85  | impl SqlValidator {
    | ----------------- associated items in this implementation
86  |     /// Create a new SQL validator
87  |     pub fn new() -> Self {
    |            ^^^
...
98  |     pub fn new_strict() -> Self {
    |            ^^^^^^^^^^
...
109 |     pub fn validate_sql_content(&self, content: &str) -> ApplicationValidationResult {
    |            ^^^^^^^^^^^^^^^^^^^^
...
153 |     pub fn validate_application_file(&self, file_path: &Path) -> ApplicationValidationResult {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
190 |     fn validate_query(
    |        ^^^^^^^^^^^^^^
...
252 |     fn split_sql_statements(&self, content: &str) -> Vec<(String, usize)> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
313 |     fn is_sql_statement(&self, text: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^
...
323 |     fn extract_application_name(&self, content: &str) -> Option<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
332 |     fn validate_source_configurations(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
358 |     fn validate_sink_configurations(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
384 |     fn validate_kafka_source_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
412 |     fn validate_kafka_sink_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
440 |     fn validate_file_source_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
467 |     fn validate_file_sink_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
494 |     fn analyze_configuration_completeness(&self, result: &mut ApplicationValidationResult) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
521 |     fn extract_error_location(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
542 |     fn extract_position_from_error(&self, error_str: &str) -> Option<usize> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
562 |     fn position_to_line_column(&self, text: &str, position: usize) -> (usize, usize) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
585 |     fn generate_error_context(
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: `ferrisstreams` (bin "ferrisstreams" test) generated 653 warnings (18 duplicates) (run `cargo fix --bin "ferrisstreams" --tests` to apply 30 suggestions)
warning: unused variable: `left`
  --> src/bin/test_union_operator.rs:33:36
   |
33 |         Ok(StreamingQuery::Union { left, right, all }) => {
   |                                    ^^^^ help: try ignoring the field: `left: _`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `right`
  --> src/bin/test_union_operator.rs:33:42
   |
33 |         Ok(StreamingQuery::Union { left, right, all }) => {
   |                                          ^^^^^ help: try ignoring the field: `right: _`

warning: struct `GlobalSchemaContext` is never constructed
  --> src/ferris/config/schema_registry.rs:66:12
   |
66 | pub struct GlobalSchemaContext {
   |            ^^^^^^^^^^^^^^^^^^^

warning: trait `ConfigSchemaProvider` is never used
  --> src/ferris/config/schema_registry.rs:95:11
   |
95 | pub trait ConfigSchemaProvider: Send + Sync {
   |           ^^^^^^^^^^^^^^^^^^^^

warning: enum `OverrideSource` is never used
   --> src/ferris/config/schema_registry.rs:170:10
    |
170 | pub enum OverrideSource {
    |          ^^^^^^^^^^^^^^

warning: struct `PropertyInheritanceNode` is never constructed
   --> src/ferris/config/schema_registry.rs:187:12
    |
187 | pub struct PropertyInheritanceNode {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `HierarchicalSchemaRegistry` is never constructed
   --> src/ferris/config/schema_registry.rs:197:12
    |
197 | pub struct HierarchicalSchemaRegistry {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/config/schema_registry.rs:218:12
    |
216 | impl HierarchicalSchemaRegistry {
    | ------------------------------- associated items in this implementation
217 |     /// Create a new schema registry
218 |     pub fn new() -> Self {
    |            ^^^
...
229 |     pub fn global() -> Arc<RwLock<Self>> {
    |            ^^^^^^
...
238 |     pub fn register_global_schema<T>(&mut self)
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
248 |     pub fn register_source_schema<T>(&mut self)
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
258 |     pub fn register_sink_schema<T>(&mut self)
    |            ^^^^^^^^^^^^^^^^^^^^
...
268 |     pub fn update_global_context(&mut self, context: GlobalSchemaContext) {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
273 |     pub fn validate_config_with_inheritance(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
310 |     fn validate_global_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
331 |     fn validate_named_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
372 |     fn validate_inline_property(&self, key: &str, value: &str) -> ConfigValidationResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
378 |     fn determine_source_type(&self, source_name: &str, config: &HashMap<String, String>) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
397 |     pub fn generate_complete_json_schema(&self) -> Value {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
432 |     fn get_schema_for_type(&self, type_id: &str) -> Result<Value, String> {
    |        ^^^^^^^^^^^^^^^^^^^
...
452 |     fn build_type_schema(&self, type_id: &str) -> Value {
    |        ^^^^^^^^^^^^^^^^^

warning: struct `ConnectionString` is never constructed
   --> src/ferris/datasource/config/legacy.rs:308:12
    |
308 | pub struct ConnectionString {
    |            ^^^^^^^^^^^^^^^^

warning: associated items `parse`, `to_source_config`, and `to_sink_config` are never used
   --> src/ferris/datasource/config/legacy.rs:324:12
    |
316 | impl ConnectionString {
    | --------------------- associated items in this implementation
...
324 |     pub fn parse(uri: &str) -> Result<Self, DataSourceError> {
    |            ^^^^^
...
392 |     pub fn to_source_config(&self) -> Result<SourceConfig, DataSourceError> {
    |            ^^^^^^^^^^^^^^^^
...
547 |     pub fn to_sink_config(&self) -> Result<SinkConfig, DataSourceError> {
    |            ^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/config.rs:115:12
    |
113 | impl FileSourceConfig {
    | --------------------- associated items in this implementation
114 |     /// Create a new file source configuration with required parameters
115 |     pub fn new(path: String, format: FileFormat) -> Self {
    |            ^^^
...
124 |     pub fn from_generic(config: &SourceConfig) -> Result<Self, String> {
    |            ^^^^^^^^^^^^
...
197 |     pub fn with_watching(mut self, polling_interval_ms: Option<u64>) -> Self {
    |            ^^^^^^^^^^^^^
...
204 |     pub fn with_csv_options(
    |            ^^^^^^^^^^^^^^^^
...
219 |     pub fn with_buffer_size(mut self, size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
225 |     pub fn with_recursive(mut self, recursive: bool) -> Self {
    |            ^^^^^^^^^^^^^^
...
231 |     pub fn validate(&self) -> Result<(), String> {
    |            ^^^^^^^^
...
272 |     pub fn from_uri(uri: &str) -> Result<Self, String> {
    |            ^^^^^^^^

warning: enum `FileDataSourceError` is never used
 --> src/ferris/datasource/file/error.rs:7:10
  |
7 | pub enum FileDataSourceError {
  |          ^^^^^^^^^^^^^^^^^^^

warning: struct `FileWatcher` is never constructed
  --> src/ferris/datasource/file/watcher.rs:11:12
   |
11 | pub struct FileWatcher {
   |            ^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/file/watcher.rs:20:12
    |
18  | impl FileWatcher {
    | ---------------- associated items in this implementation
19  |     /// Create a new file watcher
20  |     pub fn new() -> Self {
    |            ^^^
...
30  |     pub async fn watch(
    |                  ^^^^^
...
65  |     async fn add_watch_path(&mut self, path: PathBuf) -> Result<(), Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^
...
79  |     pub async fn check_for_changes(&mut self) -> Result<bool, Box<dyn Error + Send + Sync>> {
    |                  ^^^^^^^^^^^^^^^^^
...
111 |     async fn check_for_new_files(&mut self) -> Result<bool, Box<dyn Error + Send + Sync>> {
    |              ^^^^^^^^^^^^^^^^^^^
...
135 |     pub async fn wait_for_changes(
    |                  ^^^^^^^^^^^^^^^^
...
157 |     pub fn watched_paths(&self) -> &[PathBuf] {
    |            ^^^^^^^^^^^^^
...
162 |     pub fn polling_interval(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^
...
167 |     pub fn set_polling_interval(&mut self, interval: Duration) {
    |            ^^^^^^^^^^^^^^^^^^^^
...
172 |     pub fn stop(&mut self) {
    |            ^^^^

warning: type alias `SourceFactory` is never used
  --> src/ferris/datasource/registry.rs:16:6
   |
16 | type SourceFactory = Box<
   |      ^^^^^^^^^^^^^

warning: type alias `SinkFactory` is never used
  --> src/ferris/datasource/registry.rs:21:6
   |
21 | type SinkFactory = Box<
   |      ^^^^^^^^^^^

warning: struct `DataSourceRegistry` is never constructed
  --> src/ferris/datasource/registry.rs:28:12
   |
28 | pub struct DataSourceRegistry {
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/datasource/registry.rs:35:12
    |
33  | impl DataSourceRegistry {
    | ----------------------- associated items in this implementation
34  |     /// Create a new empty registry
35  |     pub fn new() -> Self {
    |            ^^^
...
43  |     pub fn with_defaults() -> Self {
    |            ^^^^^^^^^^^^^
...
54  |     pub fn register_source<F>(&mut self, scheme: &str, factory: F)
    |            ^^^^^^^^^^^^^^^
...
68  |     pub fn register_sink<F>(&mut self, scheme: &str, factory: F)
    |            ^^^^^^^^^^^^^
...
80  |     pub fn create_source(&self, uri: &str) -> Result<Box<dyn DataSource>, DataSourceError> {
    |            ^^^^^^^^^^^^^
...
95  |     pub fn create_sink(&self, uri: &str) -> Result<Box<dyn DataSink>, DataSourceError> {
    |            ^^^^^^^^^^^
...
110 |     pub fn source_schemes(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^^^
...
115 |     pub fn sink_schemes(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^
...
120 |     pub fn has_source_scheme(&self, scheme: &str) -> bool {
    |            ^^^^^^^^^^^^^^^^^
...
125 |     pub fn has_sink_scheme(&self, scheme: &str) -> bool {
    |            ^^^^^^^^^^^^^^^

warning: static `GLOBAL_REGISTRY` is never used
   --> src/ferris/datasource/registry.rs:137:8
    |
137 | static GLOBAL_REGISTRY: OnceLock<Arc<Mutex<DataSourceRegistry>>> = OnceLock::new();
    |        ^^^^^^^^^^^^^^^

warning: function `global_registry` is never used
   --> src/ferris/datasource/registry.rs:140:8
    |
140 | pub fn global_registry() -> &'static Arc<Mutex<DataSourceRegistry>> {
    |        ^^^^^^^^^^^^^^^

warning: trait `DataSource` is never used
  --> src/ferris/datasource/traits.rs:20:11
   |
20 | pub trait DataSource: Send + Sync + 'static {
   |           ^^^^^^^^^^

warning: trait `DataSink` is never used
  --> src/ferris/datasource/traits.rs:58:11
   |
58 | pub trait DataSink: Send + Sync + 'static {
   |           ^^^^^^^^

warning: trait `DataReader` is never used
  --> src/ferris/datasource/traits.rs:90:11
   |
90 | pub trait DataReader: Send + Sync + 'static {
   |           ^^^^^^^^^^

warning: trait `DataWriter` is never used
   --> src/ferris/datasource/traits.rs:135:11
    |
135 | pub trait DataWriter: Send + Sync + 'static {
    |           ^^^^^^^^^^

warning: enum `SourceOffset` is never used
  --> src/ferris/datasource/types.rs:11:10
   |
11 | pub enum SourceOffset {
   |          ^^^^^^^^^^^^

warning: multiple variants are never constructed
  --> src/ferris/datasource/types.rs:61:5
   |
59 | pub enum DataSourceError {
   |          --------------- variants in this enum
60 |     /// Configuration error
61 |     Configuration(String),
   |     ^^^^^^^^^^^^^
62 |     /// Connection/initialization error
63 |     Connection(String),
   |     ^^^^^^^^^^
64 |     /// Schema-related error
65 |     Schema(String),
   |     ^^^^^^
66 |     /// IO error during read/write
67 |     Io(String),
   |     ^^
68 |     /// Unsupported operation
69 |     Unsupported(String),
   |     ^^^^^^^^^^^
70 |     /// Source-specific error
71 |     SourceSpecific(Box<dyn Error + Send + Sync>),
   |     ^^^^^^^^^^^^^^
72 |     /// Sink-specific error
73 |     SinkSpecific(Box<dyn Error + Send + Sync>),
   |     ^^^^^^^^^^^^
   |
   = note: `DataSourceError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `ConfigurableKafkaConsumerBuilder` is never constructed
  --> src/ferris/kafka/configurable_consumer.rs:89:12
   |
89 | pub struct ConfigurableKafkaConsumerBuilder<K, V>
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `new` and `from_sql_config` are never used
   --> src/ferris/kafka/configurable_consumer.rs:115:12
    |
106 | / impl<K, V> ConfigurableKafkaConsumerBuilder<K, V>
107 | | where
108 | |     K: for<'de> Deserialize<'de> + Serialize + 'static,
109 | |     V: for<'de> Deserialize<'de> + Serialize + 'static,
    | |_______________________________________________________- associated functions in this implementation
...
115 |       pub fn new(brokers: &str, group_id: &str) -> Self {
    |              ^^^
...
132 |       pub fn from_sql_config(
    |              ^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/kafka/configurable_consumer.rs:155:12
    |
149 | / impl<K, V> ConfigurableKafkaConsumerBuilder<K, V>
150 | | where
151 | |     K: for<'de> Deserialize<'de> + Serialize + 'static,
152 | |     V: for<'de> Deserialize<'de> + Serialize + 'static,
    | |_______________________________________________________- methods in this implementation
...
155 |       pub fn with_key_format(mut self, format: SerializationFormat) -> Self {
    |              ^^^^^^^^^^^^^^^
...
161 |       pub fn with_value_format(mut self, format: SerializationFormat) -> Self {
    |              ^^^^^^^^^^^^^^^^^
...
167 |       pub fn with_avro_key_serialization(mut self, schema_registry_url: &str, subject: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
176 |       pub fn with_avro_value_serialization(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
189 |       pub fn with_protobuf_key_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
197 |       pub fn with_protobuf_value_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
205 |       pub fn with_consumer_config(mut self, config: ConsumerConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^
...
211 |       pub fn with_serialization_config(mut self, config: SerializationConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
233 |       pub fn build(self) -> Result<ConfigurableKafkaConsumer<K, V>, KafkaError> {
    |              ^^^^^

warning: struct `ConfigurableKafkaProducerBuilder` is never constructed
  --> src/ferris/kafka/configurable_producer.rs:74:12
   |
74 | pub struct ConfigurableKafkaProducerBuilder<K, V>
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `new` and `from_sql_config` are never used
   --> src/ferris/kafka/configurable_producer.rs:100:12
    |
91  | / impl<K, V> ConfigurableKafkaProducerBuilder<K, V>
92  | | where
93  | |     K: Serialize + 'static,
94  | |     V: Serialize + 'static,
    | |___________________________- associated functions in this implementation
...
100 |       pub fn new(brokers: &str, default_topic: &str) -> Self {
    |              ^^^
...
117 |       pub fn from_sql_config(
    |              ^^^^^^^^^^^^^^^

warning: multiple methods are never used
   --> src/ferris/kafka/configurable_producer.rs:140:12
    |
134 | / impl<K, V> ConfigurableKafkaProducerBuilder<K, V>
135 | | where
136 | |     K: Serialize + 'static,
137 | |     V: Serialize + 'static,
    | |___________________________- methods in this implementation
...
140 |       pub fn with_key_format(mut self, format: SerializationFormat) -> Self {
    |              ^^^^^^^^^^^^^^^
...
146 |       pub fn with_value_format(mut self, format: SerializationFormat) -> Self {
    |              ^^^^^^^^^^^^^^^^^
...
152 |       pub fn with_avro_key_serialization(mut self, schema_registry_url: &str, subject: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
161 |       pub fn with_avro_value_serialization(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
174 |       pub fn with_protobuf_key_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
182 |       pub fn with_protobuf_value_serialization(mut self, message_type: &str) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
190 |       pub fn with_producer_config(mut self, config: ProducerConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^
...
196 |       pub fn with_serialization_config(mut self, config: SerializationConfig) -> Self {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
218 |       pub fn build(self) -> Result<ConfigurableKafkaProducer<K, V>, KafkaError> {
    |              ^^^^^

warning: struct `KafkaConsumer` is never constructed
  --> src/ferris/kafka/kafka_consumer.rs:90:12
   |
90 | pub struct KafkaConsumer<K, V, KS, VS, C = DefaultConsumerContext>
   |            ^^^^^^^^^^^^^

warning: associated functions `new` and `with_config` are never used
   --> src/ferris/kafka/kafka_consumer.rs:112:12
    |
106 | / impl<K, V, KS, VS> KafkaConsumer<K, V, KS, VS, DefaultConsumerContext>
107 | | where
108 | |     KS: Serializer<K>,
109 | |     VS: Serializer<V>,
    | |______________________- associated functions in this implementation
...
112 |       pub fn new(
    |              ^^^
...
123 |       pub fn with_config(
    |              ^^^^^^^^^^^

warning: struct `ConsumerBuilder` is never constructed
   --> src/ferris/kafka/kafka_consumer.rs:445:12
    |
445 | pub struct ConsumerBuilder<K, V, KS, VS, C = DefaultConsumerContext>
    |            ^^^^^^^^^^^^^^^

warning: associated items `new` and `build` are never used
   --> src/ferris/kafka/kafka_consumer.rs:466:12
    |
460 | / impl<K, V, KS, VS> ConsumerBuilder<K, V, KS, VS, DefaultConsumerContext>
461 | | where
462 | |     KS: Serializer<K>,
463 | |     VS: Serializer<V>,
    | |______________________- associated items in this implementation
...
466 |       pub fn new(brokers: &str, group_id: &str, key_serializer: KS, value_serializer: VS) -> Self {
    |              ^^^
...
479 |       pub fn build(self) -> Result<KafkaConsumer<K, V, KS, VS, DefaultConsumerContext>, KafkaError> {
    |              ^^^^^

warning: struct `ProducerBuilder` is never constructed
   --> src/ferris/kafka/kafka_producer.rs:435:12
    |
435 | pub struct ProducerBuilder<K, V, KS, VS, C = LoggingProducerContext>
    |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/kafka_producer.rs:455:12
    |
449 | / impl<K, V, KS, VS> ProducerBuilder<K, V, KS, VS, LoggingProducerContext>
450 | | where
451 | |     KS: Serializer<K>,
452 | |     VS: Serializer<V>,
    | |______________________- associated items in this implementation
...
455 |       pub fn new(
    |              ^^^
...
472 |       pub fn with_config(config: ProducerConfig, key_serializer: KS, value_serializer: VS) -> Self {
    |              ^^^^^^^^^^^
...
484 |       pub fn client_id(mut self, client_id: impl Into<String>) -> Self {
    |              ^^^^^^^^^
...
490 |       pub fn message_timeout(mut self, timeout: Duration) -> Self {
    |              ^^^^^^^^^^^^^^^
...
496 |       pub fn compression(mut self, compression: CompressionType) -> Self {
    |              ^^^^^^^^^^^
...
502 |       pub fn acks(mut self, acks: AckMode) -> Self {
    |              ^^^^
...
508 |       pub fn batching(mut self, batch_size: u32, linger_ms: Duration) -> Self {
    |              ^^^^^^^^
...
514 |       pub fn idempotence(mut self, enable: bool) -> Self {
    |              ^^^^^^^^^^^
...
520 |       pub fn retries(mut self, retries: u32, backoff: Duration) -> Self {
    |              ^^^^^^^
...
526 |       pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |              ^^^^^^^^^^^^^^^
...
532 |       pub fn high_throughput(mut self) -> Self {
    |              ^^^^^^^^^^^^^^^
...
538 |       pub fn low_latency(mut self) -> Self {
    |              ^^^^^^^^^^^
...
544 |       pub fn max_durability(mut self) -> Self {
    |              ^^^^^^^^^^^^^^
...
550 |       pub fn development(mut self) -> Self {
    |              ^^^^^^^^^^^
...
556 |       pub fn build(self) -> Result<KafkaProducer<K, V, KS, VS, LoggingProducerContext>, KafkaError> {
    |              ^^^^^

warning: enum `SerializationFormat` is never used
  --> src/ferris/kafka/serialization_format.rs:20:10
   |
20 | pub enum SerializationFormat {
   |          ^^^^^^^^^^^^^^^^^^^

warning: struct `SerializationConfig` is never constructed
  --> src/ferris/kafka/serialization_format.rs:82:12
   |
82 | pub struct SerializationConfig {
   |            ^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `from_sql_params`, `key_format`, `value_format`, and `validate` are never used
   --> src/ferris/kafka/serialization_format.rs:99:12
    |
97  | impl SerializationConfig {
    | ------------------------ associated items in this implementation
98  |     /// Create a new empty serialization configuration
99  |     pub fn new() -> Self {
    |            ^^^
...
111 |     pub fn from_sql_params(params: &HashMap<String, String>) -> Result<Self, SerializationError> {
    |            ^^^^^^^^^^^^^^^
...
178 |     pub fn key_format(&self) -> SerializationFormat {
    |            ^^^^^^^^^^
...
183 |     pub fn value_format(&self) -> SerializationFormat {
    |            ^^^^^^^^^^^^
...
190 |     pub fn validate(&self) -> Result<(), SerializationError> {
    |            ^^^^^^^^

warning: struct `SerializationFactory` is never constructed
   --> src/ferris/kafka/serialization_format.rs:229:12
    |
229 | pub struct SerializationFactory;
    |            ^^^^^^^^^^^^^^^^^^^^

warning: associated functions `create_boxed_serializer`, `json_serializer`, and `validate_format` are never used
   --> src/ferris/kafka/serialization_format.rs:236:12
    |
231 | impl SerializationFactory {
    | ------------------------- associated functions in this implementation
...
236 |     pub fn create_boxed_serializer<T>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
283 |     pub fn json_serializer<T>() -> JsonSerializer
    |            ^^^^^^^^^^^^^^^
...
291 |     pub fn validate_format(format: &SerializationFormat) -> Result<(), SerializationError> {
    |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/headers.rs:90:12
    |
81  | impl Headers {
    | ------------ associated items in this implementation
...
90  |     pub fn with_capacity(capacity: usize) -> Self {
    |            ^^^^^^^^^^^^^
...
97  |     pub fn insert(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |            ^^^^^^
...
103 |     pub fn insert_null(mut self, key: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^
...
109 |     pub fn get(&self, key: &str) -> Option<&str> {
    |            ^^^
...
114 |     pub fn get_optional(&self, key: &str) -> Option<&Option<String>> {
    |            ^^^^^^^^^^^^
...
119 |     pub fn contains_key(&self, key: &str) -> bool {
    |            ^^^^^^^^^^^^
...
124 |     pub fn len(&self) -> usize {
    |            ^^^
...
134 |     pub fn iter(&self) -> impl Iterator<Item = (&String, &Option<String>)> {
    |            ^^^^
...
154 |     pub(crate) fn from_rdkafka_headers<H: KafkaHeaders>(kafka_headers: &H) -> Self {
    |                   ^^^^^^^^^^^^^^^^^^^^
...
172 |     pub fn into_map(self) -> HashMap<String, String> {
    |            ^^^^^^^^

warning: struct `Message` is never constructed
  --> src/ferris/kafka/message.rs:41:12
   |
41 | pub struct Message<K, V> {
   |            ^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/message.rs:52:12
    |
50  | impl<K, V> Message<K, V> {
    | ------------------------ associated items in this implementation
51  |     /// Creates a new message with the given key, value, headers and partition
52  |     pub fn new(
    |            ^^^
...
71  |     pub fn key(&self) -> Option<&K> {
    |            ^^^
...
76  |     pub fn value(&self) -> &V {
    |            ^^^^^
...
81  |     pub fn headers(&self) -> &Headers {
    |            ^^^^^^^
...
86  |     pub fn partition(&self) -> i32 {
    |            ^^^^^^^^^
...
91  |     pub fn offset(&self) -> i64 {
    |            ^^^^^^
...
96  |     pub fn timestamp(&self) -> Option<i64> {
    |            ^^^^^^^^^
...
101 |     pub fn timestamp_string(&self) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^
...
110 |     pub fn is_first(&self) -> bool {
    |            ^^^^^^^^
...
117 |     pub fn take_value(&mut self) -> V
    |            ^^^^^^^^^^
...
125 |     pub fn take_key(&mut self) -> Option<K> {
    |            ^^^^^^^^
...
130 |     pub fn take_headers(&mut self) -> Headers
    |            ^^^^^^^^^^^^

warning: methods `into_key`, `into_value`, `into_headers`, and `into_parts` are never used
   --> src/ferris/kafka/message.rs:161:12
    |
159 | impl<K, V> Message<K, V> {
    | ------------------------ methods in this implementation
160 |     /// Consumes the message and returns the owned key
161 |     pub fn into_key(self) -> Option<K> {
    |            ^^^^^^^^
...
166 |     pub fn into_value(self) -> V {
    |            ^^^^^^^^^^
...
171 |     pub fn into_headers(self) -> Headers {
    |            ^^^^^^^^^^^^
...
176 |     pub fn into_parts(self) -> (Option<K>, V, Headers) {
    |            ^^^^^^^^^^

warning: struct `ConsumerConfig` is never constructed
 --> src/ferris/kafka/consumer_config.rs:8:12
  |
8 | pub struct ConsumerConfig {
  |            ^^^^^^^^^^^^^^

warning: enum `IsolationLevel` is never used
  --> src/ferris/kafka/consumer_config.rs:40:10
   |
40 | pub enum IsolationLevel {
   |          ^^^^^^^^^^^^^^

warning: method `as_str` is never used
  --> src/ferris/kafka/consumer_config.rs:48:12
   |
47 | impl IsolationLevel {
   | ------------------- method in this implementation
48 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: enum `OffsetReset` is never used
  --> src/ferris/kafka/consumer_config.rs:57:10
   |
57 | pub enum OffsetReset {
   |          ^^^^^^^^^^^

warning: method `as_str` is never used
  --> src/ferris/kafka/consumer_config.rs:67:12
   |
66 | impl OffsetReset {
   | ---------------- method in this implementation
67 |     pub fn as_str(&self) -> &'static str {
   |            ^^^^^^

warning: multiple associated items are never used
   --> src/ferris/kafka/consumer_config.rs:99:12
    |
97  | impl ConsumerConfig {
    | ------------------- associated items in this implementation
98  |     /// Create a new config with brokers and group ID
99  |     pub fn new(brokers: impl Into<String>, group_id: impl Into<String>) -> Self {
    |            ^^^
...
108 |     pub fn client_id(mut self, client_id: impl Into<String>) -> Self {
    |            ^^^^^^^^^
...
114 |     pub fn auto_offset_reset(mut self, reset: OffsetReset) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
120 |     pub fn auto_commit(mut self, enable: bool, interval: Duration) -> Self {
    |            ^^^^^^^^^^^
...
127 |     pub fn isolation_level(mut self, level: IsolationLevel) -> Self {
    |            ^^^^^^^^^^^^^^^
...
133 |     pub fn session_config(
    |            ^^^^^^^^^^^^^^
...
144 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
150 |     pub fn poll_config(mut self, max_interval: Duration, max_records: u32) -> Self {
    |            ^^^^^^^^^^^
...
157 |     pub fn fetch_config(
    |            ^^^^^^^^^^^^
...
172 |     pub fn retry_backoff(mut self, backoff: Duration) -> Self {
    |            ^^^^^^^^^^^^^
...
178 |     pub fn max_poll_records(mut self, max_records: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
184 |     pub fn fetch_min_bytes(mut self, min_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^
...
190 |     pub fn fetch_max_bytes(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^
...
196 |     pub fn fetch_max_wait(mut self, max_wait: Duration) -> Self {
    |            ^^^^^^^^^^^^^^
...
202 |     pub fn session_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
208 |     pub fn max_partition_fetch_bytes(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
214 |     pub fn max_poll_interval(mut self, interval: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
220 |     pub fn fetch_max_bytes_extended(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
229 |     pub fn max_partition_fetch_bytes_extended(mut self, max_bytes: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
238 |     pub fn socket_buffers(mut self, send_buffer: u32, receive_buffer: u32) -> Self {
    |            ^^^^^^^^^^^^^^
...
247 |     pub fn performance_tuning(
    |            ^^^^^^^^^^^^^^^^^^
...
259 |     pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
265 |     pub fn brokers(&self) -> &str {
    |            ^^^^^^^
...
270 |     pub fn client_id_ref(&self) -> Option<&str> {
    |            ^^^^^^^^^^^^^
...
275 |     pub fn request_timeout_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
280 |     pub fn retry_backoff_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
285 |     pub fn custom_config_ref(&self) -> &HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^

warning: variants `None`, `Gzip`, `Snappy`, and `Zstd` are never constructed
  --> src/ferris/kafka/producer_config.rs:41:5
   |
40 | pub enum CompressionType {
   |          --------------- variants in this enum
41 |     None,
   |     ^^^^
42 |     Gzip,
   |     ^^^^
43 |     Snappy,
   |     ^^^^^^
44 |     Lz4,
45 |     Zstd,
   |     ^^^^
   |
   = note: `CompressionType` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: variants `None` and `Leader` are never constructed
  --> src/ferris/kafka/producer_config.rs:63:5
   |
61 | pub enum AckMode {
   |          ------- variants in this enum
62 |     /// Don't wait for acknowledgment
63 |     None,
   |     ^^^^
64 |     /// Wait for leader acknowledgment only
65 |     Leader,
   |     ^^^^^^
   |
   = note: `AckMode` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple methods are never used
   --> src/ferris/kafka/producer_config.rs:112:12
    |
101 | impl ProducerConfig {
    | ------------------- methods in this implementation
...
112 |     pub fn client_id(mut self, client_id: impl Into<String>) -> Self {
    |            ^^^^^^^^^
...
118 |     pub fn message_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
124 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
130 |     pub fn delivery_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
136 |     pub fn idempotence(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^
...
142 |     pub fn max_in_flight_requests(mut self, max: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
148 |     pub fn retries(mut self, retries: u32, backoff: Duration) -> Self {
    |            ^^^^^^^
...
155 |     pub fn batching(mut self, batch_size: u32, linger_ms: Duration) -> Self {
    |            ^^^^^^^^
...
162 |     pub fn compression(mut self, compression: CompressionType) -> Self {
    |            ^^^^^^^^^^^
...
168 |     pub fn acks(mut self, acks: AckMode) -> Self {
    |            ^^^^
...
174 |     pub fn buffer_memory(mut self, memory: u64) -> Self {
    |            ^^^^^^^^^^^^^
...
180 |     pub fn message_max_bytes(mut self, max_bytes: u64) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
188 |     pub fn socket_buffers(mut self, send_buffer: u32, receive_buffer: u32) -> Self {
    |            ^^^^^^^^^^^^^^
...
197 |     pub fn max_in_flight_requests_per_connection(mut self, max_requests: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
207 |     pub fn performance_tuning(self, message_max_mb: u32, socket_buffer_kb: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
...
213 |     pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
219 |     pub fn transactional(mut self, transaction_id: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^
...
237 |     pub fn transaction_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
249 |     pub fn brokers(&self) -> &str {
    |            ^^^^^^^
...
254 |     pub fn client_id_ref(&self) -> Option<&str> {
    |            ^^^^^^^^^^^^^
...
259 |     pub fn request_timeout_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
264 |     pub fn retry_backoff_duration(&self) -> Duration {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
269 |     pub fn custom_config_ref(&self) -> &HashMap<String, String> {
    |            ^^^^^^^^^^^^^^^^^

warning: methods `custom_property` and `config_mut` are never used
  --> src/ferris/kafka/client_config_builder.rs:58:12
   |
13 | impl ClientConfigBuilder {
   | ------------------------ methods in this implementation
...
58 |     pub fn custom_property(mut self, key: &str, value: &str) -> Self {
   |            ^^^^^^^^^^^^^^^
...
69 |     pub fn config_mut(&mut self) -> &mut ClientConfig {
   |            ^^^^^^^^^^

warning: multiple methods are never used
  --> src/ferris/kafka/common_config.rs:45:12
   |
35 | impl CommonKafkaConfig {
   | ---------------------- methods in this implementation
...
45 |     pub fn client_id(mut self, client_id: impl Into<String>) -> Self {
   |            ^^^^^^^^^
...
51 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
   |            ^^^^^^^^^^^^^^^
...
57 |     pub fn retry_backoff(mut self, backoff: Duration) -> Self {
   |            ^^^^^^^^^^^^^
...
63 |     pub fn custom_property(mut self, key: impl Into<String>, value: impl Into<String>) -> Self {
   |            ^^^^^^^^^^^^^^^
...
69 |     pub fn custom_properties(mut self, properties: HashMap<String, String>) -> Self {
   |            ^^^^^^^^^^^^^^^^^
...
75 |     pub fn clear_custom_properties(mut self) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^^^^
...
81 |     pub fn custom_properties_ref(&self) -> &HashMap<String, String> {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
86 |     pub fn apply_development_preset(&mut self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
92 |     pub fn apply_production_preset(&mut self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^
...
98 |     pub fn apply_high_reliability_preset(&mut self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: variants `Timeout` and `NoMessage` are never constructed
  --> src/ferris/kafka/kafka_error.rs:15:5
   |
9  | pub enum KafkaClientError {
   |          ---------------- variants in this enum
...
15 |     Timeout,
   |     ^^^^^^^
16 |     /// No message available
17 |     NoMessage,
   |     ^^^^^^^^^
   |
   = note: `KafkaClientError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: type alias `ConsumerError` is never used
  --> src/ferris/kafka/kafka_error.rs:57:10
   |
57 | pub type ConsumerError = KafkaClientError;
   |          ^^^^^^^^^^^^^

warning: trait `PerformancePresets` is never used
   --> src/ferris/kafka/performance_presets.rs:133:11
    |
133 | pub trait PerformancePresets {
    |           ^^^^^^^^^^^^^^^^^^

warning: function `apply_high_throughput_common` is never used
  --> src/ferris/kafka/performance_presets.rs:18:12
   |
18 |     pub fn apply_high_throughput_common(config: &mut CommonKafkaConfig) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `apply_low_latency_common` is never used
  --> src/ferris/kafka/performance_presets.rs:38:12
   |
38 |     pub fn apply_low_latency_common(config: &mut CommonKafkaConfig) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `apply_max_durability_common` is never used
  --> src/ferris/kafka/performance_presets.rs:58:12
   |
58 |     pub fn apply_max_durability_common(config: &mut CommonKafkaConfig) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `apply_development_common` is never used
  --> src/ferris/kafka/performance_presets.rs:78:12
   |
78 |     pub fn apply_development_common(config: &mut CommonKafkaConfig) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `apply_streaming_common` is never used
  --> src/ferris/kafka/performance_presets.rs:97:12
   |
97 |     pub fn apply_streaming_common(config: &mut CommonKafkaConfig) {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_preset_description` is never used
   --> src/ferris/kafka/performance_presets.rs:166:12
    |
166 |     pub fn get_preset_description(preset_name: &str) -> Option<&'static str> {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: function `get_preset_use_cases` is never used
   --> src/ferris/kafka/performance_presets.rs:189:12
    |
189 |     pub fn get_preset_use_cases(preset_name: &str) -> Option<Vec<&'static str>> {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: enum `SchemaError` is never used
 --> src/ferris/schema/error.rs:7:10
  |
7 | pub enum SchemaError {
  |          ^^^^^^^^^^^

warning: type alias `SchemaResult` is never used
  --> src/ferris/schema/error.rs:52:10
   |
52 | pub type SchemaResult<T> = Result<T, SchemaError>;
   |          ^^^^^^^^^^^^

warning: struct `Schema` is never constructed
  --> src/ferris/schema/types.rs:11:12
   |
11 | pub struct Schema {
   |            ^^^^^^

warning: struct `FieldDefinition` is never constructed
  --> src/ferris/schema/types.rs:19:12
   |
19 | pub struct FieldDefinition {
   |            ^^^^^^^^^^^^^^^

warning: struct `SchemaMetadata` is never constructed
  --> src/ferris/schema/types.rs:29:12
   |
29 | pub struct SchemaMetadata {
   |            ^^^^^^^^^^^^^^

warning: enum `CompatibilityMode` is never used
  --> src/ferris/schema/types.rs:39:10
   |
39 | pub enum CompatibilityMode {
   |          ^^^^^^^^^^^^^^^^^

warning: struct `StreamHandle` is never constructed
  --> src/ferris/schema/types.rs:54:12
   |
54 | pub struct StreamHandle {
   |            ^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/types.rs:78:12
    |
77  | impl Schema {
    | ----------- associated items in this implementation
78  |     pub fn new(fields: Vec<FieldDefinition>) -> Self {
    |            ^^^
...
86  |     pub fn with_version(mut self, version: String) -> Self {
    |            ^^^^^^^^^^^^
...
91  |     pub fn with_metadata(mut self, metadata: SchemaMetadata) -> Self {
    |            ^^^^^^^^^^^^^
...
96  |     pub fn has_field(&self, name: &str) -> bool {
    |            ^^^^^^^^^
...
100 |     pub fn get_field(&self, name: &str) -> Option<&FieldDefinition> {
    |            ^^^^^^^^^
...
104 |     pub fn get_field_type(&self, name: &str) -> Option<&DataType> {
    |            ^^^^^^^^^^^^^^
...
108 |     pub fn field_names(&self) -> Vec<&str> {
    |            ^^^^^^^^^^^
...
115 |     pub fn validate_record(&self, record: &HashMap<String, serde_json::Value>) -> bool {
    |            ^^^^^^^^^^^^^^^
...
131 |     fn value_matches_type(&self, value: &serde_json::Value, data_type: &DataType) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
146 |     pub fn is_compatible_with(&self, other: &Schema) -> bool {
    |            ^^^^^^^^^^^^^^^^^^
...
158 |     fn fields_compatible_with(&self, other_fields: &[FieldDefinition]) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `required`, `optional`, `with_description`, and `with_default` are never used
   --> src/ferris/schema/types.rs:170:12
    |
169 | impl FieldDefinition {
    | -------------------- associated items in this implementation
170 |     pub fn new(name: String, data_type: DataType, nullable: bool) -> Self {
    |            ^^^
...
180 |     pub fn required(name: String, data_type: DataType) -> Self {
    |            ^^^^^^^^
...
184 |     pub fn optional(name: String, data_type: DataType) -> Self {
    |            ^^^^^^^^
...
188 |     pub fn with_description(mut self, description: String) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
193 |     pub fn with_default(mut self, default_value: String) -> Self {
    |            ^^^^^^^^^^^^

warning: associated items `new`, `with_compatibility`, and `with_tag` are never used
   --> src/ferris/schema/types.rs:200:12
    |
199 | impl SchemaMetadata {
    | ------------------- associated items in this implementation
200 |     pub fn new(source_type: String) -> Self {
    |            ^^^
...
211 |     pub fn with_compatibility(mut self, mode: CompatibilityMode) -> Self {
    |            ^^^^^^^^^^^^^^^^^^
...
216 |     pub fn with_tag(mut self, key: String, value: String) -> Self {
    |            ^^^^^^^^

warning: struct `SchemaRegistryClient` is never constructed
  --> src/ferris/schema/client/registry_client.rs:15:12
   |
15 | pub struct SchemaRegistryClient {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: struct `RegistryClientConfig` is never constructed
  --> src/ferris/schema/client/registry_client.rs:26:12
   |
26 | pub struct RegistryClientConfig {
   |            ^^^^^^^^^^^^^^^^^^^^

warning: enum `AuthConfig` is never used
  --> src/ferris/schema/client/registry_client.rs:41:10
   |
41 | pub enum AuthConfig {
   |          ^^^^^^^^^^

warning: struct `SchemaDependency` is never constructed
  --> src/ferris/schema/client/registry_client.rs:78:12
   |
78 | pub struct SchemaDependency {
   |            ^^^^^^^^^^^^^^^^

warning: struct `ResolvedSchema` is never constructed
  --> src/ferris/schema/client/registry_client.rs:87:12
   |
87 | pub struct ResolvedSchema {
   |            ^^^^^^^^^^^^^^

warning: struct `SchemaCache` is never constructed
   --> src/ferris/schema/client/registry_client.rs:109:12
    |
109 | pub struct SchemaCache {
    |            ^^^^^^^^^^^

warning: struct `DependencyGraph` is never constructed
   --> src/ferris/schema/client/registry_client.rs:121:12
    |
121 | pub struct DependencyGraph {
    |            ^^^^^^^^^^^^^^^

warning: struct `GraphNode` is never constructed
   --> src/ferris/schema/client/registry_client.rs:130:12
    |
130 | pub struct GraphNode {
    |            ^^^^^^^^^

warning: struct `SchemaReferenceResolver` is never constructed
   --> src/ferris/schema/client/registry_client.rs:139:12
    |
139 | pub struct SchemaReferenceResolver {
    |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/registry_client.rs:176:12
    |
174 | impl SchemaRegistryClient {
    | ------------------------- associated items in this implementation
175 |     /// Create a new Schema Registry client
176 |     pub fn new(base_url: String) -> Self {
    |            ^^^
...
190 |     pub fn with_config(base_url: String, config: RegistryClientConfig) -> Self {
    |            ^^^^^^^^^^^
...
198 |     pub fn with_auth(mut self, auth: AuthConfig) -> Self {
    |            ^^^^^^^^^
...
204 |     pub async fn get_schema(&self, id: u32) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^
...
239 |     pub async fn get_latest_schema(&self, subject: &str) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^^^^^^^^
...
267 |     pub async fn register_schema(
    |                  ^^^^^^^^^^^^^^^
...
305 |     pub async fn resolve_schema_with_references(&self, id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
332 |     pub async fn validate_schema_compatibility(
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
361 |     pub fn get_schema_dependencies<'a>(
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
388 |     pub async fn get_schema_references(&self, subject: &str) -> SchemaResult<Vec<SchemaReference>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
394 |     pub async fn list_subjects(&self) -> SchemaResult<Vec<String>> {
    |                  ^^^^^^^^^^^^^
...
409 |     pub async fn list_subject_versions(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
424 |     pub async fn get_subject_version(
    |                  ^^^^^^^^^^^^^^^^^^^
...
449 |     pub async fn delete_subject_version(&self, subject: &str, version: i32) -> SchemaResult<i32> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
470 |     pub async fn delete_subject(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^^^
...
489 |     pub async fn get_config(&self, subject: Option<&str>) -> SchemaResult<RegistryConfig> {
    |                  ^^^^^^^^^^
...
509 |     pub async fn update_config(
    |                  ^^^^^^^^^^^^^
...
539 |     pub async fn health_check(&self) -> SchemaResult<bool> {
    |                  ^^^^^^^^^^^^
...
548 |     async fn invalidate_cache(&self, subject: &str, version: Option<i32>) {
    |              ^^^^^^^^^^^^^^^^
...
555 |     async fn execute_request(
    |              ^^^^^^^^^^^^^^^
...
628 |     async fn get_cached_schema(&self, id: u32) -> Option<CachedSchema> {
    |              ^^^^^^^^^^^^^^^^^
...
633 |     async fn cache_schema(&self, schema: CachedSchema) {
    |              ^^^^^^^^^^^^
...
638 |     async fn get_cached_resolved_schema(&self, id: u32) -> Option<ResolvedSchema> {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
643 |     async fn cache_resolved_schema(&self, resolved: ResolvedSchema) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
648 |     async fn build_dependency_graph(&self, root_id: u32) -> SchemaResult<DependencyGraph> {
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
665 |     fn add_to_graph<'a>(
    |        ^^^^^^^^^^^^
...
703 |     async fn resolve_from_graph(
    |              ^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `get_schema`, `put_schema`, `get_resolved_schema`, `put_resolved_schema`, and `invalidate_subject` are never used
   --> src/ferris/schema/client/registry_client.rs:743:8
    |
742 | impl SchemaCache {
    | ---------------- associated items in this implementation
743 |     fn new(config: RegistryClientConfig) -> Self {
    |        ^^^
...
755 |     fn get_schema(&self, id: u32) -> Option<CachedSchema> {
    |        ^^^^^^^^^^
...
759 |     fn put_schema(&mut self, schema: CachedSchema) {
    |        ^^^^^^^^^^
...
772 |     fn get_resolved_schema(&self, id: u32) -> Option<ResolvedSchema> {
    |        ^^^^^^^^^^^^^^^^^^^
...
776 |     fn put_resolved_schema(&mut self, resolved: ResolvedSchema) {
    |        ^^^^^^^^^^^^^^^^^^^
...
782 |     fn invalidate_subject(&mut self, subject: &str, version: Option<i32>) {
    |        ^^^^^^^^^^^^^^^^^^

warning: struct `UnifiedSchemaRegistryClient` is never constructed
  --> src/ferris/schema/client/unified_client.rs:18:12
   |
18 | pub struct UnifiedSchemaRegistryClient {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `UnifiedClientConfig` is never constructed
  --> src/ferris/schema/client/unified_client.rs:27:12
   |
27 | pub struct UnifiedClientConfig {
   |            ^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/unified_client.rs:46:12
    |
44  | impl UnifiedSchemaRegistryClient {
    | -------------------------------- associated items in this implementation
45  |     /// Create a new unified client with a specific backend
46  |     pub fn new(backend_config: BackendConfig) -> SchemaResult<Self> {
    |            ^^^
...
63  |     pub fn from_url(url: &str) -> SchemaResult<Self> {
    |            ^^^^^^^^
...
69  |     pub fn with_config(
    |            ^^^^^^^^^^^
...
79  |     pub async fn get_schema(&self, id: u32) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^
...
109 |     pub async fn get_latest_schema(&self, subject: &str) -> SchemaResult<CachedSchema> {
    |                  ^^^^^^^^^^^^^^^^^
...
131 |     pub async fn get_schema_version(
    |                  ^^^^^^^^^^^^^^^^^^
...
157 |     pub async fn register_schema(
    |                  ^^^^^^^^^^^^^^^
...
169 |     pub async fn check_compatibility(&self, subject: &str, schema: &str) -> SchemaResult<bool> {
    |                  ^^^^^^^^^^^^^^^^^^^
...
174 |     pub async fn resolve_schema_with_references(&self, id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
198 |     pub async fn get_versions(&self, subject: &str) -> SchemaResult<Vec<i32>> {
    |                  ^^^^^^^^^^^^
...
203 |     pub async fn get_subjects(&self) -> SchemaResult<Vec<String>> {
    |                  ^^^^^^^^^^^^
...
208 |     pub async fn delete_schema_version(&self, subject: &str, version: i32) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^^^^^^^^^
...
221 |     pub fn backend_metadata(&self) -> BackendMetadata {
    |            ^^^^^^^^^^^^^^^^
...
226 |     pub async fn health_check(&self) -> SchemaResult<HealthStatus> {
    |                  ^^^^^^^^^^^^
...
231 |     pub async fn cache_metrics(&self) -> Option<super::enhanced_cache::CacheMetrics> {
    |                  ^^^^^^^^^^^^^
...
240 |     pub async fn warm_up_cache(&self, schema_ids: Vec<u32>) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^
...
255 |     pub async fn clear_cache(&self) {
    |                  ^^^^^^^^^^^
...
262 |     pub async fn switch_backend(&mut self, new_backend_config: BackendConfig) -> SchemaResult<()> {
    |                  ^^^^^^^^^^^^^^

warning: struct `UnifiedClientBuilder` is never constructed
   --> src/ferris/schema/client/unified_client.rs:288:12
    |
288 | pub struct UnifiedClientBuilder {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/unified_client.rs:295:12
    |
293 | impl UnifiedClientBuilder {
    | ------------------------- associated items in this implementation
294 |     /// Create a new builder
295 |     pub fn new() -> Self {
    |            ^^^
...
303 |     pub fn backend(mut self, config: BackendConfig) -> Self {
    |            ^^^^^^^
...
309 |     pub fn confluent(mut self, base_url: &str) -> Self {
    |            ^^^^^^^^^
...
320 |     pub fn confluent_with_auth(mut self, base_url: &str, auth: ConfluentAuth) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^
...
331 |     pub fn in_memory(mut self) -> Self {
    |            ^^^^^^^^^
...
339 |     pub fn caching(mut self, enabled: bool) -> Self {
    |            ^^^^^^^
...
345 |     pub fn references(mut self, enabled: bool) -> Self {
    |            ^^^^^^^^^^
...
351 |     pub fn retry(mut self, enabled: bool, max_retries: u32) -> Self {
    |            ^^^^^
...
358 |     pub fn fallback_to_cache(mut self, enabled: bool) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
364 |     pub fn build(self) -> SchemaResult<UnifiedSchemaRegistryClient> {
    |            ^^^^^

warning: struct `SchemaCache` is never constructed
  --> src/ferris/schema/client/cache.rs:13:12
   |
13 | pub struct SchemaCache {
   |            ^^^^^^^^^^^

warning: struct `CacheConfig` is never constructed
  --> src/ferris/schema/client/cache.rs:26:12
   |
26 | pub struct CacheConfig {
   |            ^^^^^^^^^^^

warning: struct `CacheEntry` is never constructed
  --> src/ferris/schema/client/cache.rs:43:8
   |
43 | struct CacheEntry {
   |        ^^^^^^^^^^

warning: struct `CacheStatistics` is never constructed
  --> src/ferris/schema/client/cache.rs:62:12
   |
62 | pub struct CacheStatistics {
   |            ^^^^^^^^^^^^^^^

warning: enum `CacheLookupResult` is never used
  --> src/ferris/schema/client/cache.rs:83:10
   |
83 | pub enum CacheLookupResult {
   |          ^^^^^^^^^^^^^^^^^

warning: enum `MissReason` is never used
   --> src/ferris/schema/client/cache.rs:102:10
    |
102 | pub enum MissReason {
    |          ^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/cache.rs:126:12
    |
124 | impl SchemaCache {
    | ---------------- associated items in this implementation
125 |     /// Create a new schema cache with default configuration
126 |     pub fn new() -> Self {
    |            ^^^
...
131 |     pub fn with_config(config: CacheConfig) -> Self {
    |            ^^^^^^^^^^^
...
141 |     pub async fn get(&self, source_uri: &str) -> CacheLookupResult {
    |                  ^^^
...
226 |     pub async fn put(
    |                  ^^^
...
269 |     pub async fn invalidate(&self, source_uri: &str) -> bool {
    |                  ^^^^^^^^^^
...
286 |     pub async fn clear(&self) {
    |                  ^^^^^
...
301 |     pub async fn statistics(&self) -> CacheStatistics {
    |                  ^^^^^^^^^^
...
310 |     pub async fn size_info(&self) -> CacheSizeInfo {
    |                  ^^^^^^^^^
...
324 |     pub async fn maintenance(&self) -> SchemaResult<MaintenanceResult> {
    |                  ^^^^^^^^^^^
...
358 |     pub async fn is_version_current(&self, source_uri: &str, version: &str) -> bool {
    |                  ^^^^^^^^^^^^^^^^^^
...
368 |     async fn evict_entries(&self, entries: &mut HashMap<String, CacheEntry>) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^
...
387 |     async fn find_lru_key(&self, entries: &HashMap<String, CacheEntry>) -> Option<String> {
    |              ^^^^^^^^^^^^
...
394 |     async fn update_access_order_add(&self, key: &str) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
401 |     async fn update_access_order_remove(&self, key: &str) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
408 |     async fn update_access_order_touch(&self, key: &str) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^
...
417 |     async fn count_expired_entries(&self, entries: &HashMap<String, CacheEntry>) -> usize {
    |              ^^^^^^^^^^^^^^^^^^^^^

warning: struct `CacheSizeInfo` is never constructed
   --> src/ferris/schema/client/cache.rs:428:12
    |
428 | pub struct CacheSizeInfo {
    |            ^^^^^^^^^^^^^

warning: methods `hit_rate`, `miss_rate`, and `total_evictions` are never used
   --> src/ferris/schema/client/cache.rs:465:12
    |
463 | impl CacheStatistics {
    | -------------------- methods in this implementation
464 |     /// Calculate cache hit rate
465 |     pub fn hit_rate(&self) -> f64 {
    |            ^^^^^^^^
...
474 |     pub fn miss_rate(&self) -> f64 {
    |            ^^^^^^^^^
...
479 |     pub fn total_evictions(&self) -> u64 {
    |            ^^^^^^^^^^^^^^^

warning: struct `EnhancedSchemaCache` is never constructed
  --> src/ferris/schema/client/enhanced_cache.rs:16:12
   |
16 | pub struct EnhancedSchemaCache {
   |            ^^^^^^^^^^^^^^^^^^^

warning: struct `CacheConfig` is never constructed
  --> src/ferris/schema/client/enhanced_cache.rs:41:12
   |
41 | pub struct CacheConfig {
   |            ^^^^^^^^^^^

warning: struct `LruCache` is never constructed
  --> src/ferris/schema/client/enhanced_cache.rs:71:12
   |
71 | pub struct LruCache<K: std::hash::Hash + Eq + Clone, V: Clone> {
   |            ^^^^^^^^

warning: struct `CachedEntry` is never constructed
  --> src/ferris/schema/client/enhanced_cache.rs:80:8
   |
80 | struct CachedEntry {
   |        ^^^^^^^^^^^

warning: struct `ResolvedEntry` is never constructed
  --> src/ferris/schema/client/enhanced_cache.rs:91:8
   |
91 | struct ResolvedEntry {
   |        ^^^^^^^^^^^^^

warning: struct `DependencyIndex` is never constructed
   --> src/ferris/schema/client/enhanced_cache.rs:101:8
    |
101 | struct DependencyIndex {
    |        ^^^^^^^^^^^^^^^

warning: struct `RefreshManager` is never constructed
   --> src/ferris/schema/client/enhanced_cache.rs:113:8
    |
113 | struct RefreshManager {
    |        ^^^^^^^^^^^^^^

warning: struct `RefreshTask` is never constructed
   --> src/ferris/schema/client/enhanced_cache.rs:121:8
    |
121 | struct RefreshTask {
    |        ^^^^^^^^^^^

warning: enum `RefreshPriority` is never used
   --> src/ferris/schema/client/enhanced_cache.rs:130:6
    |
130 | enum RefreshPriority {
    |      ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/enhanced_cache.rs:185:12
    |
183 | impl EnhancedSchemaCache {
    | ------------------------ associated items in this implementation
184 |     /// Create a new enhanced cache with default configuration
185 |     pub fn new() -> Self {
    |            ^^^
...
190 |     pub fn with_config(config: CacheConfig) -> Self {
    |            ^^^^^^^^^^^
...
203 |     pub async fn get(&self, schema_id: u32) -> Option<CachedSchema> {
    |                  ^^^
...
263 |     pub async fn put(&self, schema: CachedSchema) {
    |                  ^^^
...
299 |     pub async fn get_resolved(&self, schema_id: u32) -> Option<ResolvedSchema> {
    |                  ^^^^^^^^^^^^
...
322 |     pub async fn put_resolved(
    |                  ^^^^^^^^^^^^
...
345 |     pub async fn invalidate(&self, schema_id: u32) {
    |                  ^^^^^^^^^^
...
376 |     pub async fn clear(&self) {
    |                  ^^^^^
...
394 |     pub async fn metrics(&self) -> CacheMetrics {
    |                  ^^^^^^^
...
410 |     pub async fn warm_up(&self, schema_ids: Vec<u32>) {
    |                  ^^^^^^^
...
417 |     pub async fn persist(&self) -> SchemaResult<()> {
    |                  ^^^^^^^
...
447 |     pub async fn load(&self) -> SchemaResult<()> {
    |                  ^^^^
...
481 |     async fn promote_to_hot(&self, schema_id: u32, schema: CachedSchema) {
    |              ^^^^^^^^^^^^^^
...
486 |     async fn ensure_cache_capacity(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
494 |     async fn evict_lru(&self) {
    |              ^^^^^^^^^
...
508 |     async fn schedule_refresh(&self, schema_id: u32, priority: RefreshPriority) {
    |              ^^^^^^^^^^^^^^^^
...
520 |     async fn prefetch_dependencies(&self, schema_id: u32) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
541 |     async fn update_dependency_index(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
565 |     async fn update_access_pattern(&self, schema_id: u32) {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
577 |     async fn get_dependents(&self, schema_id: u32) -> Vec<u32> {
    |              ^^^^^^^^^^^^^^
...
586 |     async fn invalidate_resolved(&self, schema_id: u32) {
    |              ^^^^^^^^^^^^^^^^^^^
...
591 |     fn record_lookup_time(&self, metrics: &mut CacheMetrics, start_time: Instant) {
    |        ^^^^^^^^^^^^^^^^^^
...
604 |     async fn export_state(&self) -> CacheState {
    |              ^^^^^^^^^^^^
...
616 |     async fn import_state(&self, _state: CacheState) {
    |              ^^^^^^^^^^^^

warning: associated items `new`, `get`, `put`, `remove`, and `clear` are never used
   --> src/ferris/schema/client/enhanced_cache.rs:623:8
    |
622 | impl<K: std::hash::Hash + Eq + Clone, V: Clone> LruCache<K, V> {
    | -------------------------------------------------------------- associated items in this implementation
623 |     fn new(capacity: usize) -> Self {
    |        ^^^
...
632 |     fn get(&mut self, key: &K) -> Option<&V> {
    |        ^^^
...
647 |     fn put(&mut self, key: K, value: V) {
    |        ^^^
...
661 |     fn remove(&mut self, key: &K) -> Option<V> {
    |        ^^^^^^
...
667 |     fn clear(&mut self) {
    |        ^^^^^

warning: method `is_expired` is never used
   --> src/ferris/schema/client/enhanced_cache.rs:675:8
    |
674 | impl CachedEntry {
    | ---------------- method in this implementation
675 |     fn is_expired(&self) -> bool {
    |        ^^^^^^^^^^

warning: associated items `new` and `clear` are never used
   --> src/ferris/schema/client/enhanced_cache.rs:687:8
    |
686 | impl DependencyIndex {
    | -------------------- associated items in this implementation
687 |     fn new() -> Self {
    |        ^^^
...
695 |     fn clear(&mut self) {
    |        ^^^^^

warning: associated function `new` is never used
   --> src/ferris/schema/client/enhanced_cache.rs:703:8
    |
702 | impl RefreshManager {
    | ------------------- associated function in this implementation
703 |     fn new() -> Self {
    |        ^^^

warning: struct `MultiLevelCacheConfig` is never constructed
   --> src/ferris/schema/client/multilevel_cache.rs:234:12
    |
234 | pub struct MultiLevelCacheConfig {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `SchemaReferenceResolver` is never constructed
  --> src/ferris/schema/client/reference_resolver.rs:16:12
   |
16 | pub struct SchemaReferenceResolver {
   |            ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `ResolverConfig` is never constructed
  --> src/ferris/schema/client/reference_resolver.rs:25:12
   |
25 | pub struct ResolverConfig {
   |            ^^^^^^^^^^^^^^

warning: struct `ResolvedDependency` is never constructed
  --> src/ferris/schema/client/reference_resolver.rs:52:12
   |
52 | pub struct ResolvedDependency {
   |            ^^^^^^^^^^^^^^^^^^

warning: struct `SchemaEvolutionTracker` is never constructed
  --> src/ferris/schema/client/reference_resolver.rs:61:12
   |
61 | pub struct SchemaEvolutionTracker {
   |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `record_evolution`, and `get_evolution_history` are never used
  --> src/ferris/schema/client/reference_resolver.rs:73:12
   |
72 | impl SchemaEvolutionTracker {
   | --------------------------- associated items in this implementation
73 |     pub fn new() -> Self {
   |            ^^^
...
80 |     pub fn record_evolution(&mut self, subject: String, record: EvolutionRecord) {
   |            ^^^^^^^^^^^^^^^^
...
87 |     pub fn get_evolution_history(&self, subject: &str) -> Vec<&EvolutionRecord> {
   |            ^^^^^^^^^^^^^^^^^^^^^

warning: struct `EvolutionRecord` is never constructed
  --> src/ferris/schema/client/reference_resolver.rs:96:12
   |
96 | pub struct EvolutionRecord {
   |            ^^^^^^^^^^^^^^^

warning: enum `EvolutionType` is never used
   --> src/ferris/schema/client/reference_resolver.rs:107:10
    |
107 | pub enum EvolutionType {
    |          ^^^^^^^^^^^^^

warning: enum `CompatibilityLevel` is never used
   --> src/ferris/schema/client/reference_resolver.rs:116:10
    |
116 | pub enum CompatibilityLevel {
    |          ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/reference_resolver.rs:243:12
    |
241 | impl SchemaReferenceResolver {
    | ---------------------------- associated items in this implementation
242 |     /// Create new resolver with registry client
243 |     pub fn new(registry: Arc<SchemaRegistryClient>) -> Self {
    |            ^^^
...
253 |     pub fn new_stub() -> Self {
    |            ^^^^^^^^
...
263 |     pub fn with_config(registry: Arc<SchemaRegistryClient>, config: ResolverConfig) -> Self {
    |            ^^^^^^^^^^^
...
273 |     pub async fn resolve_with_references(&self, schema_id: u32) -> SchemaResult<ResolvedSchema> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^
...
307 |     pub async fn build_dependency_graph(&self, schema_id: u32) -> SchemaResult<DependencyGraph> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^
...
325 |     async fn build_graph_recursively(
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
391 |     fn detect_and_handle_cycles(&self, graph: &DependencyGraph) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
417 |     fn dfs_cycle_detection(
    |        ^^^^^^^^^^^^^^^^^^^
...
452 |     fn build_cycle_path(&self, parent: &HashMap<u32, u32>) -> Vec<u32> {
    |        ^^^^^^^^^^^^^^^^
...
477 |     async fn validate_reference_compatibility(
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
494 |     async fn get_cached_resolution(&self, _schema_id: u32) -> Option<ResolvedSchema> {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
500 |     async fn cache_resolution(
    |              ^^^^^^^^^^^^^^^^
...
510 |     fn topological_sort(&self, graph: &DependencyGraph) -> SchemaResult<Vec<u32>> {
    |        ^^^^^^^^^^^^^^^^
...
562 |     async fn resolve_from_graph(
    |              ^^^^^^^^^^^^^^^^^^
...
592 |     fn extract_references(&self, _schema: &str) -> SchemaResult<Vec<SchemaReference>> {
    |        ^^^^^^^^^^^^^^^^^^
...
599 |     async fn track_evolution(&self, subject: String, evolution: EvolutionRecord) {
    |              ^^^^^^^^^^^^^^^
...
605 |     fn extract_fields(&self, _schema: &str) -> HashSet<String> {
    |        ^^^^^^^^^^^^^^
...
611 |     async fn create_canary_plan(
    |              ^^^^^^^^^^^^^^^^^^
...
647 |     async fn create_blue_green_plan(
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
676 |     async fn create_rolling_plan(
    |              ^^^^^^^^^^^^^^^^^^^

warning: struct `KafkaSchemaProvider` is never constructed
  --> src/ferris/schema/client/providers.rs:14:12
   |
14 | pub struct KafkaSchemaProvider {
   |            ^^^^^^^^^^^^^^^^^^^

warning: struct `FileSchemaProvider` is never constructed
  --> src/ferris/schema/client/providers.rs:20:12
   |
20 | pub struct FileSchemaProvider {
   |            ^^^^^^^^^^^^^^^^^^

warning: struct `S3SchemaProvider` is never constructed
  --> src/ferris/schema/client/providers.rs:26:12
   |
26 | pub struct S3SchemaProvider {
   |            ^^^^^^^^^^^^^^^^

warning: associated items `new`, `with_schema_registry`, `extract_topic_from_uri`, `discover_from_schema_registry`, and `create_default_kafka_schema` are never used
  --> src/ferris/schema/client/providers.rs:46:12
   |
44 | impl KafkaSchemaProvider {
   | ------------------------ associated items in this implementation
45 |     /// Create a new Kafka schema provider
46 |     pub fn new() -> Self {
   |            ^^^
...
53 |     pub fn with_schema_registry(mut self, registry_url: String) -> Self {
   |            ^^^^^^^^^^^^^^^^^^^^
...
59 |     fn extract_topic_from_uri(&self, uri: &str) -> SchemaResult<String> {
   |        ^^^^^^^^^^^^^^^^^^^^^^
...
73 |     async fn discover_from_schema_registry(&self, topic: &str) -> SchemaResult<Schema> {
   |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
88 |     fn create_default_kafka_schema(&self, topic: &str) -> Schema {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/client/providers.rs:156:12
    |
155 | impl FileSchemaProvider {
    | ----------------------- associated items in this implementation
156 |     pub fn new() -> Self {
    |            ^^^
...
160 |     pub fn with_sample_size(mut self, sample_size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
166 |     async fn infer_schema_from_file(&self, file_path: &str) -> SchemaResult<Schema> {
    |              ^^^^^^^^^^^^^^^^^^^^^^
...
182 |     fn create_json_schema(&self, file_path: &str) -> SchemaResult<Schema> {
    |        ^^^^^^^^^^^^^^^^^^
...
203 |     fn create_csv_schema(&self, file_path: &str) -> SchemaResult<Schema> {
    |        ^^^^^^^^^^^^^^^^^
...
219 |     fn create_parquet_schema(&self, file_path: &str) -> SchemaResult<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
235 |     fn create_avro_schema(&self, file_path: &str) -> SchemaResult<Schema> {
    |        ^^^^^^^^^^^^^^^^^^
...
251 |     fn create_generic_schema(&self, file_path: &str) -> SchemaResult<Schema> {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `with_sample_size`, `parse_s3_uri`, and `infer_schema_from_key` are never used
   --> src/ferris/schema/client/providers.rs:296:12
    |
295 | impl S3SchemaProvider {
    | --------------------- associated items in this implementation
296 |     pub fn new(region: String) -> Self {
    |            ^^^
...
303 |     pub fn with_sample_size(mut self, sample_size: usize) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
309 |     fn parse_s3_uri(&self, uri: &str) -> SchemaResult<(String, String)> {
    |        ^^^^^^^^^^^^
...
330 |     fn infer_schema_from_key(&self, bucket: &str, key: &str) -> Schema {
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: function `create_default_registry` is never used
   --> src/ferris/schema/client/providers.rs:407:8
    |
407 | pub fn create_default_registry() -> crate::ferris::schema::registry::SchemaRegistry {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: trait `SchemaRegistryBackend` is never used
  --> src/ferris/schema/server/registry_backend.rs:23:11
   |
23 | pub trait SchemaRegistryBackend: Send + Sync {
   |           ^^^^^^^^^^^^^^^^^^^^^

warning: enum `BackendConfig` is never used
   --> src/ferris/schema/server/registry_backend.rs:104:10
    |
104 | pub enum BackendConfig {
    |          ^^^^^^^^^^^^^

warning: struct `SchemaRegistryBackendFactory` is never constructed
   --> src/ferris/schema/server/registry_backend.rs:137:12
    |
137 | pub struct SchemaRegistryBackendFactory;
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated functions `create` and `auto_detect` are never used
   --> src/ferris/schema/server/registry_backend.rs:141:12
    |
139 | impl SchemaRegistryBackendFactory {
    | --------------------------------- associated functions in this implementation
140 |     /// Create a backend from configuration
141 |     pub fn create(config: BackendConfig) -> SchemaResult<Arc<dyn SchemaRegistryBackend>> {
    |            ^^^^^^
...
193 |     pub fn auto_detect(url: &str) -> BackendConfig {
    |            ^^^^^^^^^^^

warning: struct `AwsCredentials` is never constructed
  --> src/ferris/schema/server/backends/amazon_msk.rs:17:12
   |
17 | pub struct AwsCredentials {
   |            ^^^^^^^^^^^^^^

warning: struct `AmazonMskSchemaRegistryBackend` is never constructed
  --> src/ferris/schema/server/backends/amazon_msk.rs:24:12
   |
24 | pub struct AmazonMskSchemaRegistryBackend {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/schema/server/backends/amazon_msk.rs:32:12
   |
31 | impl AmazonMskSchemaRegistryBackend {
   | ----------------------------------- associated function in this implementation
32 |     pub fn new(
   |            ^^^

warning: enum `ConfluentAuth` is never used
  --> src/ferris/schema/server/backends/confluent.rs:18:10
   |
18 | pub enum ConfluentAuth {
   |          ^^^^^^^^^^^^^

warning: struct `ConfluentSchemaRegistryBackend` is never constructed
  --> src/ferris/schema/server/backends/confluent.rs:26:12
   |
26 | pub struct ConfluentSchemaRegistryBackend {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/schema/server/backends/confluent.rs:35:12
   |
34 | impl ConfluentSchemaRegistryBackend {
   | ----------------------------------- associated function in this implementation
35 |     pub fn new(
   |            ^^^

warning: method `execute_request` is never used
   --> src/ferris/schema/server/backends/confluent.rs:283:14
    |
282 | impl ConfluentSchemaRegistryBackend {
    | ----------------------------------- method in this implementation
283 |     async fn execute_request(
    |              ^^^^^^^^^^^^^^^

warning: fields `id`, `schema`, `subject`, `version`, and `references` are never read
   --> src/ferris/schema/server/backends/confluent.rs:328:5
    |
327 | struct ConfluentSchemaResponse {
    |        ----------------------- fields in this struct
328 |     id: u32,
    |     ^^
329 |     schema: String,
    |     ^^^^^^
330 |     #[serde(default)]
331 |     subject: Option<String>,
    |     ^^^^^^^
332 |     #[serde(default)]
333 |     version: Option<i32>,
    |     ^^^^^^^
334 |     #[serde(default)]
335 |     references: Option<Vec<SchemaReference>>,
    |     ^^^^^^^^^^
    |
    = note: `ConfluentSchemaResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: fields `id`, `subject`, `version`, `schema`, and `references` are never read
   --> src/ferris/schema/server/backends/confluent.rs:340:5
    |
339 | struct ConfluentVersionResponse {
    |        ------------------------ fields in this struct
340 |     id: u32,
    |     ^^
341 |     subject: String,
    |     ^^^^^^^
342 |     version: i32,
    |     ^^^^^^^
343 |     schema: String,
    |     ^^^^^^
344 |     #[serde(default)]
345 |     references: Option<Vec<SchemaReference>>,
    |     ^^^^^^^^^^
    |
    = note: `ConfluentVersionResponse` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: struct `ConfluentRegisterRequest` is never constructed
   --> src/ferris/schema/server/backends/confluent.rs:349:8
    |
349 | struct ConfluentRegisterRequest {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `FileSystemSchemaRegistryBackend` is never constructed
  --> src/ferris/schema/server/backends/filesystem.rs:23:12
   |
23 | pub struct FileSystemSchemaRegistryBackend {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `ensure_directories`, `write_schema_version`, `load_subject_versions`, and `get_next_id` are never used
   --> src/ferris/schema/server/backends/filesystem.rs:30:12
    |
29  | impl FileSystemSchemaRegistryBackend {
    | ------------------------------------ associated items in this implementation
30  |     pub fn new(
    |            ^^^
...
42  |     async fn ensure_directories(&self) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^^^^^^
...
64  |     async fn write_schema_version(&self, schema_version: &SchemaVersion) -> SchemaResult<()> {
    |              ^^^^^^^^^^^^^^^^^^^^
...
120 |     async fn load_subject_versions(&self, subject: &str) -> SchemaResult<Vec<SchemaVersion>> {
    |              ^^^^^^^^^^^^^^^^^^^^^
...
144 |     async fn get_next_id(&self) -> SchemaResult<u32> {
    |              ^^^^^^^^^^^

warning: struct `SchemaVersion` is never constructed
  --> src/ferris/schema/server/backends/memory.rs:18:12
   |
18 | pub struct SchemaVersion {
   |            ^^^^^^^^^^^^^

warning: struct `InMemorySchemaRegistryBackend` is never constructed
  --> src/ferris/schema/server/backends/memory.rs:27:12
   |
27 | pub struct InMemorySchemaRegistryBackend {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/schema/server/backends/memory.rs:37:12
   |
36 | impl InMemorySchemaRegistryBackend {
   | ---------------------------------- associated function in this implementation
37 |     pub fn new(initial_schemas: HashMap<String, Vec<SchemaVersion>>) -> Self {
   |            ^^^

warning: struct `PulsarSchemaRegistryBackend` is never constructed
  --> src/ferris/schema/server/backends/pulsar.rs:16:12
   |
16 | pub struct PulsarSchemaRegistryBackend {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: associated function `new` is never used
  --> src/ferris/schema/server/backends/pulsar.rs:24:12
   |
23 | impl PulsarSchemaRegistryBackend {
   | -------------------------------- associated function in this implementation
24 |     pub fn new(
   |            ^^^

warning: struct `SchemaEvolution` is never constructed
  --> src/ferris/schema/evolution.rs:14:12
   |
14 | pub struct SchemaEvolution {
   |            ^^^^^^^^^^^^^^^

warning: struct `EvolutionConfig` is never constructed
  --> src/ferris/schema/evolution.rs:23:12
   |
23 | pub struct EvolutionConfig {
   |            ^^^^^^^^^^^^^^^

warning: struct `SchemaDiff` is never constructed
  --> src/ferris/schema/evolution.rs:38:12
   |
38 | pub struct SchemaDiff {
   |            ^^^^^^^^^^

warning: struct `FieldModification` is never constructed
  --> src/ferris/schema/evolution.rs:48:12
   |
48 | pub struct FieldModification {
   |            ^^^^^^^^^^^^^^^^^

warning: enum `FieldChangeType` is never used
  --> src/ferris/schema/evolution.rs:58:10
   |
58 | pub enum FieldChangeType {
   |          ^^^^^^^^^^^^^^^

warning: struct `MigrationPlan` is never constructed
  --> src/ferris/schema/evolution.rs:73:12
   |
73 | pub struct MigrationPlan {
   |            ^^^^^^^^^^^^^

warning: enum `FieldMapping` is never used
  --> src/ferris/schema/evolution.rs:82:10
   |
82 | pub enum FieldMapping {
   |          ^^^^^^^^^^^^

warning: struct `FieldTransformation` is never constructed
   --> src/ferris/schema/evolution.rs:103:12
    |
103 | pub struct FieldTransformation {
    |            ^^^^^^^^^^^^^^^^^^^

warning: enum `TransformationOperation` is never used
   --> src/ferris/schema/evolution.rs:110:10
    |
110 | pub enum TransformationOperation {
    |          ^^^^^^^^^^^^^^^^^^^^^^^

warning: enum `TypeConverter` is never used
   --> src/ferris/schema/evolution.rs:131:10
    |
131 | pub enum TypeConverter {
    |          ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/evolution.rs:145:12
    |
143 | impl SchemaEvolution {
    | -------------------- associated items in this implementation
144 |     /// Create a new schema evolution manager with default configuration
145 |     pub fn new() -> Self {
    |            ^^^
...
153 |     pub fn with_config(config: EvolutionConfig) -> Self {
    |            ^^^^^^^^^^^
...
161 |     pub fn can_evolve(&self, from: &Schema, to: &Schema) -> bool {
    |            ^^^^^^^^^^
...
167 |     pub fn compute_diff(&self, from: &Schema, to: &Schema) -> SchemaDiff {
    |            ^^^^^^^^^^^^
...
228 |     pub fn create_migration_plan(&self, from: &Schema, to: &Schema) -> SchemaResult<MigrationPlan> {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
251 |     pub fn evolve_record(
    |            ^^^^^^^^^^^^^
...
301 |     pub fn check_compatibility(
    |            ^^^^^^^^^^^^^^^^^^^
...
331 |     fn analyze_field_modification(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
371 |     fn is_compatible_evolution(&self, diff: &SchemaDiff, mode: &CompatibilityMode) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^
...
383 |     fn is_compatible_diff(
    |        ^^^^^^^^^^^^^^^^^^
...
417 |     fn is_field_change_compatible(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
442 |     fn are_types_compatible(&self, from: &DataType, to: &DataType) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^
...
458 |     fn create_field_mappings(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
493 |     fn create_transformations(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
516 |     fn mapping_targets_field(&self, mapping: &FieldMapping, field_name: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
530 |     fn mapping_to_operation(&self, mapping: &FieldMapping) -> TransformationOperation {
    |        ^^^^^^^^^^^^^^^^^^^^
...
552 |     fn get_type_converter(&self, from: &DataType, to: &DataType) -> TypeConverter {
    |        ^^^^^^^^^^^^^^^^^^
...
566 |     fn convert_field_value(
    |        ^^^^^^^^^^^^^^^^^^^
...
616 |     fn get_default_value(&self, field_name: &str) -> FieldValue {
    |        ^^^^^^^^^^^^^^^^^
...
624 |     fn check_backward_compatibility(&self, diff: &SchemaDiff) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
652 |     fn check_forward_compatibility(&self, diff: &SchemaDiff) -> SchemaResult<()> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `SchemaRegistry` is never constructed
  --> src/ferris/schema/registry.rs:13:12
   |
13 | pub struct SchemaRegistry {
   |            ^^^^^^^^^^^^^^

warning: struct `RegistryConfig` is never constructed
  --> src/ferris/schema/registry.rs:24:12
   |
24 | pub struct RegistryConfig {
   |            ^^^^^^^^^^^^^^

warning: struct `CachedSchema` is never constructed
  --> src/ferris/schema/registry.rs:37:8
   |
37 | struct CachedSchema {
   |        ^^^^^^^^^^^^

warning: trait `SchemaProvider` is never used
  --> src/ferris/schema/registry.rs:46:11
   |
46 | pub trait SchemaProvider: Send + Sync {
   |           ^^^^^^^^^^^^^^

warning: struct `ProviderMetadata` is never constructed
  --> src/ferris/schema/registry.rs:59:12
   |
59 | pub struct ProviderMetadata {
   |            ^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/schema/registry.rs:74:12
    |
72  | impl SchemaRegistry {
    | ------------------- associated items in this implementation
73  |     /// Create a new schema registry with default configuration
74  |     pub fn new() -> Self {
    |            ^^^
...
83  |     pub fn with_config(config: RegistryConfig) -> Self {
    |            ^^^^^^^^^^^
...
92  |     pub fn register_provider(&mut self, scheme: &str, provider: Arc<dyn SchemaProvider>) {
    |            ^^^^^^^^^^^^^^^^^
...
97  |     pub async fn discover(&self, source_uri: &str) -> SchemaResult<Schema> {
    |                  ^^^^^^^^
...
125 |     pub async fn get_schema(&self, source_uri: &str) -> SchemaResult<Schema> {
    |                  ^^^^^^^^^^
...
139 |     pub async fn cache_schema(&self, source_uri: &str, schema: Schema) {
    |                  ^^^^^^^^^^^^
...
158 |     pub async fn invalidate_cache(&self, source_uri: &str) {
    |                  ^^^^^^^^^^^^^^^^
...
164 |     pub async fn clear_cache(&self) {
    |                  ^^^^^^^^^^^
...
170 |     pub async fn cache_stats(&self) -> CacheStats {
    |                  ^^^^^^^^^^^
...
198 |     pub fn list_providers(&self) -> Vec<(String, ProviderMetadata)> {
    |            ^^^^^^^^^^^^^^
...
206 |     pub fn validate_schema(&self, schema: &Schema) -> SchemaResult<()> {
    |            ^^^^^^^^^^^^^^^
...
233 |     async fn get_cached_schema(&self, source_uri: &str) -> Option<CachedSchema> {
    |              ^^^^^^^^^^^^^^^^^
...
251 |     fn extract_scheme(&self, uri: &str) -> SchemaResult<String> {
    |        ^^^^^^^^^^^^^^
...
261 |     async fn evict_expired_entries(&self, cache: &mut HashMap<String, CachedSchema>) {
    |              ^^^^^^^^^^^^^^^^^^^^^

warning: struct `CacheStats` is never constructed
   --> src/ferris/schema/registry.rs:299:12
    |
299 | pub struct CacheStats {
    |            ^^^^^^^^^^

warning: multiple variants are never constructed
  --> src/ferris/serialization/error.rs:9:5
   |
7  | pub enum SerializationError {
   |          ------------------ variants in this enum
8  |     // Legacy string-only variants (kept for backward compatibility)
9  |     SerializationFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^
10 |     DeserializationFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^^^
11 |     FormatConversionFailed(String),
   |     ^^^^^^^^^^^^^^^^^^^^^^
12 |     UnsupportedType(String),
   |     ^^^^^^^^^^^^^^^
13 |     SchemaError(String),
   |     ^^^^^^^^^^^
...
22 |     AvroError {
   |     ^^^^^^^^^
...
27 |     ProtobufError {
   |     ^^^^^^^^^^^^^
...
32 |     EncodingError {
   |     ^^^^^^^^^^^^^
...
37 |     SchemaValidationError {
   |     ^^^^^^^^^^^^^^^^^^^^^
...
42 |     TypeConversionError {
   |     ^^^^^^^^^^^^^^^^^^^
...
50 |     JsonSerializationFailed(Box<dyn std::error::Error + Send + Sync>),
   |     ^^^^^^^^^^^^^^^^^^^^^^^
   |
   = note: `SerializationError` has a derived impl for the trait `Debug`, but this is intentionally ignored during dead code analysis

warning: enum `EmitMode` is never used
  --> src/ferris/sql/ast.rs:60:10
   |
60 | pub enum EmitMode {
   |          ^^^^^^^^

warning: enum `StreamingQuery` is never used
  --> src/ferris/sql/ast.rs:98:10
   |
98 | pub enum StreamingQuery {
   |          ^^^^^^^^^^^^^^

warning: enum `InsertSource` is never used
   --> src/ferris/sql/ast.rs:330:10
    |
330 | pub enum InsertSource {
    |          ^^^^^^^^^^^^

warning: enum `DeploymentStrategy` is never used
   --> src/ferris/sql/ast.rs:348:10
    |
348 | pub enum DeploymentStrategy {
    |          ^^^^^^^^^^^^^^^^^^

warning: enum `ShowResourceType` is never used
   --> src/ferris/sql/ast.rs:383:10
    |
383 | pub enum ShowResourceType {
    |          ^^^^^^^^^^^^^^^^

warning: enum `SelectField` is never used
   --> src/ferris/sql/ast.rs:412:10
    |
412 | pub enum SelectField {
    |          ^^^^^^^^^^^

warning: enum `StreamSource` is never used
   --> src/ferris/sql/ast.rs:425:10
    |
425 | pub enum StreamSource {
    |          ^^^^^^^^^^^^

warning: struct `JoinClause` is never constructed
   --> src/ferris/sql/ast.rs:438:12
    |
438 | pub struct JoinClause {
    |            ^^^^^^^^^^

warning: enum `JoinType` is never used
   --> src/ferris/sql/ast.rs:453:10
    |
453 | pub enum JoinType {
    |          ^^^^^^^^

warning: struct `JoinWindow` is never constructed
   --> src/ferris/sql/ast.rs:466:12
    |
466 | pub struct JoinWindow {
    |            ^^^^^^^^^^

warning: enum `WindowSpec` is never used
   --> src/ferris/sql/ast.rs:475:10
    |
475 | pub enum WindowSpec {
    |          ^^^^^^^^^^

warning: struct `OrderByExpr` is never constructed
   --> src/ferris/sql/ast.rs:496:12
    |
496 | pub struct OrderByExpr {
    |            ^^^^^^^^^^^

warning: enum `OrderDirection` is never used
   --> src/ferris/sql/ast.rs:503:10
    |
503 | pub enum OrderDirection {
    |          ^^^^^^^^^^^^^^

warning: struct `OverClause` is never constructed
   --> src/ferris/sql/ast.rs:510:12
    |
510 | pub struct OverClause {
    |            ^^^^^^^^^^

warning: struct `WindowFrame` is never constructed
   --> src/ferris/sql/ast.rs:521:12
    |
521 | pub struct WindowFrame {
    |            ^^^^^^^^^^^

warning: enum `FrameType` is never used
   --> src/ferris/sql/ast.rs:532:10
    |
532 | pub enum FrameType {
    |          ^^^^^^^^^

warning: enum `FrameBound` is never used
   --> src/ferris/sql/ast.rs:539:10
    |
539 | pub enum FrameBound {
    |          ^^^^^^^^^^

warning: enum `Expr` is never used
   --> src/ferris/sql/ast.rs:549:10
    |
549 | pub enum Expr {
    |          ^^^^

warning: enum `SubqueryType` is never used
   --> src/ferris/sql/ast.rs:593:10
    |
593 | pub enum SubqueryType {
    |          ^^^^^^^^^^^^

warning: enum `LiteralValue` is never used
   --> src/ferris/sql/ast.rs:612:10
    |
612 | pub enum LiteralValue {
    |          ^^^^^^^^^^^^

warning: enum `TimeUnit` is never used
   --> src/ferris/sql/ast.rs:629:10
    |
629 | pub enum TimeUnit {
    |          ^^^^^^^^

warning: enum `BinaryOperator` is never used
   --> src/ferris/sql/ast.rs:639:10
    |
639 | pub enum BinaryOperator {
    |          ^^^^^^^^^^^^^^

warning: enum `UnaryOperator` is never used
   --> src/ferris/sql/ast.rs:671:10
    |
671 | pub enum UnaryOperator {
    |          ^^^^^^^^^^^^^

warning: struct `ColumnDef` is never constructed
   --> src/ferris/sql/ast.rs:690:12
    |
690 | pub struct ColumnDef {
    |            ^^^^^^^^^

warning: enum `DataType` is never used
   --> src/ferris/sql/ast.rs:699:10
    |
699 | pub enum DataType {
    |          ^^^^^^^^

warning: struct `StructField` is never constructed
   --> src/ferris/sql/ast.rs:717:12
    |
717 | pub struct StructField {
    |            ^^^^^^^^^^^

warning: struct `IntoClause` is never constructed
   --> src/ferris/sql/ast.rs:725:12
    |
725 | pub struct IntoClause {
    |            ^^^^^^^^^^

warning: struct `ConfigProperties` is never constructed
   --> src/ferris/sql/ast.rs:734:12
    |
734 | pub struct ConfigProperties {
    |            ^^^^^^^^^^^^^^^^

warning: struct `ConnectionString` is never constructed
  --> src/ferris/sql/config/connection_string.rs:29:12
   |
29 | pub struct ConnectionString {
   |            ^^^^^^^^^^^^^^^^

warning: struct `HostPort` is never constructed
  --> src/ferris/sql/config/connection_string.rs:54:12
   |
54 | pub struct HostPort {
   |            ^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/connection_string.rs:102:12
    |
81  | impl ConnectionString {
    | --------------------- associated items in this implementation
...
102 |     pub fn parse(uri: &str) -> Result<Self, ParseError> {
    |            ^^^^^
...
181 |     fn parse_hosts(host_str: &str, scheme: &str) -> Result<Vec<HostPort>, ParseError> {
    |        ^^^^^^^^^^^
...
235 |     fn parse_query(query_str: &str) -> Result<HashMap<String, String>, ParseError> {
    |        ^^^^^^^^^^^
...
267 |     fn url_decode(s: &str) -> Result<String, ()> {
    |        ^^^^^^^^^^
...
289 |     pub fn components(&self) -> UriComponents {
    |            ^^^^^^^^^^
...
326 |     pub fn validate(&self) -> Result<(), ParseError> {
    |            ^^^^^^^^
...
338 |     fn validate_kafka(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^
...
358 |     fn validate_s3(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^
...
369 |     fn validate_file(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^
...
380 |     fn validate_postgresql(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^^^^^^
...
391 |     fn validate_clickhouse(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^^^^^^^
...
402 |     fn validate_http(&self) -> Result<(), ParseError> {
    |        ^^^^^^^^^^^^^
...
414 |     pub fn to_uri(&self) -> String {
    |            ^^^^^^

warning: enum `ConfigSource` is never used
  --> src/ferris/sql/config/environment.rs:24:10
   |
24 | pub enum ConfigSource {
   |          ^^^^^^^^^^^^

warning: struct `DataSourceConfig` is never constructed
  --> src/ferris/sql/config/types.rs:11:12
   |
11 | pub struct DataSourceConfig {
   |            ^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/types.rs:42:12
    |
40  | impl DataSourceConfig {
    | --------------------- associated items in this implementation
41  |     /// Create new configuration with scheme
42  |     pub fn new(scheme: &str) -> Self {
    |            ^^^
...
57  |     pub fn from_uri(uri: &str) -> Result<Self, ParseError> {
    |            ^^^^^^^^
...
64  |     pub fn to_uri(&self) -> String {
    |            ^^^^^^
...
94  |     pub fn get_parameter(&self, key: &str) -> Option<&String> {
    |            ^^^^^^^^^^^^^
...
99  |     pub fn get_parameter_or(&self, key: &str, default: &str) -> String {
    |            ^^^^^^^^^^^^^^^^
...
107 |     pub fn get_bool_parameter(&self, key: &str) -> Option<bool> {
    |            ^^^^^^^^^^^^^^^^^^
...
118 |     pub fn get_int_parameter(&self, key: &str) -> Option<i64> {
    |            ^^^^^^^^^^^^^^^^^
...
123 |     pub fn set_parameter<K: Into<String>, V: Into<String>>(&mut self, key: K, value: V) {
    |            ^^^^^^^^^^^^^
...
129 |     pub fn remove_parameter(&mut self, key: &str) -> Option<String> {
    |            ^^^^^^^^^^^^^^^^
...
138 |     pub fn is_valid(&self) -> bool {
    |            ^^^^^^^^
...
143 |     pub fn mark_validated(&mut self) {
    |            ^^^^^^^^^^^^^^
...
148 |     pub fn clear_validation(&mut self) {
    |            ^^^^^^^^^^^^^^^^

warning: struct `WithClauseParser` is never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:14:12
   |
14 | pub struct WithClauseParser {
   |            ^^^^^^^^^^^^^^^^

warning: struct `ConfigKeySchema` is never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:23:12
   |
23 | pub struct ConfigKeySchema {
   |            ^^^^^^^^^^^^^^^

warning: enum `ConfigValueType` is never used
  --> src/ferris/sql/config/with_clause_parser.rs:42:10
   |
42 | pub enum ConfigValueType {
   |          ^^^^^^^^^^^^^^^

warning: struct `WithClauseConfig` is never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:56:12
   |
56 | pub struct WithClauseConfig {
   |            ^^^^^^^^^^^^^^^^

warning: enum `ConfigValue` is never used
  --> src/ferris/sql/config/with_clause_parser.rs:75:10
   |
75 | pub enum ConfigValue {
   |          ^^^^^^^^^^^

warning: struct `EnvironmentResolver` is never constructed
  --> src/ferris/sql/config/with_clause_parser.rs:88:12
   |
88 | pub struct EnvironmentResolver {
   |            ^^^^^^^^^^^^^^^^^^^

warning: type alias `WithClauseResult` is never used
  --> src/ferris/sql/config/with_clause_parser.rs:96:10
   |
96 | pub type WithClauseResult<T> = Result<T, WithClauseError>;
   |          ^^^^^^^^^^^^^^^^

warning: enum `WithClauseError` is never used
   --> src/ferris/sql/config/with_clause_parser.rs:100:10
    |
100 | pub enum WithClauseError {
    |          ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/with_clause_parser.rs:128:12
    |
126 | impl WithClauseParser {
    | --------------------- associated items in this implementation
127 |     /// Create a new WITH clause parser with default schema registry configurations
128 |     pub fn new() -> Self {
    |            ^^^
...
139 |     pub fn parse_with_clause(&self, with_clause: &str) -> WithClauseResult<WithClauseConfig> {
    |            ^^^^^^^^^^^^^^^^^
...
187 |     pub fn register_config_schema(&mut self, domain: &str, schemas: Vec<ConfigKeySchema>) {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
199 |     fn parse_raw_config(&self, with_clause: &str) -> WithClauseResult<HashMap<String, String>> {
    |        ^^^^^^^^^^^^^^^^
...
219 |     fn split_config_pairs(&self, content: &str) -> WithClauseResult<Vec<String>> {
    |        ^^^^^^^^^^^^^^^^^^
...
283 |     fn parse_config_pair(&self, pair: &str, position: usize) -> WithClauseResult<(String, String)> {
    |        ^^^^^^^^^^^^^^^^^
...
312 |     fn resolve_environment_variables(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
327 |     fn validate_config(
    |        ^^^^^^^^^^^^^^^
...
377 |     fn validate_value(
    |        ^^^^^^^^^^^^^^
...
460 |     fn parse_duration(&self, duration_str: &str) -> Result<Duration, std::num::ParseIntError> {
    |        ^^^^^^^^^^^^^^
...
499 |     fn suggest_similar_keys(&self, key: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
514 |     fn levenshtein_distance(&self, a: &str, b: &str) -> usize {
    |        ^^^^^^^^^^^^^^^^^^^^
...
557 |     fn has_schema_registry_config(&self, config: &HashMap<String, String>) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
562 |     fn has_cache_config(&self, config: &HashMap<String, String>) -> bool {
    |        ^^^^^^^^^^^^^^^^
...
567 |     fn has_data_source_config(&self, config: &HashMap<String, String>) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
574 |     fn has_batch_config(&self, config: &HashMap<String, String>) -> bool {
    |        ^^^^^^^^^^^^^^^^
...
581 |     fn parse_schema_registry_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
632 |     fn parse_cache_config(
    |        ^^^^^^^^^^^^^^^^^^
...
694 |     fn parse_batch_config(
    |        ^^^^^^^^^^^^^^^^^^
...
755 |     fn parse_batch_strategy(
    |        ^^^^^^^^^^^^^^^^^^^^
...
844 |     fn parse_data_source_config(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^
...
854 |     fn parse_custom_config(
    |        ^^^^^^^^^^^^^^^^^^^
...
890 |     fn parse_boolean(&self, value: &str) -> bool {
    |        ^^^^^^^^^^^^^
...
898 |     fn try_parse_boolean(&self, value: &str) -> Result<bool, ()> {
    |        ^^^^^^^^^^^^^^^^^
...
907 |     fn register_default_schema(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new` and `resolve` are never used
    --> src/ferris/sql/config/with_clause_parser.rs:1352:12
     |
1350 | impl EnvironmentResolver {
     | ------------------------ associated items in this implementation
1351 |     /// Create a new environment resolver
1352 |     pub fn new() -> Self {
     |            ^^^
...
1360 |     pub fn resolve(&self, value: &str) -> WithClauseResult<String> {
     |            ^^^^^^^

warning: struct `YamlConfigLoader` is never constructed
  --> src/ferris/sql/config/yaml_loader.rs:41:12
   |
41 | pub struct YamlConfigLoader {
   |            ^^^^^^^^^^^^^^^^

warning: enum `YamlConfigError` is never used
  --> src/ferris/sql/config/yaml_loader.rs:84:10
   |
84 | pub enum YamlConfigError {
   |          ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/config/yaml_loader.rs:112:12
    |
110 | impl YamlConfigLoader {
    | --------------------- associated items in this implementation
111 |     /// Create a new YAML config loader
112 |     pub fn new<P: AsRef<Path>>(base_dir: P) -> Self {
    |            ^^^
...
121 |     pub fn load_config<P: AsRef<Path>>(
    |            ^^^^^^^^^^^
...
136 |     fn load_config_internal(&mut self, path: &Path) -> Result<ResolvedYamlConfig, YamlConfigError> {
    |        ^^^^^^^^^^^^^^^^^^^^
...
174 |     fn load_raw_config(&self, path: &Path) -> Result<RawYamlConfig, YamlConfigError> {
    |        ^^^^^^^^^^^^^^^
...
187 |     fn resolve_extends(
    |        ^^^^^^^^^^^^^^^
...
222 |     fn resolve_extends_path(
    |        ^^^^^^^^^^^^^^^^^^^^
...
243 |     fn resolve_path(&self, path: &Path) -> Result<PathBuf, YamlConfigError> {
    |        ^^^^^^^^^^^^
...
252 |     fn merge_configs(
    |        ^^^^^^^^^^^^^
...
284 |     pub fn clear_cache(&mut self) {
    |            ^^^^^^^^^^^
...
289 |     pub fn cache_stats(&self) -> (usize, usize) {
    |            ^^^^^^^^^^^

warning: multiple variants are never constructed
   --> src/ferris/sql/error.rs:137:5
    |
132 | pub enum SqlError {
    |          -------- variants in this enum
...
137 |     ParseError {
    |     ^^^^^^^^^^
...
148 |     SchemaError {
    |     ^^^^^^^^^^^
...
170 |     TypeError {
    |     ^^^^^^^^^
...
183 |     StreamError {
    |     ^^^^^^^^^^^
...
194 |     WindowError {
    |     ^^^^^^^^^^^
...
205 |     ResourceError {
    |     ^^^^^^^^^^^^^
...
216 |     TableNotFound {
    |     ^^^^^^^^^^^^^
...
225 |     ConfigurationError {
    |     ^^^^^^^^^^^^^^^^^^
    |
    = note: `SqlError` has derived impls for the traits `Clone` and `Debug`, but these are intentionally ignored during dead code analysis

warning: multiple associated functions are never used
   --> src/ferris/sql/error.rs:303:12
    |
301 | impl SqlError {
    | ------------- associated functions in this implementation
302 |     /// Create a parse error with position and optional SQL text for enhanced reporting
303 |     pub fn parse_error(message: impl Into<String>, position: Option<usize>) -> Self {
    |            ^^^^^^^^^^^
...
311 |     pub fn parse_error_with_context(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
336 |     fn calculate_line_column(text: &str, position: usize) -> (usize, usize) {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
356 |     fn extract_snippet(text: &str, position: usize, context_chars: usize) -> String {
    |        ^^^^^^^^^^^^^^^
...
414 |     fn enhance_parse_error_message(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
436 |     pub fn schema_error(message: impl Into<String>, column: Option<String>) -> Self {
    |            ^^^^^^^^^^^^
...
444 |     pub fn execution_error(message: impl Into<String>, query: Option<String>) -> Self {
    |            ^^^^^^^^^^^^^^^
...
452 |     pub fn type_error(
    |            ^^^^^^^^^^
...
465 |     pub fn stream_error(stream_name: impl Into<String>, message: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^
...
473 |     pub fn window_error(message: impl Into<String>, window_type: Option<String>) -> Self {
    |            ^^^^^^^^^^^^
...
481 |     pub fn resource_error(resource: impl Into<String>, message: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^
...
489 |     pub fn unknown_function_error(function_name: impl Into<String>) -> Self {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
508 |     fn suggest_similar_functions(unknown_func: &str) -> Vec<String> {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
620 |     fn is_similar_string(s1: &str, s2: &str) -> bool {
    |        ^^^^^^^^^^^^^^^^^

warning: type alias `RecoveryResult` is never used
  --> src/ferris/sql/error/recovery.rs:51:10
   |
51 | pub type RecoveryResult<T> = Result<T, RecoveryError>;
   |          ^^^^^^^^^^^^^^

warning: enum `RecoveryError` is never used
  --> src/ferris/sql/error/recovery.rs:55:10
   |
55 | pub enum RecoveryError {
   |          ^^^^^^^^^^^^^

warning: enum `CircuitState` is never used
   --> src/ferris/sql/error/recovery.rs:154:10
    |
154 | pub enum CircuitState {
    |          ^^^^^^^^^^^^

warning: struct `CircuitBreakerConfig` is never constructed
   --> src/ferris/sql/error/recovery.rs:165:12
    |
165 | pub struct CircuitBreakerConfig {
    |            ^^^^^^^^^^^^^^^^^^^^

warning: struct `CircuitBreaker` is never constructed
   --> src/ferris/sql/error/recovery.rs:191:12
    |
191 | pub struct CircuitBreaker {
    |            ^^^^^^^^^^^^^^

warning: struct `CircuitBreakerMetrics` is never constructed
   --> src/ferris/sql/error/recovery.rs:203:12
    |
203 | pub struct CircuitBreakerMetrics {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/error/recovery.rs:215:12
    |
213 | impl CircuitBreaker {
    | ------------------- associated items in this implementation
214 |     /// Create a new circuit breaker with default configuration
215 |     pub fn new(name: String) -> Self {
    |            ^^^
...
220 |     pub fn with_config(name: String, config: CircuitBreakerConfig) -> Self {
    |            ^^^^^^^^^^^
...
233 |     pub fn builder() -> CircuitBreakerBuilder {
    |            ^^^^^^^
...
238 |     pub async fn call<F, T>(&self, operation: F) -> RecoveryResult<T>
    |                  ^^^^
...
326 |     pub async fn state(&self) -> CircuitState {
    |                  ^^^^^
...
331 |     pub async fn metrics(&self) -> CircuitBreakerMetrics {
    |                  ^^^^^^^
...
340 |     pub async fn reset(&self) {
    |                  ^^^^^
...
356 |     async fn record_success(&self) {
    |              ^^^^^^^^^^^^^^
...
386 |     async fn record_failure(&self, _error: String) {
    |              ^^^^^^^^^^^^^^
...
407 |     async fn transition_to_open(&self) {
    |              ^^^^^^^^^^^^^^^^^^
...
417 |     async fn transition_to_half_open(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^^^^
...
430 |     async fn transition_to_closed(&self) {
    |              ^^^^^^^^^^^^^^^^^^^^

warning: struct `CircuitBreakerBuilder` is never constructed
   --> src/ferris/sql/error/recovery.rs:445:12
    |
445 | pub struct CircuitBreakerBuilder {
    |            ^^^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/error/recovery.rs:455:8
    |
454 | impl CircuitBreakerBuilder {
    | -------------------------- associated items in this implementation
455 |     fn new() -> Self {
    |        ^^^
...
467 |     pub fn name(mut self, name: String) -> Self {
    |            ^^^^
...
472 |     pub fn failure_threshold(mut self, threshold: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
477 |     pub fn recovery_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
482 |     pub fn success_threshold(mut self, threshold: u32) -> Self {
    |            ^^^^^^^^^^^^^^^^^
...
487 |     pub fn request_timeout(mut self, timeout: Duration) -> Self {
    |            ^^^^^^^^^^^^^^^
...
492 |     pub fn enable_metrics(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^^^^
...
497 |     pub fn build(self) -> CircuitBreaker {
    |            ^^^^^

warning: struct `RetryPolicy` is never constructed
   --> src/ferris/sql/error/recovery.rs:513:12
    |
513 | pub struct RetryPolicy {
    |            ^^^^^^^^^^^

warning: enum `BackoffStrategy` is never used
   --> src/ferris/sql/error/recovery.rs:530:10
    |
530 | pub enum BackoffStrategy {
    |          ^^^^^^^^^^^^^^^

warning: enum `RetryCondition` is never used
   --> src/ferris/sql/error/recovery.rs:541:10
    |
541 | pub enum RetryCondition {
    |          ^^^^^^^^^^^^^^

warning: associated items `exponential_backoff`, `fixed_delay`, `execute`, `should_retry`, `calculate_next_delay`, and `add_jitter` are never used
   --> src/ferris/sql/error/recovery.rs:554:12
    |
552 | impl RetryPolicy {
    | ---------------- associated items in this implementation
553 |     /// Create exponential backoff retry policy
554 |     pub fn exponential_backoff() -> RetryPolicyBuilder {
    |            ^^^^^^^^^^^^^^^^^^^
...
559 |     pub fn fixed_delay() -> RetryPolicyBuilder {
    |            ^^^^^^^^^^^
...
564 |     pub async fn execute<F, T>(&self, operation: F) -> RecoveryResult<T>
    |                  ^^^^^^^
...
602 |     fn should_retry(&self, error: &RecoveryError) -> bool {
    |        ^^^^^^^^^^^^
...
625 |     fn calculate_next_delay(&self, current_delay: Duration, _attempt: u32) -> Duration {
    |        ^^^^^^^^^^^^^^^^^^^^
...
637 |     fn add_jitter(&self, delay: Duration) -> Duration {
    |        ^^^^^^^^^^

warning: struct `RetryPolicyBuilder` is never constructed
   --> src/ferris/sql/error/recovery.rs:646:12
    |
646 | pub struct RetryPolicyBuilder {
    |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/error/recovery.rs:656:8
    |
655 | impl RetryPolicyBuilder {
    | ----------------------- associated items in this implementation
656 |     fn new() -> Self {
    |        ^^^
...
667 |     pub fn max_attempts(mut self, attempts: u32) -> Self {
    |            ^^^^^^^^^^^^
...
672 |     pub fn initial_delay(mut self, delay: Duration) -> Self {
    |            ^^^^^^^^^^^^^
...
677 |     pub fn max_delay(mut self, delay: Duration) -> Self {
    |            ^^^^^^^^^
...
682 |     pub fn backoff_strategy(mut self, strategy: BackoffStrategy) -> Self {
    |            ^^^^^^^^^^^^^^^^
...
687 |     pub fn retry_condition(mut self, condition: RetryCondition) -> Self {
    |            ^^^^^^^^^^^^^^^
...
692 |     pub fn enable_jitter(mut self, enable: bool) -> Self {
    |            ^^^^^^^^^^^^^
...
697 |     pub fn build(self) -> RetryPolicy {
    |            ^^^^^

warning: struct `DeadLetterQueue` is never constructed
   --> src/ferris/sql/error/recovery.rs:710:12
    |
710 | pub struct DeadLetterQueue {
    |            ^^^^^^^^^^^^^^^

warning: struct `DeadLetterConfig` is never constructed
   --> src/ferris/sql/error/recovery.rs:719:12
    |
719 | pub struct DeadLetterConfig {
    |            ^^^^^^^^^^^^^^^^

warning: struct `FailedMessage` is never constructed
   --> src/ferris/sql/error/recovery.rs:746:12
    |
746 | pub struct FailedMessage {
    |            ^^^^^^^^^^^^^

warning: struct `DeadLetterMetrics` is never constructed
   --> src/ferris/sql/error/recovery.rs:758:12
    |
758 | pub struct DeadLetterMetrics {
    |            ^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/error/recovery.rs:768:18
    |
766 | impl DeadLetterQueue {
    | -------------------- associated items in this implementation
767 |     /// Create a new dead letter queue
768 |     pub async fn new(name: &str) -> RecoveryResult<Self> {
    |                  ^^^
...
778 |     pub async fn with_config(name: &str, config: DeadLetterConfig) -> RecoveryResult<Self> {
    |                  ^^^^^^^^^^^
...
788 |     pub async fn enqueue(&self, message: FailedMessage) -> RecoveryResult<()> {
    |                  ^^^^^^^
...
810 |     pub async fn dequeue(&self, count: usize) -> RecoveryResult<Vec<FailedMessage>> {
    |                  ^^^^^^^
...
826 |     pub async fn metrics(&self) -> DeadLetterMetrics {
    |                  ^^^^^^^
...
835 |     pub async fn maintenance(&self) -> RecoveryResult<usize> {
    |                  ^^^^^^^^^^^
...
855 |     pub async fn clear(&self) -> RecoveryResult<usize> {
    |                  ^^^^^

warning: struct `HealthMonitor` is never constructed
   --> src/ferris/sql/error/recovery.rs:871:12
    |
871 | pub struct HealthMonitor {
    |            ^^^^^^^^^^^^^

warning: struct `HealthConfig` is never constructed
   --> src/ferris/sql/error/recovery.rs:879:12
    |
879 | pub struct HealthConfig {
    |            ^^^^^^^^^^^^

warning: struct `ComponentHealth` is never constructed
   --> src/ferris/sql/error/recovery.rs:903:12
    |
903 | pub struct ComponentHealth {
    |            ^^^^^^^^^^^^^^^

warning: enum `HealthStatus` is never used
   --> src/ferris/sql/error/recovery.rs:913:10
    |
913 | pub enum HealthStatus {
    |          ^^^^^^^^^^^^

warning: struct `HealthMetrics` is never constructed
   --> src/ferris/sql/error/recovery.rs:922:12
    |
922 | pub struct HealthMetrics {
    |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
    --> src/ferris/sql/error/recovery.rs:933:12
     |
931  | impl HealthMonitor {
     | ------------------ associated items in this implementation
932  |     /// Create a new health monitor
933  |     pub fn new() -> Self {
     |            ^^^
...
938  |     pub fn with_config(config: HealthConfig) -> Self {
     |            ^^^^^^^^^^^
...
947  |     pub async fn register_component(&self, name: String) {
     |                  ^^^^^^^^^^^^^^^^^^
...
962  |     pub async fn update_health(
     |                  ^^^^^^^^^^^^^
...
983  |     pub async fn overall_health(&self) -> HealthStatus {
     |                  ^^^^^^^^^^^^^^
...
1010 |     pub async fn component_health(&self, component: &str) -> Option<ComponentHealth> {
     |                  ^^^^^^^^^^^^^^^^
...
1016 |     pub async fn metrics(&self) -> HealthMetrics {
     |                  ^^^^^^^

warning: trait `DurationExt` is never used
    --> src/ferris/sql/error/recovery.rs:1032:7
     |
1032 | trait DurationExt {
     |       ^^^^^^^^^^^

warning: enum `JoinStrategy` is never used
  --> src/ferris/sql/execution/algorithms/hash_join.rs:19:10
   |
19 | pub enum JoinStrategy {
   |          ^^^^^^^^^^^^

warning: struct `JoinStatistics` is never constructed
  --> src/ferris/sql/execution/algorithms/hash_join.rs:30:12
   |
30 | pub struct JoinStatistics {
   |            ^^^^^^^^^^^^^^

warning: methods `estimate_memory_usage` and `select_strategy` are never used
  --> src/ferris/sql/execution/algorithms/hash_join.rs:43:12
   |
41 | impl JoinStatistics {
   | ------------------- methods in this implementation
42 |     /// Estimate memory required for hash join
43 |     pub fn estimate_memory_usage(&self) -> usize {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
51 |     pub fn select_strategy(&self) -> JoinStrategy {
   |            ^^^^^^^^^^^^^^^

warning: struct `HashJoinTable` is never constructed
  --> src/ferris/sql/execution/algorithms/hash_join.rs:73:12
   |
73 | pub struct HashJoinTable {
   |            ^^^^^^^^^^^^^

warning: associated items `new`, `build_from_records`, `insert_record`, `compute_hash_key`, `probe`, and `memory_usage` are never used
   --> src/ferris/sql/execution/algorithms/hash_join.rs:84:12
    |
82  | impl HashJoinTable {
    | ------------------ associated items in this implementation
83  |     /// Create new hash join table
84  |     pub fn new(key_exprs: Vec<Expr>) -> Self {
    |            ^^^
...
93  |     pub fn build_from_records(
    |            ^^^^^^^^^^^^^^^^^^
...
105 |     pub fn insert_record(
    |            ^^^^^^^^^^^^^
...
117 |     fn compute_hash_key(
    |        ^^^^^^^^^^^^^^^^
...
166 |     pub fn probe(
    |            ^^^^^
...
177 |     pub fn memory_usage(&self) -> usize {
    |            ^^^^^^^^^^^^

warning: struct `ExpressionEvaluator` is never constructed
  --> src/ferris/sql/execution/expression/evaluator.rs:16:12
   |
16 | pub struct ExpressionEvaluator;
   |            ^^^^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
    --> src/ferris/sql/execution/expression/evaluator.rs:23:12
     |
18   | impl ExpressionEvaluator {
     | ------------------------ associated functions in this implementation
...
23   |     pub fn evaluate_expression(expr: &Expr, record: &StreamRecord) -> Result<bool, SqlError> {
     |            ^^^^^^^^^^^^^^^^^^^
...
293  |     pub fn evaluate_expression_value(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
778  |     fn field_value_to_bool(value: &FieldValue) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
793  |     fn values_equal(left: &FieldValue, right: &FieldValue) -> bool {
     |        ^^^^^^^^^^^^
...
839  |     fn compare_values<F>(left: &FieldValue, right: &FieldValue, op: F) -> Result<bool, SqlError>
     |        ^^^^^^^^^^^^^^
...
869  |     fn match_pattern(text: &str, pattern: &str) -> bool {
     |        ^^^^^^^^^^^^^
...
882  |     pub fn evaluate_expression_with_subqueries<T: SubqueryExecutor>(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
921  |     pub fn evaluate_expression_value_with_subqueries<T: SubqueryExecutor>(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
1230 |     fn to_comparable_float(value: &FieldValue) -> Result<f64, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^

warning: struct `BuiltinFunctions` is never constructed
  --> src/ferris/sql/execution/expression/functions.rs:29:12
   |
29 | pub struct BuiltinFunctions;
   |            ^^^^^^^^^^^^^^^^

warning: multiple associated functions are never used
    --> src/ferris/sql/execution/expression/functions.rs:36:12
     |
31   | impl BuiltinFunctions {
     | --------------------- associated functions in this implementation
...
36   |     pub fn evaluate_function(func: &Expr, record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |            ^^^^^^^^^^^^^^^^^
...
47   |     pub fn evaluate_function_by_name(
     |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
156  |     fn evaluate_variance(args: &&[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
190  |     fn count_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
240  |     fn sum_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
250  |     fn avg_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
260  |     fn min_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
271  |     fn max_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
282  |     fn approx_count_distinct_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
300  |     fn first_value_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^
...
311  |     fn last_value_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
322  |     fn listagg_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
387  |     fn header_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
414  |     fn header_keys_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^
...
427  |     fn has_header_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
455  |     fn abs_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
474  |     fn round_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
511  |     fn ceil_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
530  |     fn floor_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
549  |     fn sqrt_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
586  |     fn power_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
615  |     fn mod_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
656  |     fn upper_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
674  |     fn lower_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
692  |     fn substring_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
738  |     fn replace_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
768  |     fn trim_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
786  |     fn ltrim_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
804  |     fn rtrim_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
822  |     fn length_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
840  |     fn split_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
867  |     fn join_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
913  |     fn json_extract_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
939  |     fn json_value_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
965  |     fn extract_json_value(json_string: &str, path: &str) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
977  |     fn cast_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
1001 |     fn timestamp_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^
...
1014 |     fn array_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
1024 |     fn struct_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
1060 |     fn map_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
1096 |     fn array_length_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
1127 |     fn concat_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
1155 |     fn coalesce_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1225 |     fn are_types_compatible(type1: &str, type2: &str) -> bool {
     |        ^^^^^^^^^^^^^^^^^^^^
...
1243 |     fn coerce_to_compatible_type(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^
...
1266 |     fn value_to_string(value: &FieldValue) -> String {
     |        ^^^^^^^^^^^^^^^
...
1319 |     fn array_contains_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^^
...
1387 |     fn values_equal(left: &FieldValue, right: &FieldValue) -> bool {
     |        ^^^^^^^^^^^^
...
1430 |     fn map_keys_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1476 |     fn nullif_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
1494 |     fn median_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
1514 |     fn map_values_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1564 |     fn extract_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1627 |     fn datediff_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1713 |     fn stddev_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^
...
1740 |     fn stddev_pop_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1760 |     fn var_pop_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^
...
1780 |     fn var_samp_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
1800 |     fn string_agg_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
1846 |     fn count_distinct_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^^
...
1865 |     fn validate_args_not_null(
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
1881 |     fn compare_values_for_min(left: &FieldValue, right: &FieldValue) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
1897 |     fn compare_values_for_max(left: &FieldValue, right: &FieldValue) -> Result<bool, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
1914 |     fn promote_numeric_types(values: &[FieldValue]) -> Vec<FieldValue> {
     |        ^^^^^^^^^^^^^^^^^^^^^
...
1932 |     fn left_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^
...
1954 |     fn right_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
1984 |     fn now_function(args: &[Expr], _record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^
...
1996 |     fn current_timestamp_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
2003 |     fn date_format_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^^
...
2039 |     fn from_unixtime_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^
...
2082 |     fn unix_timestamp_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^^
...
2115 |     fn position_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
2157 |     fn least_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^
...
2185 |     fn greatest_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^
...
2213 |     fn set_header_function(args: &[Expr], record: &StreamRecord) -> Result<FieldValue, SqlError> {
     |        ^^^^^^^^^^^^^^^^^^^
...
2251 |     fn remove_header_function(
     |        ^^^^^^^^^^^^^^^^^^^^^^

warning: struct `WindowFunctions` is never constructed
  --> src/ferris/sql/execution/expression/window_functions.rs:45:12
   |
45 | pub struct WindowFunctions;
   |            ^^^^^^^^^^^^^^^

warning: struct `WindowContext` is never constructed
  --> src/ferris/sql/execution/expression/window_functions.rs:49:12
   |
49 | pub struct WindowContext {
   |            ^^^^^^^^^^^^^

warning: multiple associated functions are never used
   --> src/ferris/sql/execution/expression/window_functions.rs:64:12
    |
60  | impl WindowFunctions {
    | -------------------- associated functions in this implementation
...
64  |     pub fn evaluate_window_function(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
99  |     fn create_window_context(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
151 |     fn sort_buffer_by_order(
    |        ^^^^^^^^^^^^^^^^^^^^
...
182 |     fn compare_field_values(a: &FieldValue, b: &FieldValue) -> std::cmp::Ordering {
    |        ^^^^^^^^^^^^^^^^^^^^
...
201 |     fn records_equal(a: &StreamRecord, b: &StreamRecord) -> bool {
    |        ^^^^^^^^^^^^^
...
206 |     fn calculate_partition_bounds(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
241 |     fn get_partition_key(
    |        ^^^^^^^^^^^^^^^^^
...
257 |     fn calculate_frame_bounds(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
281 |     fn evaluate_lag_function(
    |        ^^^^^^^^^^^^^^^^^^^^^
...
355 |     fn evaluate_lead_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
429 |     fn evaluate_row_number_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
452 |     fn evaluate_rank_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
483 |     fn evaluate_dense_rank_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
515 |     fn evaluate_first_value_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
544 |     fn evaluate_last_value_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
573 |     fn evaluate_nth_value_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
633 |     fn evaluate_percent_rank_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
668 |     fn evaluate_cume_dist_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
694 |     fn evaluate_ntile_function(
    |        ^^^^^^^^^^^^^^^^^^^^^^^

warning: struct `GroupByState` is never constructed
  --> src/ferris/sql/execution/internal.rs:18:12
   |
18 | pub struct GroupByState {
   |            ^^^^^^^^^^^^

warning: struct `GroupAccumulator` is never constructed
  --> src/ferris/sql/execution/internal.rs:70:12
   |
70 | pub struct GroupAccumulator {
   |            ^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/internal.rs:99:12
    |
97  | impl GroupAccumulator {
    | --------------------- associated items in this implementation
98  |     /// Create a new empty accumulator
99  |     pub fn new() -> Self {
    |            ^^^
...
117 |     pub fn increment_count(&mut self) {
    |            ^^^^^^^^^^^^^^^
...
122 |     pub fn add_non_null_count(&mut self, field_name: &str) {
    |            ^^^^^^^^^^^^^^^^^^
...
130 |     pub fn add_sum(&mut self, field_name: &str, value: f64) {
    |            ^^^^^^^
...
135 |     pub fn update_min(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
151 |     pub fn update_max(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
166 |     fn is_value_less_than(&self, left: &FieldValue, right: &FieldValue) -> bool {
    |        ^^^^^^^^^^^^^^^^^^
...
176 |     fn is_value_greater_than(&self, left: &FieldValue, right: &FieldValue) -> bool {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
186 |     pub fn set_sample_record(&mut self, record: StreamRecord) {
    |            ^^^^^^^^^^^^^^^^^
...
193 |     pub fn add_to_set(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^
...
202 |     pub fn add_to_approx_set(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^^^^
...
212 |     pub fn set_first_value(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^^
...
219 |     pub fn set_last_value(&mut self, field_name: &str, value: FieldValue) {
    |            ^^^^^^^^^^^^^^
...
224 |     pub fn add_value_for_stats(&mut self, field_name: &str, value: f64) {
    |            ^^^^^^^^^^^^^^^^^^^
...
232 |     pub fn add_to_string_agg(&mut self, field_name: &str, value: FieldValue, _delimiter: &str) {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `WindowState` is never constructed
   --> src/ferris/sql/execution/internal.rs:381:12
    |
381 | pub struct WindowState {
    |            ^^^^^^^^^^^

warning: struct `QueryPerformance` is never constructed
  --> src/ferris/sql/execution/performance/query_performance.rs:13:12
   |
13 | pub struct QueryPerformance {
   |            ^^^^^^^^^^^^^^^^

warning: associated items `new`, `records_per_second`, `bytes_per_second`, `processor_time_breakdown`, `summary`, and `is_efficient` are never used
  --> src/ferris/sql/execution/performance/query_performance.rs:36:12
   |
34 | impl QueryPerformance {
   | --------------------- associated items in this implementation
35 |     /// Create new query performance tracker
36 |     pub fn new(query_id: String, query_text: String) -> Self {
   |            ^^^
...
52 |     pub fn records_per_second(&self) -> f64 {
   |            ^^^^^^^^^^^^^^^^^^
...
61 |     pub fn bytes_per_second(&self) -> f64 {
   |            ^^^^^^^^^^^^^^^^
...
70 |     pub fn processor_time_breakdown(&self) -> std::collections::HashMap<String, f64> {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
85 |     pub fn summary(&self) -> String {
   |            ^^^^^^^
...
96 |     pub fn is_efficient(&self) -> bool {
   |            ^^^^^^^^^^^^

warning: struct `QueryTracker` is never constructed
  --> src/ferris/sql/execution/performance/query_tracker.rs:13:12
   |
13 | pub struct QueryTracker {
   |            ^^^^^^^^^^^^

warning: multiple associated items are never used
  --> src/ferris/sql/execution/performance/query_tracker.rs:24:12
   |
22 | impl QueryTracker {
   | ----------------- associated items in this implementation
23 |     /// Create new query tracker
24 |     pub fn new(query_id: String, query_text: String) -> Self {
   |            ^^^
...
33 |     pub fn start_processor(&mut self, processor_name: &str) {
   |            ^^^^^^^^^^^^^^^
...
42 |     pub fn finish_current_processor(&mut self) {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
56 |     pub fn update_memory_metrics(&mut self, metrics: MemoryMetrics) {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
61 |     pub fn add_records_processed(&mut self, count: u64) {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
66 |     pub fn add_bytes_processed(&mut self, bytes: u64) {
   |            ^^^^^^^^^^^^^^^^^^^
...
71 |     pub fn current_processor(&self) -> Option<&str> {
   |            ^^^^^^^^^^^^^^^^^
...
76 |     pub fn current_processor_elapsed(&self) -> Option<std::time::Duration> {
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
81 |     pub fn total_elapsed(&self) -> std::time::Duration {
   |            ^^^^^^^^^^^^^
...
86 |     pub fn is_tracking_processor(&self) -> bool {
   |            ^^^^^^^^^^^^^^^^^^^^^
...
91 |     pub fn finish(mut self) -> QueryPerformance {
   |            ^^^^^^

warning: struct `MemoryMetrics` is never constructed
  --> src/ferris/sql/execution/performance/metrics.rs:14:12
   |
14 | pub struct MemoryMetrics {
   |            ^^^^^^^^^^^^^

warning: associated items `new`, `merge`, and `memory_efficiency` are never used
  --> src/ferris/sql/execution/performance/metrics.rs:31:12
   |
29 | impl MemoryMetrics {
   | ------------------ associated items in this implementation
30 |     /// Create new empty memory metrics
31 |     pub fn new() -> Self {
   |            ^^^
...
36 |     pub fn merge(&mut self, other: &MemoryMetrics) {
   |            ^^^^^
...
46 |     pub fn memory_efficiency(&self, bytes_processed: u64) -> f64 {
   |            ^^^^^^^^^^^^^^^^^

warning: struct `ThroughputMetrics` is never constructed
  --> src/ferris/sql/execution/performance/metrics.rs:57:12
   |
57 | pub struct ThroughputMetrics {
   |            ^^^^^^^^^^^^^^^^^

warning: associated items `calculate` and `update_percentiles` are never used
  --> src/ferris/sql/execution/performance/metrics.rs:76:12
   |
74 | impl ThroughputMetrics {
   | ---------------------- associated items in this implementation
75 |     /// Calculate throughput from duration and counts
76 |     pub fn calculate(
   |            ^^^^^^^^^
...
97 |     pub fn update_percentiles(&mut self, latencies: &mut [Duration]) {
   |            ^^^^^^^^^^^^^^^^^^

warning: struct `ProcessorMetrics` is never constructed
   --> src/ferris/sql/execution/performance/metrics.rs:118:12
    |
118 | pub struct ProcessorMetrics {
    |            ^^^^^^^^^^^^^^^^

warning: associated items `new`, `efficiency`, `success_rate`, and `update` are never used
   --> src/ferris/sql/execution/performance/metrics.rs:135:12
    |
133 | impl ProcessorMetrics {
    | --------------------- associated items in this implementation
134 |     /// Create new processor metrics
135 |     pub fn new(processor_name: String) -> Self {
    |            ^^^
...
143 |     pub fn efficiency(&self) -> f64 {
    |            ^^^^^^^^^^
...
152 |     pub fn success_rate(&self) -> f64 {
    |            ^^^^^^^^^^^^
...
162 |     pub fn update(
    |            ^^^^^^

warning: struct `PerformanceMetrics` is never constructed
   --> src/ferris/sql/execution/performance/metrics.rs:183:12
    |
183 | pub struct PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `update_with_query`, `recalculate_throughput`, `top_processors_by_time`, `overall_efficiency`, and `memory_summary` are never used
   --> src/ferris/sql/execution/performance/metrics.rs:210:12
    |
208 | impl PerformanceMetrics {
    | ----------------------- associated items in this implementation
209 |     /// Create new performance metrics
210 |     pub fn new() -> Self {
    |            ^^^
...
224 |     pub fn update_with_query(&mut self, query_performance: &super::QueryPerformance) {
    |            ^^^^^^^^^^^^^^^^^
...
250 |     fn recalculate_throughput(&mut self) {
    |        ^^^^^^^^^^^^^^^^^^^^^^
...
260 |     pub fn top_processors_by_time(&self, limit: usize) -> Vec<&ProcessorMetrics> {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
267 |     pub fn overall_efficiency(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^^
...
277 |     pub fn memory_summary(&self) -> String {
    |            ^^^^^^^^^^^^^^

warning: struct `AtomicMetricsCollector` is never constructed
   --> src/ferris/sql/execution/performance/metrics.rs:291:12
    |
291 | pub struct AtomicMetricsCollector {
    |            ^^^^^^^^^^^^^^^^^^^^^^

warning: associated items `new`, `record_query`, `record_memory_allocation`, `snapshot`, and `reset` are never used
   --> src/ferris/sql/execution/performance/metrics.rs:308:12
    |
306 | impl AtomicMetricsCollector {
    | --------------------------- associated items in this implementation
307 |     /// Create new atomic metrics collector
308 |     pub fn new() -> Self {
    |            ^^^
...
320 |     pub fn record_query(&self, records: u64, bytes: u64, duration: Duration) {
    |            ^^^^^^^^^^^^
...
329 |     pub fn record_memory_allocation(&self, bytes: u64) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
342 |     pub fn snapshot(&self) -> PerformanceMetrics {
    |            ^^^^^^^^
...
372 |     pub fn reset(&self) {
    |            ^^^^^

warning: struct `PerformanceMonitor` is never constructed
  --> src/ferris/sql/execution/performance/monitor.rs:17:12
   |
17 | pub struct PerformanceMonitor {
   |            ^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/performance/monitor.rs:28:12
    |
26  | impl PerformanceMonitor {
    | ----------------------- associated items in this implementation
27  |     /// Create new performance monitor
28  |     pub fn new() -> Self {
    |            ^^^
...
33  |     pub fn with_config(max_history: usize, detailed_tracking: bool) -> Self {
    |            ^^^^^^^^^^^
...
42  |     pub fn start_query_tracking(&self, query_text: &str) -> QueryTracker {
    |            ^^^^^^^^^^^^^^^^^^^^
...
54  |     pub fn finish_query_tracking(&self, tracker: QueryTracker) -> QueryPerformance {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
66  |     pub fn get_current_metrics(&self) -> PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^^
...
71  |     pub fn get_window_statistics(&self, window_duration: Duration) -> Option<WindowStatistics> {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
76  |     pub fn get_statistics_summary(&self) -> StatisticsSummary {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
91  |     pub fn get_top_query_patterns(
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
99  |     pub fn get_slow_queries(&self, limit: usize) -> Vec<QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^
...
104 |     pub fn export_prometheus_metrics(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^
...
109 |     pub fn reset_statistics(&self) {
    |            ^^^^^^^^^^^^^^^^
...
114 |     pub fn health_check(&self) -> PerformanceHealth {
    |            ^^^^^^^^^^^^
...
174 |     pub fn get_performance_report(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
228 |     fn format_window_stats(&self, stats: Option<&WindowStatistics>) -> String {
    |        ^^^^^^^^^^^^^^^^^^^
...
249 |     fn format_query_patterns(
    |        ^^^^^^^^^^^^^^^^^^^^^

warning: struct `StatisticsSummary` is never constructed
   --> src/ferris/sql/execution/performance/monitor.rs:297:12
    |
297 | pub struct StatisticsSummary {
    |            ^^^^^^^^^^^^^^^^^

warning: enum `HealthStatus` is never used
   --> src/ferris/sql/execution/performance/monitor.rs:312:10
    |
312 | pub enum HealthStatus {
    |          ^^^^^^^^^^^^

warning: struct `PerformanceHealth` is never constructed
   --> src/ferris/sql/execution/performance/monitor.rs:323:12
    |
323 | pub struct PerformanceHealth {
    |            ^^^^^^^^^^^^^^^^^

warning: trait `MonitoredExecution` is never used
   --> src/ferris/sql/execution/performance/monitor.rs:335:11
    |
335 | pub trait MonitoredExecution<T> {
    |           ^^^^^^^^^^^^^^^^^^

warning: struct `QueryStatistics` is never constructed
  --> src/ferris/sql/execution/performance/statistics.rs:16:12
   |
16 | pub struct QueryStatistics {
   |            ^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/performance/statistics.rs:31:12
    |
29  | impl QueryStatistics {
    | -------------------- associated items in this implementation
30  |     /// Create new query statistics collector
31  |     pub fn new(max_history: usize) -> Self {
    |            ^^^
...
42  |     pub fn add_query_performance(&mut self, performance: QueryPerformance) {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
61  |     fn extract_query_pattern(&self, query_text: &str) -> String {
    |        ^^^^^^^^^^^^^^^^^^^^^
...
87  |     pub fn get_recent_queries(&self, limit: usize) -> Vec<&QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^^^
...
92  |     pub fn get_aggregated_metrics(&self) -> &PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
97  |     pub fn get_top_query_patterns(&self, limit: usize) -> Vec<(&String, &QueryPatternStats)> {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
104 |     pub fn get_window_statistics(&self, window_duration: Duration) -> WindowStatistics {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
157 |     pub fn get_slowest_queries(&self, limit: usize) -> Vec<&QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^^^^
...
164 |     pub fn get_memory_trend(&self, window_duration: Duration) -> MemoryTrend {
    |            ^^^^^^^^^^^^^^^^

warning: struct `QueryPatternStats` is never constructed
   --> src/ferris/sql/execution/performance/statistics.rs:201:12
    |
201 | pub struct QueryPatternStats {
    |            ^^^^^^^^^^^^^^^^^

warning: associated items `new`, `update`, `efficiency`, and `memory_efficiency` are never used
   --> src/ferris/sql/execution/performance/statistics.rs:230:12
    |
228 | impl QueryPatternStats {
    | ---------------------- associated items in this implementation
229 |     /// Create new query pattern statistics
230 |     pub fn new() -> Self {
    |            ^^^
...
246 |     pub fn update(&mut self, performance: &QueryPerformance) {
    |            ^^^^^^
...
264 |     pub fn efficiency(&self) -> f64 {
    |            ^^^^^^^^^^
...
273 |     pub fn memory_efficiency(&self) -> f64 {
    |            ^^^^^^^^^^^^^^^^^

warning: struct `WindowStatistics` is never constructed
   --> src/ferris/sql/execution/performance/statistics.rs:285:12
    |
285 | pub struct WindowStatistics {
    |            ^^^^^^^^^^^^^^^^

warning: struct `StatisticsCollector` is never constructed
   --> src/ferris/sql/execution/performance/statistics.rs:321:12
    |
321 | pub struct StatisticsCollector {
    |            ^^^^^^^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/performance/statistics.rs:330:12
    |
328 | impl StatisticsCollector {
    | ------------------------ associated items in this implementation
329 |     /// Create new statistics collector
330 |     pub fn new(max_history: usize) -> Self {
    |            ^^^
...
338 |     pub fn record_query_performance(&self, performance: QueryPerformance) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^
...
353 |     pub fn get_current_metrics(&self) -> PerformanceMetrics {
    |            ^^^^^^^^^^^^^^^^^^^
...
358 |     pub fn get_window_statistics(&self, window_duration: Duration) -> Option<WindowStatistics> {
    |            ^^^^^^^^^^^^^^^^^^^^^
...
366 |     pub fn get_top_query_patterns(&self, limit: usize) -> Vec<(String, QueryPatternStats)> {
    |            ^^^^^^^^^^^^^^^^^^^^^^
...
381 |     pub fn get_recent_slow_queries(&self, limit: usize) -> Vec<QueryPerformance> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
396 |     pub fn reset(&self) {
    |            ^^^^^
...
404 |     pub fn export_prometheus_metrics(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `percentile` is never used
   --> src/ferris/sql/execution/performance/statistics.rs:455:4
    |
455 | fn percentile(sorted_durations: &[Duration], percentile: f64) -> Duration {
    |    ^^^^^^^^^^

warning: struct `ProcessorContext` is never constructed
  --> src/ferris/sql/execution/processors/context.rs:21:12
   |
21 | pub struct ProcessorContext {
   |            ^^^^^^^^^^^^^^^^

warning: struct `WindowContext` is never constructed
  --> src/ferris/sql/execution/processors/context.rs:71:12
   |
71 | pub struct WindowContext {
   |            ^^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/processors/context.rs:82:12
    |
80  | impl ProcessorContext {
    | --------------------- associated items in this implementation
81  |     /// Create a new processor context with a query ID
82  |     pub fn new(_query_id: &str) -> Self {
    |            ^^^
...
105 |     pub fn new_with_sources(
    |            ^^^^^^^^^^^^^^^^
...
122 |     pub fn set_performance_monitor(&mut self, monitor: Arc<PerformanceMonitor>) {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
127 |     pub fn get_performance_monitor(&self) -> Option<&Arc<PerformanceMonitor>> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
132 |     pub fn set_metadata(&mut self, key: &str, value: &str) {
    |            ^^^^^^^^^^^^
...
137 |     pub fn get_metadata(&self, key: &str) -> Option<&String> {
    |            ^^^^^^^^^^^^
...
144 |     pub fn get_or_create_window_state(
    |            ^^^^^^^^^^^^^^^^^^^^^^^^^^
...
178 |     pub fn get_window_state(&self, query_id: &str) -> Option<&WindowState> {
    |            ^^^^^^^^^^^^^^^^
...
186 |     pub fn load_window_states(&mut self, states: Vec<(String, WindowState)>) {
    |            ^^^^^^^^^^^^^^^^^^
...
192 |     pub fn get_dirty_window_states(&self) -> Vec<(String, WindowState)> {
    |            ^^^^^^^^^^^^^^^^^^^^^^^
...
205 |     pub fn clear_dirty_flags(&mut self) {
    |            ^^^^^^^^^^^^^^^^^
...
212 |     pub fn add_reader(&mut self, source_name: &str, reader: Box<dyn DataReader>) {
    |            ^^^^^^^^^^
...
221 |     pub fn add_writer(&mut self, sink_name: &str, writer: Box<dyn DataWriter>) {
    |            ^^^^^^^^^^
...
230 |     pub async fn read_from(&mut self, source_name: &str) -> Result<Vec<StreamRecord>, SqlError> {
    |                  ^^^^^^^^^
...
246 |     pub async fn write_to(
    |                  ^^^^^^^^
...
269 |     pub async fn read(&mut self) -> Result<Vec<StreamRecord>, SqlError> {
    |                  ^^^^
...
281 |     pub async fn write(&mut self, record: StreamRecord) -> Result<(), SqlError> {
    |                  ^^^^^
...
293 |     pub fn set_active_reader(&mut self, source_name: &str) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
305 |     pub fn set_active_writer(&mut self, sink_name: &str) -> Result<(), SqlError> {
    |            ^^^^^^^^^^^^^^^^^
...
317 |     pub fn list_sources(&self) -> Vec<String> {
    |            ^^^^^^^^^^^^
...
322 |     pub fn list_sinks(&self) -> Vec<String> {
    |            ^^^^^^^^^^
...
327 |     pub async fn write_batch_to(
    |                  ^^^^^^^^^^^^^^
...
350 |     pub async fn commit_source(&mut self, source_name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^^
...
366 |     pub async fn commit_sink(&mut self, sink_name: &str) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^
...
382 |     pub async fn begin_reader_transaction(&mut self) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
412 |     pub async fn begin_writer_transaction(&mut self) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^^^^^^^^^^^^
...
442 |     pub async fn commit_writer(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^^
...
472 |     pub async fn abort_writer(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^
...
502 |     pub async fn abort_reader(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^^^^
...
532 |     pub async fn seek_source(
    |                  ^^^^^^^^^^^
...
560 |     pub fn get_source_position(&self, source_name: &str) -> Option<&SourceOffset> {
    |            ^^^^^^^^^^^^^^^^^^^
...
565 |     pub async fn flush_all(&mut self) -> Result<(), SqlError> {
    |                  ^^^^^^^^^
...
576 |     pub async fn has_more_data(&self, source_name: &str) -> Result<bool, SqlError> {
    |                  ^^^^^^^^^^^^^

warning: struct `JobProcessor` is never constructed
  --> src/ferris/sql/execution/processors/job.rs:15:12
   |
15 | pub struct JobProcessor;
   |            ^^^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/processors/job.rs:25:12
    |
23  | impl JobProcessor {
    | ----------------- associated items in this implementation
24  |     /// Create a new job processor instance
25  |     pub fn new() -> Self {
    |            ^^^
...
30  |     pub fn process_start_job(
    |            ^^^^^^^^^^^^^^^^^
...
78  |     pub fn process_stop_job(
    |            ^^^^^^^^^^^^^^^^
...
115 |     pub fn process_pause_job(
    |            ^^^^^^^^^^^^^^^^^
...
153 |     pub fn process_resume_job(
    |            ^^^^^^^^^^^^^^^^^^
...
191 |     pub fn process_deploy_job(
    |            ^^^^^^^^^^^^^^^^^^
...
262 |     pub fn process(
    |            ^^^^^^^

warning: struct `JoinContext` is never constructed
  --> src/ferris/sql/execution/processors/join_context.rs:13:12
   |
13 | pub struct JoinContext;
   |            ^^^^^^^^^^^

warning: associated items `new`, `get_right_record_with_context`, `get_right_record`, and `create_basic_fallback_record` are never used
  --> src/ferris/sql/execution/processors/join_context.rs:23:12
   |
21 | impl JoinContext {
   | ---------------- associated items in this implementation
22 |     /// Create a new JoinContext instance
23 |     pub fn new() -> Self {
   |            ^^^
...
28 |     pub fn get_right_record_with_context(
   |            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
...
59 |     pub fn get_right_record(
   |            ^^^^^^^^^^^^^^^^
...
70 |     fn create_basic_fallback_record(table_name: &str) -> Result<Option<StreamRecord>, SqlError> {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: enum `FieldValue` is never used
  --> src/ferris/sql/execution/types.rs:20:10
   |
20 | pub enum FieldValue {
   |          ^^^^^^^^^^

warning: multiple associated items are never used
   --> src/ferris/sql/execution/types.rs:54:12
    |
49  | impl FieldValue {
    | --------------- associated items in this implementation
...
54  |     pub fn type_name(&self) -> &'static str {
    |            ^^^^^^^^^
...
76  |     pub fn is_numeric(&self) -> bool {
    |            ^^^^^^^^^^
...
91  |     pub fn to_display_string(&self) -> String {
    |            ^^^^^^^^^^^^^^^^^
...
154 |     pub fn cast_to(self, target_type: &str) -> Result<FieldValue, SqlError> {
    |            ^^^^^^^
...
417 |     pub fn add(&self, other: &FieldValue) -> Result<FieldValue, SqlError> {
    |            ^^^
...
502 |     pub fn subtract(&self, other: &FieldValue) -> Result<FieldValue, SqlError> {
    |            ^^^^^^^^
...
580 |     pub fn multiply(&self, other: &FieldValue) -> Result<FieldValue, SqlError> {
    |            ^^^^^^^^
...
629 |     pub fn divide(&self, other: &FieldValue) -> Result<FieldValue, SqlError> {
    |            ^^^^^^
...
762 |     fn interval_to_millis(value: i64, unit: &TimeUnit) -> i64 {
    |        ^^^^^^^^^^^^^^^^^^
...
792 |     pub fn from_financial_f64(value: f64, scale: u8) -> FieldValue {
    |            ^^^^^^^^^^^^^^^^^^
...
806 |     pub fn to_financial_f64(&self) -> Option<f64> {
    |            ^^^^^^^^^^^^^^^^
...
819 |     pub fn is_financial(&self) -> bool {
    |            ^^^^^^^^^^^^

warning: struct `StreamRecord` is never constructed
   --> src/ferris/sql/execution/types.rs:830:12
    |
830 | pub struct StreamRecord {
    |            ^^^^^^^^^^^^

warning: `ferrisstreams` (bin "test_union_operator" test) generated 2 warnings
warning: `ferrisstreams` (bin "ferrisstreams") generated 759 warnings (457 duplicates)
warning: glob import doesn't reexport anything with visibility `pub` because no imported item is public enough
  --> tests/unit/common.rs:22:9
   |
22 | pub use crate::unit::test_utils::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   |
note: the most public imported item is `pub(crate)`
  --> tests/unit/common.rs:22:9
   |
22 | pub use crate::unit::test_utils::*;
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^^
   = help: reduce the glob import's visibility or increase visibility of imported items
   = note: `#[warn(unused_imports)]` on by default

warning: unused import: `PropertyValidation`
 --> tests/unit/config/schema_registry_test.rs:6:71
  |
6 |     GlobalSchemaContext, HierarchicalSchemaRegistry, PropertyDefault, PropertyValidation,
  |                                                                       ^^^^^^^^^^^^^^^^^^

warning: unused import: `BatchStrategy`
  --> tests/unit/config/schema_registry_test.rs:10:54
   |
10 | use ferrisstreams::ferris::datasource::{BatchConfig, BatchStrategy};
   |                                                      ^^^^^^^^^^^^^

warning: unused import: `serde_json::Value`
  --> tests/unit/config/schema_registry_test.rs:11:5
   |
11 | use serde_json::Value;
   |     ^^^^^^^^^^^^^^^^^

warning: unused import: `std::time::Duration`
  --> tests/unit/config/schema_registry_test.rs:13:5
   |
13 | use std::time::Duration;
   |     ^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::datasource::kafka::writer::KafkaDataWriter`
  --> tests/unit/kafka/kafka_data_writer_test.rs:11:5
   |
11 | use ferrisstreams::ferris::datasource::kafka::writer::KafkaDataWriter;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::datasource::DataWriter`
  --> tests/unit/kafka/kafka_data_writer_test.rs:12:5
   |
12 | use ferrisstreams::ferris::datasource::DataWriter;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::kafka::serialization::SerializationError`
 --> tests/unit/kafka/serialization_format_test.rs:6:5
  |
6 | use ferrisstreams::ferris::kafka::serialization::SerializationError;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/parser/case_when_test.rs:7:5
  |
7 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/parser/case_when_test.rs:11:5
   |
11 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: cannot test inner items
   --> tests/unit/sql/parser/emit_mode_test.rs:131:5
    |
131 |     #[tokio::test]
    |     ^^^^^^^^^^^^^^
    |
    = note: `#[warn(unnameable_test_items)]` on by default

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
  --> tests/unit/sql/functions/date_functions_test.rs:10:5
   |
10 | use ferrisstreams::ferris::serialization::JsonFormat;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/date_functions_test.rs:14:5
   |
14 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/functions/header_functions_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/header_functions_test.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/functions/interval_test.rs:7:5
  |
7 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/interval_test.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/functions/math_functions_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/math_functions_test.rs:15:5
   |
15 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/functions/new_functions_test.rs:7:5
  |
7 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/new_functions_test.rs:11:5
   |
11 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
  --> tests/unit/sql/functions/statistical_functions_test.rs:15:5
   |
15 | use ferrisstreams::ferris::serialization::JsonFormat;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/statistical_functions_test.rs:22:5
   |
22 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/functions/window_functions_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/functions/window_functions_test.rs:12:5
   |
12 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `accumulator::AccumulatorManager`
 --> tests/unit/sql/functions/count_distinct_comprehensive_test.rs:3:19
  |
3 |     aggregation::{accumulator::AccumulatorManager, functions::AggregateFunctions},
  |                   ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/execution/core/basic_execution_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/core/basic_execution_test.rs:14:5
   |
14 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/execution/core/error_handling_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/core/error_handling_test.rs:14:5
   |
14 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
  --> tests/unit/sql/execution/core/subquery_test.rs:12:5
   |
12 | use ferrisstreams::ferris::serialization::JsonFormat;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/core/subquery_test.rs:16:5
   |
16 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/execution/expression/expression_evaluation_test.rs:8:5
  |
8 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/expression/expression_evaluation_test.rs:14:5
   |
14 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> tests/unit/sql/execution/processors/window/shared_test_utils.rs:3:5
  |
3 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused import: `serialization::JsonFormat`
 --> tests/unit/sql/execution/processors/window/shared_test_utils.rs:7:5
  |
7 |     serialization::JsonFormat,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
  --> tests/unit/sql/execution/processors/window/window_processing_test.rs:12:5
   |
12 | use ferrisstreams::ferris::serialization::JsonFormat;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/processors/window/window_processing_test.rs:16:5
   |
16 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
  --> tests/unit/sql/execution/processors/window/windowing_test.rs:14:5
   |
14 | use ferrisstreams::ferris::serialization::JsonFormat;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/unit/sql/execution/processors/window/windowing_test.rs:20:5
   |
20 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/unit/sql/system/system_columns_test.rs:1:5
  |
1 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
 --> tests/unit/sql/system/system_columns_test.rs:6:5
  |
6 | use std::sync::Arc;
  |     ^^^^^^^^^^^^^^

warning: unused imports: `IntoClause`, `SelectField`, `StreamSource`, and `StreamingQuery`
  --> tests/unit/sql/query_analyzer_explicit_type_test.rs:10:11
   |
10 |     ast::{IntoClause, SelectField, StreamSource, StreamingQuery},
   |           ^^^^^^^^^^  ^^^^^^^^^^^  ^^^^^^^^^^^^  ^^^^^^^^^^^^^^

warning: unused import: `StreamSource`
 --> tests/unit/sql/concat_operator_test.rs:3:60
  |
3 |     ast::{BinaryOperator, Expr, LiteralValue, SelectField, StreamSource, StreamingQuery},
  |                                                            ^^^^^^^^^^^^

warning: unused imports: `FailureStrategy` and `JobExecutionStats`
 --> tests/unit/stream_job/stream_job_test_infrastructure.rs:9:5
  |
9 |     FailureStrategy, JobExecutionStats, JobProcessingConfig,
  |     ^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^

warning: unused imports: `test_disk_full_scenario` and `test_sink_write_failure_scenario`
 --> tests/unit/stream_job/stream_job_simple_test.rs:5:5
  |
5 |     test_disk_full_scenario, test_empty_batch_handling_scenario, test_network_partition_scenario,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
6 |     test_partial_batch_failure_scenario, test_shutdown_signal_scenario,
7 |     test_sink_write_failure_scenario, test_source_read_failure_scenario, AdvancedMockDataReader,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `DataSourceResult` and `process_batch_with_output`
  --> tests/unit/stream_job/stream_job_simple_test.rs:15:9
   |
15 |         process_batch_with_output, DataSourceResult, FailureStrategy, JobExecutionStats,
   |         ^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^

warning: unused imports: `FieldValue`, `SelectField`, and `StreamSource`
  --> tests/unit/stream_job/stream_job_simple_test.rs:21:11
   |
21 |     ast::{SelectField, StreamSource, StreamingQuery},
   |           ^^^^^^^^^^^  ^^^^^^^^^^^^
...
24 |         types::{FieldValue, StreamRecord},
   |                 ^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> tests/unit/stream_job/stream_job_simple_test.rs:27:5
   |
27 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `test_disk_full_scenario` and `test_sink_write_failure_scenario`
 --> tests/unit/stream_job/stream_job_transactional_test.rs:5:5
  |
5 |     test_disk_full_scenario, test_empty_batch_handling_scenario, test_network_partition_scenario,
  |     ^^^^^^^^^^^^^^^^^^^^^^^
6 |     test_partial_batch_failure_scenario, test_shutdown_signal_scenario,
7 |     test_sink_write_failure_scenario, test_source_read_failure_scenario, AdvancedMockDataReader,
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `FieldValue`, `SelectField`, `StreamRecord`, and `StreamSource`
  --> tests/unit/stream_job/stream_job_transactional_test.rs:18:11
   |
18 |     ast::{SelectField, StreamSource, StreamingQuery},
   |           ^^^^^^^^^^^  ^^^^^^^^^^^^
...
21 |         types::{FieldValue, StreamRecord},
   |                 ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> tests/unit/stream_job/stream_job_transactional_test.rs:24:5
   |
24 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `common::*`, `simple::SimpleJobProcessor`, and `transactional::TransactionalJobProcessor`
  --> tests/unit/stream_job/stream_job_processors_core_test.rs:10:5
   |
10 |     common::*, simple::SimpleJobProcessor, transactional::TransactionalJobProcessor,
   |     ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `ferrisstreams::ferris::sql::DataType`
  --> tests/unit/stream_job/stream_job_processors_core_test.rs:12:5
   |
12 | use ferrisstreams::ferris::sql::DataType;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `WindowSpec`
  --> tests/unit/stream_job/stream_job_processors_core_test.rs:14:54
   |
14 |     ast::{SelectField, StreamSource, StreamingQuery, WindowSpec},
   |                                                      ^^^^^^^^^^

warning: unused import: `execution::types::StreamRecord`
 --> tests/unit/stream_job/stream_job_processors_failure_test.rs:8:34
  |
8 | use ferrisstreams::ferris::sql::{execution::types::StreamRecord, StreamExecutionEngine};
  |                                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `common::*`, `simple::SimpleJobProcessor`, and `transactional::TransactionalJobProcessor`
  --> tests/unit/stream_job/stream_job_processors_failure_test.rs:16:5
   |
16 |     common::*, simple::SimpleJobProcessor, transactional::TransactionalJobProcessor,
   |     ^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `AdvancedMockDataReader`, `AdvancedMockDataWriter`, `create_test_engine`, `create_test_query`, `test_disk_full_scenario`, and `test_sink_write_failure_scenario`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:14:5
   |
14 |     create_test_engine, create_test_query, create_test_record, run_comprehensive_failure_tests,
   |     ^^^^^^^^^^^^^^^^^^  ^^^^^^^^^^^^^^^^^
15 |     test_disk_full_scenario, test_empty_batch_handling_scenario, test_network_partition_scenario,
   |     ^^^^^^^^^^^^^^^^^^^^^^^
16 |     test_partial_batch_failure_scenario, test_shutdown_signal_scenario,
17 |     test_sink_write_failure_scenario, test_source_read_failure_scenario, AdvancedMockDataReader,
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^                                     ^^^^^^^^^^^^^^^^^^^^^^
18 |     AdvancedMockDataWriter, StreamJobProcessor,
   |     ^^^^^^^^^^^^^^^^^^^^^^

warning: unused imports: `FieldValue`, `SelectField`, `StreamRecord`, and `StreamSource`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:29:11
   |
29 |     ast::{SelectField, StreamSource, StreamingQuery},
   |           ^^^^^^^^^^^  ^^^^^^^^^^^^
...
32 |         types::{FieldValue, StreamRecord},
   |                 ^^^^^^^^^^  ^^^^^^^^^^^^

warning: unused import: `std::collections::HashMap`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:35:5
   |
35 | use std::collections::HashMap;
   |     ^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `Instant`
  --> tests/unit/stream_job/stream_job_common_test.rs:17:27
   |
17 | use std::time::{Duration, Instant};
   |                           ^^^^^^^

warning: unused import: `ferrisstreams::ferris::serialization::JsonFormat`
 --> tests/integration/sql_integration_test.rs:2:5
  |
2 | use ferrisstreams::ferris::serialization::JsonFormat;
  |     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: unused import: `std::sync::Arc`
  --> tests/integration/sql_integration_test.rs:11:5
   |
11 | use std::sync::Arc;
   |     ^^^^^^^^^^^^^^

warning: unused imports: `SelectField`, `StreamSource`, and `transactional::*`
  --> tests/performance/ferris_sql_multi_benchmarks.rs:10:48
   |
10 |     server::processors::{common::*, simple::*, transactional::*},
   |                                                ^^^^^^^^^^^^^^^^
11 |     sql::{
12 |         ast::{EmitMode, SelectField, StreamSource, WindowSpec},
   |                         ^^^^^^^^^^^  ^^^^^^^^^^^^

warning: unexpected `cfg` condition value: `jemalloc`
  --> tests/performance/consolidated_mod.rs:32:15
   |
32 |         #[cfg(feature = "jemalloc")]
   |               ^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `bincode`, `comprehensive-tests`, and `default`
   = help: consider adding `jemalloc` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration
   = note: `#[warn(unexpected_cfgs)]` on by default

warning: unexpected `cfg` condition value: `jemalloc`
  --> tests/performance/consolidated_mod.rs:75:15
   |
75 |         #[cfg(feature = "jemalloc")]
   |               ^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `bincode`, `comprehensive-tests`, and `default`
   = help: consider adding `jemalloc` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `jemalloc`
  --> tests/performance/consolidated_mod.rs:93:15
   |
93 |         #[cfg(feature = "jemalloc")]
   |               ^^^^^^^^^^^^^^^^^^^^
   |
   = note: expected values for `feature` are: `bincode`, `comprehensive-tests`, and `default`
   = help: consider adding `jemalloc` as a feature in `Cargo.toml`
   = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unexpected `cfg` condition value: `jemalloc`
   --> tests/performance/consolidated_mod.rs:236:11
    |
236 |     #[cfg(feature = "jemalloc")]
    |           ^^^^^^^^^^^^^^^^^^^^
    |
    = note: expected values for `feature` are: `bincode`, `comprehensive-tests`, and `default`
    = help: consider adding `jemalloc` as a feature in `Cargo.toml`
    = note: see <https://doc.rust-lang.org/nightly/rustc/check-cfg/cargo-specifics.html> for more information about checking conditional configuration

warning: unused import: `Duration`
   --> tests/performance/consolidated_mod.rs:175:21
    |
175 |     use std::time::{Duration, Instant};
    |                     ^^^^^^^^

warning: unused variable: `pass`
  --> src/bin/test_config_system.rs:66:50
   |
66 |                 if let (Some(ref user), Some(ref pass)) =
   |                                                  ^^^^ help: if this is intentional, prefix it with an underscore: `_pass`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: variable `successful_validations` is assigned to, but never used
   --> src/bin/test_config_system.rs:141:13
    |
141 |     let mut successful_validations = 0;
    |             ^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: consider using `_successful_validations` instead

warning: unused import: `DataWriter`
 --> src/bin/test_writer_batch_configuration.rs:5:24
  |
5 |     traits::{DataSink, DataWriter},
  |                        ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: function `create_test_schema` is never used
   --> src/bin/test_writer_batch_configuration.rs:253:4
    |
253 | fn create_test_schema() -> Schema {
    |    ^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: unused variable: `serialization_format`
  --> tests/unit/sql/execution/processors/join/join_test.rs:30:9
   |
30 |     let serialization_format = std::sync::Arc::new(JsonFormat);
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`
   |
   = note: `#[warn(unused_variables)]` on by default

warning: unused variable: `serialization_format`
  --> tests/unit/sql/execution/processors/join/subquery_join_test.rs:45:9
   |
45 |     let serialization_format = std::sync::Arc::new(JsonFormat);
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
  --> tests/unit/sql/execution/processors/join/subquery_on_condition_test.rs:41:9
   |
41 |     let serialization_format = std::sync::Arc::new(JsonFormat);
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
  --> tests/unit/sql/types/advanced_types_test.rs:59:9
   |
59 |     let serialization_format =
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
  --> tests/integration/execution_engine_test.rs:51:9
   |
51 |     let serialization_format = Arc::new(JsonFormat);
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `batch_config`
  --> tests/unit/config/schema_registry_test.rs:17:9
   |
17 |     let batch_config = BatchConfig::default();
   |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_batch_config`

warning: unused variable: `file_source`
   --> tests/unit/config/schema_registry_test.rs:584:9
    |
584 |     let file_source = FileDataSource::default();
    |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_source`

warning: unused variable: `file_sink`
   --> tests/unit/config/schema_registry_test.rs:975:9
    |
975 |     let file_sink = FileSink::default();
    |         ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_file_sink`

warning: unused variable: `field_name`
   --> tests/unit/kafka/kafka_data_writer_test.rs:131:14
    |
131 |         for (field_name, field_value) in &record.fields {
    |              ^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_field_name`

warning: unused variable: `format`
   --> tests/unit/sql/parser/emit_mode_test.rs:143:13
    |
143 |         let format: Arc<dyn SerializationFormat> = Arc::new(JsonFormat);
    |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_format`

warning: unused variable: `rx`
   --> tests/unit/sql/functions/date_functions_test.rs:559:18
    |
559 |     let (tx, mut rx) = mpsc::unbounded_channel();
    |                  ^^ help: if this is intentional, prefix it with an underscore: `_rx`

warning: variable does not need to be mutable
   --> tests/unit/sql/functions/date_functions_test.rs:559:14
    |
559 |     let (tx, mut rx) = mpsc::unbounded_channel();
    |              ----^^
    |              |
    |              help: remove this `mut`
    |
    = note: `#[warn(unused_mut)]` on by default

warning: unused variable: `rx`
   --> tests/unit/sql/functions/date_functions_test.rs:664:18
    |
664 |     let (tx, mut rx) = mpsc::unbounded_channel();
    |                  ^^ help: if this is intentional, prefix it with an underscore: `_rx`

warning: variable does not need to be mutable
   --> tests/unit/sql/functions/date_functions_test.rs:664:14
    |
664 |     let (tx, mut rx) = mpsc::unbounded_channel();
    |              ----^^
    |              |
    |              help: remove this `mut`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/core/csas_ctas_test.rs:246:13
    |
246 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/core/csas_ctas_test.rs:282:13
    |
282 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/core/csas_ctas_test.rs:712:13
    |
712 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/core/csas_ctas_test.rs:745:13
    |
745 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
  --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:56:9
   |
56 |     let serialization_format = Arc::new(JsonFormat);
   |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:115:9
    |
115 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:174:9
    |
174 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:305:9
    |
305 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:383:9
    |
383 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:449:9
    |
449 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/execution/expression/arithmetic/operator_test.rs:532:9
    |
532 |     let serialization_format = Arc::new(JsonFormat);
    |         ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `format`
  --> tests/unit/sql/execution/aggregation/group_by_test.rs:16:13
   |
16 |         let format: Arc<dyn SerializationFormat> = Arc::new(JsonFormat);
   |             ^^^^^^ help: if this is intentional, prefix it with an underscore: `_format`

warning: variable `got_output` is assigned to, but never used
   --> tests/unit/sql/execution/processors/window/windowing_test.rs:218:13
    |
218 |     let mut got_output = false;
    |             ^^^^^^^^^^
    |
    = note: consider using `_got_output` instead

warning: value assigned to `got_output` is never read
   --> tests/unit/sql/execution/processors/window/windowing_test.rs:220:9
    |
220 |         got_output = true;
    |         ^^^^^^^^^^
    |
    = help: maybe it is overwritten before being read?
    = note: `#[warn(unused_assignments)]` on by default

warning: unused variable: `serialization_format`
  --> tests/unit/sql/types/headers_test.rs:34:13
   |
34 |         let serialization_format = std::sync::Arc::new(JsonFormat);
   |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
  --> tests/unit/sql/types/headers_test.rs:85:13
   |
85 |         let serialization_format = std::sync::Arc::new(JsonFormat);
   |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:129:13
    |
129 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:179:13
    |
179 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:226:13
    |
226 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:286:13
    |
286 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:344:13
    |
344 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:418:13
    |
418 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:437:13
    |
437 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `serialization_format`
   --> tests/unit/sql/types/headers_test.rs:486:13
    |
486 |         let serialization_format = std::sync::Arc::new(JsonFormat);
    |             ^^^^^^^^^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_serialization_format`

warning: unused variable: `analyzer`
   --> tests/unit/sql/query_analyzer_test.rs:187:9
    |
187 |     let analyzer = QueryAnalyzer::new("test-group".to_string());
    |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_analyzer`

warning: variable does not need to be mutable
  --> tests/unit/stream_job/stream_job_simple_test.rs:94:33
   |
94 |     fn with_transaction_support(mut self) -> Self {
   |                                 ----^^^^
   |                                 |
   |                                 help: remove this `mut`

warning: unused variable: `i`
   --> tests/unit/stream_job/stream_job_processors_core_test.rs:290:9
    |
290 |     for i in 0..10 {
    |         ^ help: if this is intentional, prefix it with an underscore: `_i`

warning: unused variable: `shutdown_tx`
   --> tests/unit/stream_job/stream_job_processors_core_test.rs:303:10
    |
303 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
    |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `shutdown_tx`
   --> tests/unit/stream_job/stream_job_processors_core_test.rs:363:10
    |
363 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
    |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `shutdown_tx`
   --> tests/unit/stream_job/stream_job_processors_core_test.rs:420:10
    |
420 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
    |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `shutdown_tx`
  --> tests/unit/stream_job/stream_job_processors_failure_test.rs:36:10
   |
36 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
   |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `shutdown_tx`
  --> tests/unit/stream_job/stream_job_processors_failure_test.rs:99:10
   |
99 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
   |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `shutdown_tx`
   --> tests/unit/stream_job/stream_job_processors_failure_test.rs:244:10
    |
244 |     let (shutdown_tx, shutdown_rx) = mpsc::channel(1);
    |          ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_tx`

warning: unused variable: `mock_reader`
   --> tests/unit/stream_job/stream_job_processors_failure_test.rs:283:13
    |
283 |         let mock_reader = MockDataReader::new(vec![batch1]).with_transaction_support();
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mock_reader`

warning: unused variable: `mock_writer`
   --> tests/unit/stream_job/stream_job_processors_failure_test.rs:284:13
    |
284 |         let mock_writer = MockDataWriter::new()
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_mock_writer`

warning: unused variable: `processor`
   --> tests/unit/stream_job/stream_job_processors_failure_test.rs:288:13
    |
288 |         let processor = if use_transactional {
    |             ^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_processor`

warning: unused variable: `config`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:51:12
   |
51 |     fn new(config: JobProcessingConfig) -> Self {
   |            ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `reader`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:64:9
   |
64 |         reader: Box<dyn DataReader>,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_reader`

warning: unused variable: `writer`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:65:9
   |
65 |         writer: Option<Box<dyn DataWriter>>,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_writer`

warning: unused variable: `engine`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:66:9
   |
66 |         engine: Arc<Mutex<StreamExecutionEngine>>,
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_engine`

warning: unused variable: `query`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:67:9
   |
67 |         query: StreamingQuery,
   |         ^^^^^ help: if this is intentional, prefix it with an underscore: `_query`

warning: unused variable: `job_name`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:68:9
   |
68 |         job_name: String,
   |         ^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_job_name`

warning: unused variable: `shutdown_rx`
  --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:69:9
   |
69 |         shutdown_rx: mpsc::Receiver<()>,
   |         ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_shutdown_rx`

warning: unused variable: `test_batches`
   --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:184:9
    |
184 |     let test_batches = vec![vec![create_test_record(1), create_test_record(2)]];
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_test_batches`

warning: unused variable: `config`
   --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:186:9
    |
186 |     let config = JobProcessingConfig {
    |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_config`

warning: unused variable: `test_batches`
   --> tests/unit/stream_job/stream_job_future_handler_test_template.rs:214:9
    |
214 |     let test_batches = vec![vec![create_test_record(1)]];
    |         ^^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_test_batches`

warning: unused variable: `schema_json`
   --> tests/unit/serialization/avro_serialization_tests.rs:468:13
    |
468 |         let schema_json = r#"
    |             ^^^^^^^^^^^ help: if this is intentional, prefix it with an underscore: `_schema_json`

warning: unused variable: `format`
  --> tests/integration/emit_functionality_test.rs:86:9
   |
86 |     let format: Arc<dyn SerializationFormat> = Arc::new(JsonFormat);
   |         ^^^^^^ help: if this is intentional, prefix it with an underscore: `_format`

warning: function `test_emit_final_validation_error` is never used
   --> tests/unit/sql/parser/emit_mode_test.rs:132:14
    |
132 |     async fn test_emit_final_validation_error() {
    |              ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
    |
    = note: `#[warn(dead_code)]` on by default

warning: function `create_test_record` is never used
   --> tests/unit/sql/functions/count_distinct_comprehensive_test.rs:396:4
    |
396 | fn create_test_record(customer_id: &str, amount: i64) -> StreamRecord {
    |    ^^^^^^^^^^^^^^^^^^

warning: function `create_test_record` is never used
  --> tests/unit/sql/execution/core/csas_ctas_test.rs:12:4
   |
12 | fn create_test_record(id: i64, amount: f64, status: &str) -> StreamRecord {
   |    ^^^^^^^^^^^^^^^^^^

warning: function `create_test_record_for_join` is never used
  --> tests/unit/sql/execution/processors/join/join_test.rs:13:4
   |
13 | fn create_test_record_for_join() -> StreamRecord {
   |    ^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_test_record` is never used
 --> tests/unit/sql/system/system_columns_test.rs:9:4
  |
9 | fn create_test_record(id: i64, amount: f64) -> StreamRecord {
  |    ^^^^^^^^^^^^^^^^^^

warning: function `init_logger` is never used
  --> tests/unit/test_utils.rs:22:15
   |
22 | pub(crate) fn init_logger() {
   |               ^^^^^^^^^^^

warning: function `init` is never used
  --> tests/unit/test_utils.rs:26:15
   |
26 | pub(crate) fn init() -> bool {
   |               ^^^^

warning: function `generate_topic` is never used
  --> tests/unit/test_utils.rs:32:15
   |
32 | pub(crate) fn generate_topic(prefix: &str) -> String {
   |               ^^^^^^^^^^^^^^

warning: function `generate_group_id` is never used
  --> tests/unit/test_utils.rs:36:15
   |
36 | pub(crate) fn generate_group_id(prefix: &str) -> String {
   |               ^^^^^^^^^^^^^^^^^

warning: function `create_test_message_producer` is never used
  --> tests/unit/test_utils.rs:41:15
   |
41 | pub(crate) fn create_test_message_producer(
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_user_producer` is never used
  --> tests/unit/test_utils.rs:55:15
   |
55 | pub(crate) fn create_user_producer(
   |               ^^^^^^^^^^^^^^^^^^^^

warning: function `create_order_producer` is never used
  --> tests/unit/test_utils.rs:67:15
   |
67 | pub(crate) fn create_order_producer(
   |               ^^^^^^^^^^^^^^^^^^^^^

warning: function `create_test_message_consumer` is never used
  --> tests/unit/test_utils.rs:82:15
   |
82 | pub(crate) fn create_test_message_consumer(
   |               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_user_consumer` is never used
  --> tests/unit/test_utils.rs:96:15
   |
96 | pub(crate) fn create_user_consumer(
   |               ^^^^^^^^^^^^^^^^^^^^

warning: function `create_order_consumer` is never used
   --> tests/unit/test_utils.rs:108:15
    |
108 | pub(crate) fn create_order_consumer(
    |               ^^^^^^^^^^^^^^^^^^^^^

warning: function `send_and_flush` is never used
   --> tests/unit/test_utils.rs:123:21
    |
123 | pub(crate) async fn send_and_flush<K, V, KS, VS>(
    |                     ^^^^^^^^^^^^^^

warning: struct `TestSetup` is never constructed
   --> tests/unit/test_utils.rs:140:19
    |
140 | pub(crate) struct TestSetup<T>
    |                   ^^^^^^^^^

warning: associated function `new_test_message` is never used
   --> tests/unit/test_utils.rs:153:19
    |
152 | impl TestSetup<TestMessage> {
    | --------------------------- associated function in this implementation
153 |     pub(crate) fn new_test_message(prefix: &str) -> Result<Self, Box<dyn std::error::Error>> {
    |                   ^^^^^^^^^^^^^^^^

warning: associated function `new_user` is never used
   --> tests/unit/test_utils.rs:171:19
    |
170 | impl TestSetup<User> {
    | -------------------- associated function in this implementation
171 |     pub(crate) fn new_user(prefix: &str) -> Result<Self, Box<dyn std::error::Error>> {
    |                   ^^^^^^^^

warning: associated function `new_order` is never used
   --> tests/unit/test_utils.rs:189:19
    |
188 | impl TestSetup<OrderEvent> {
    | -------------------------- associated function in this implementation
189 |     pub(crate) fn new_order(prefix: &str) -> Result<Self, Box<dyn std::error::Error>> {
    |                   ^^^^^^^^^

warning: function `safe_commit` is never used
   --> tests/unit/test_utils.rs:207:15
    |
207 | pub(crate) fn safe_commit<K, V, KS, VS>(
    |               ^^^^^^^^^^^

warning: function `get_kafka_container_name` is never used
   --> tests/unit/stream_job/stream_job_server_test.rs:494:10
    |
494 | async fn get_kafka_container_name() -> Option<String> {
    |          ^^^^^^^^^^^^^^^^^^^^^^^^

warning: field `should_block` is never read
  --> tests/unit/stream_job/stream_job_simple_test.rs:80:5
   |
77 | pub struct MockDataReader {
   |            -------------- field in this struct
...
80 |     should_block: bool,
   |     ^^^^^^^^^^^^

warning: method `with_transaction_support` is never used
  --> tests/unit/stream_job/stream_job_simple_test.rs:94:8
   |
84 | impl MockDataReader {
   | ------------------- method in this implementation
...
94 |     fn with_transaction_support(mut self) -> Self {
   |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: methods `with_write_failures`, `with_flush_failures`, and `with_transaction_support` are never used
   --> tests/unit/stream_job/stream_job_simple_test.rs:161:8
    |
148 | impl MockDataWriter {
    | ------------------- methods in this implementation
...
161 |     fn with_write_failures(self) -> Self {
    |        ^^^^^^^^^^^^^^^^^^^
...
166 |     fn with_flush_failures(self) -> Self {
    |        ^^^^^^^^^^^^^^^^^^^
...
171 |     fn with_transaction_support(self) -> Self {
    |        ^^^^^^^^^^^^^^^^^^^^^^^^

warning: function `create_test_record` is never used
  --> tests/integration/emit_functionality_test.rs:12:4
   |
12 | fn create_test_record(id: i64, amount: f64) -> StreamRecord {
   |    ^^^^^^^^^^^^^^^^^^

warning: function `main` is never used
  --> tests/integration/emit_functionality_test.rs:27:10
   |
27 | async fn main() {
   |          ^^^^

warning: field `batch_size` is never read
   --> tests/performance/ferris_sql_multi_benchmarks.rs:107:5
    |
104 | pub struct BenchmarkDataReader {
    |            ------------------- field in this struct
...
107 |     batch_size: usize,
    |     ^^^^^^^^^^

warning: `ferrisstreams` (bin "test_config_system" test) generated 2 warnings
warning: `ferrisstreams` (bin "test_writer_batch_configuration" test) generated 2 warnings
warning: `ferrisstreams` (test "mod") generated 159 warnings (run `cargo fix --test "mod"` to apply 66 suggestions)
warning: `ferrisstreams` (bin "sql_validator" test) generated 2 warnings (2 duplicates)
warning: `ferrisstreams` (bin "test_config_system") generated 2 warnings (2 duplicates)
warning: unused import: `DataReader`
 --> src/bin/test_file_batch_optimization.rs:3:14
  |
3 |     traits::{DataReader, DataSource},
  |              ^^^^^^^^^^
  |
  = note: `#[warn(unused_imports)]` on by default

warning: `ferrisstreams` (bin "test_error_recovery" test) generated 1 warning (1 duplicate)
warning: `ferrisstreams` (bin "test_file_batch_optimization") generated 1 warning
warning: `ferrisstreams` (bin "test_file_batch_optimization" test) generated 1 warning (1 duplicate)
warning: `ferrisstreams` (bin "test_union_operator") generated 2 warnings (2 duplicates)
warning: `ferrisstreams` (bin "test_avro_codec") generated 1 warning (1 duplicate)
warning: unused import: `tokio::time::timeout`
  --> tests/ferris_sql_multi_test.rs:12:5
   |
12 | use tokio::time::timeout;
   |     ^^^^^^^^^^^^^^^^^^^^
   |
   = note: `#[warn(unused_imports)]` on by default

warning: `ferrisstreams` (bin "test_writer_batch_configuration") generated 2 warnings (2 duplicates)
warning: `ferrisstreams` (test "ferris_sql_multi_test") generated 1 warning (run `cargo fix --test "ferris_sql_multi_test"` to apply 1 suggestion)
    Finished `test` profile [unoptimized + debuginfo] target(s) in 32.52s
     Running unittests src/lib.rs (target/debug/deps/ferrisstreams-86db9f1cafa8e06b)

running 121 tests
test ferris::datasource::file::config::tests::test_config_validation ... ok
test ferris::config::schema_registry::tests::test_property_validation ... ok
test ferris::datasource::file::config::tests::test_file_format_parsing ... ok
test ferris::config::schema_registry::tests::test_json_schema_generation ... ok
test ferris::datasource::file::config::tests::test_uri_parsing ... ok
test ferris::datasource::registry::tests::test_create_source_no_factory ... ok
test ferris::datasource::registry::tests::test_create_sink_no_factory ... ok
test ferris::datasource::registry::tests::test_registry_creation ... ok
test ferris::datasource::registry::tests::test_global_registry_access ... ok
test ferris::config::schema_registry::tests::test_schema_registry_creation ... ok
test ferris::kafka::common_config::tests::test_custom_properties_management ... ok
test ferris::kafka::client_config_builder::tests::test_client_config_builder_optional_fields ... ok
test ferris::kafka::common_config::tests::test_presets ... ok
test ferris::kafka::client_config_builder::tests::test_client_config_builder ... ok
test ferris::kafka::common_config::tests::test_default_config ... ok
test ferris::kafka::common_config::tests::test_builder_pattern ... ok
test ferris::kafka::configurable_consumer::tests::test_avro_configuration ... ok
test ferris::kafka::configurable_consumer::tests::test_configurable_consumer_builder_creation ... ok
test ferris::kafka::configurable_consumer::tests::test_configurable_consumer_builder_with_formats ... ok
test ferris::kafka::configurable_consumer::tests::test_sql_config_parsing ... ok
test ferris::datasource::file::watcher::tests::test_file_watcher_creation ... ok
test ferris::kafka::configurable_producer::tests::test_avro_configuration ... ok
test ferris::kafka::configurable_producer::tests::test_configurable_producer_builder_creation ... ok
test ferris::kafka::configurable_producer::tests::test_configurable_producer_builder_with_formats ... ok
test ferris::kafka::configurable_producer::tests::test_sql_config_parsing ... ok
test ferris::kafka::consumer_config::tests::test_builder_pattern ... ok
test ferris::kafka::consumer_config::tests::test_default_config ... ok
test ferris::kafka::consumer_config::tests::test_presets ... ok
test ferris::kafka::headers::tests::test_headers_creation ... ok
test ferris::kafka::headers::tests::test_headers_iteration ... ok
test ferris::kafka::kafka_error::tests::test_error_display ... ok
test ferris::kafka::kafka_error::tests::test_error_source ... ok
test ferris::kafka::kafka_error::tests::test_type_aliases ... ok
test ferris::kafka::message::tests::test_message_consumption ... ok
test ferris::kafka::message::tests::test_message_selective_consumption ... ok
test ferris::datasource::file::watcher::tests::test_watch_single_file ... ok
test ferris::kafka::performance_presets::tests::test_development_preset ... ok
test ferris::kafka::message::tests::test_message_creation ... ok
test ferris::kafka::performance_presets::tests::test_high_throughput_preset ... ok
test ferris::kafka::performance_presets::tests::test_low_latency_preset ... ok
test ferris::kafka::performance_presets::tests::test_preset_descriptions ... ok
test ferris::kafka::performance_presets::tests::test_preset_use_cases ... ok
test ferris::kafka::performance_presets::tests::test_max_durability_preset ... ok
test ferris::kafka::producer_config::tests::test_builder_pattern ... ok
test ferris::kafka::producer_config::tests::test_default_config ... ok
test ferris::kafka::producer_config::tests::test_presets ... ok
test ferris::kafka::serialization_format::tests::test_serialization_config_from_sql_params ... ok
test ferris::kafka::serialization_format::tests::test_serialization_factory_json ... ok
test ferris::kafka::serialization_format::tests::test_serialization_format_parsing ... ok
test ferris::schema::client::cache::tests::test_cache_miss ... ok
test ferris::schema::client::cache::tests::test_cache_put_and_get ... ok
test ferris::schema::client::cache::tests::test_cache_invalidation ... ok
test ferris::schema::client::cache::tests::test_cache_statistics ... ok
test ferris::schema::client::cache::tests::test_cache_size_management ... ok
test ferris::schema::client::providers::tests::test_default_registry_creation ... ok
test ferris::schema::client::providers::tests::test_file_schema_provider ... ok
test ferris::schema::client::providers::tests::test_kafka_schema_provider ... ok
test ferris::schema::client::unified_client::tests::test_backend_auto_detection ... ok
test ferris::schema::client::providers::tests::test_s3_schema_provider ... ok
test ferris::schema::evolution::tests::test_migration_plan_creation ... ok
test ferris::schema::evolution::tests::test_schema_evolution_compatibility ... ok
test ferris::schema::evolution::tests::test_schema_diff_computation ... ok
test ferris::schema::registry::tests::test_cache_stats ... ok
test ferris::schema::registry::tests::test_schema_caching ... ok
test ferris::schema::registry::tests::test_schema_registry_discovery ... ok
test ferris::sql::config::with_clause_parser::tests::test_type_validation ... ok
test ferris::sql::config::with_clause_parser::tests::test_basic_with_clause_parsing ... ok
test ferris::sql::config::with_clause_parser::tests::test_environment_variable_resolution ... ok
test ferris::sql::error::recovery::tests::test_circuit_breaker_closed_state ... ok
test ferris::sql::error::recovery::tests::test_circuit_breaker_failure_threshold ... ok
test ferris::sql::error::recovery::tests::test_dead_letter_queue ... ok
test ferris::sql::error::recovery::tests::test_health_monitor ... ok
test ferris::sql::config::with_clause_parser::tests::test_invalid_configuration_key ... ok
test ferris::sql::error::recovery::tests::test_retry_policy_success ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_hash_table_operations ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_join_strategy_selection ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_memory_estimation ... ok
test ferris::sql::config::yaml_loader::tests::test_simple_config_loading ... ok
test ferris::sql::execution::performance::metrics::tests::test_atomic_collector ... ok
test ferris::sql::execution::performance::metrics::tests::test_memory_metrics ... ok
test ferris::sql::execution::performance::metrics::tests::test_percentile_calculation ... ok
test ferris::sql::execution::performance::metrics::tests::test_processor_metrics ... ok
test ferris::sql::execution::performance::metrics::tests::test_throughput_calculation ... ok
test ferris::sql::execution::performance::monitor::tests::test_health_check ... ok
test ferris::sql::config::yaml_loader::tests::test_circular_dependency_detection ... ok
test ferris::sql::config::yaml_loader::tests::test_extends_inheritance ... ok
test ferris::sql::error::recovery::tests::test_retry_policy_exhaustion ... ok
test ferris::sql::execution::performance::monitor::tests::test_performance_monitor_basic ... ok
test ferris::sql::execution::performance::monitor::tests::test_prometheus_export ... ok
test ferris::sql::execution::performance::monitor::tests::test_monitored_execution_trait ... ok
test ferris::sql::execution::performance::query_performance::tests::test_efficiency_check ... ok
test ferris::sql::execution::performance::query_performance::tests::test_processor_breakdown ... ok
test ferris::sql::execution::performance::query_performance::tests::test_query_performance_creation ... ok
test ferris::sql::execution::performance::query_performance::tests::test_throughput_calculations ... ok
test ferris::sql::execution::performance::monitor::tests::test_statistics_summary ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_elapsed_time_tracking ... ok
test ferris::sql::execution::performance::monitor::tests::test_performance_report ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_metrics_updates ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_finish_tracking ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_query_tracker_creation ... ok
test ferris::sql::execution::performance::statistics::tests::test_percentile_calculation ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_processor_tracking ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_multiple_processors ... ok
test ferris::sql::execution::performance::statistics::tests::test_prometheus_export ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_pattern_stats ... ok
test ferris::sql::execution::performance::monitor::tests::test_query_pattern_tracking ... ok
test ferris::sql::execution::performance::statistics::tests::test_statistics_collector ... ok
test ferris::sql::execution::processors::job::tests::test_job_processor_creation ... ok
test ferris::sql::execution::processors::job::tests::test_start_job_operation ... ok
test ferris::sql::execution::processors::job::tests::test_stop_job_operation ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_statistics_basic ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_pattern_extraction ... ok
test ferris::sql::execution::performance::monitor::tests::test_window_statistics ... ok
test ferris::schema::client::cache::tests::test_cache_ttl_expiry ... ok
test ferris::sql::execution::performance::statistics::tests::test_window_statistics ... ok
test ferris::datasource::file::watcher::tests::test_detect_file_changes ... ok
test ferris::kafka::kafka_consumer::tests::test_consumer_builder ... ok
test ferris::kafka::kafka_producer::tests::test_producer_builder ... ok
test ferris::kafka::kafka_consumer::tests::test_consumable_trait ... ok
test ferris::schema::client::unified_client::tests::test_cache_integration ... ok
test ferris::schema::client::unified_client::tests::test_in_memory_backend ... ok

test result: ok. 121 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.04s

     Running unittests demo/datasource-demo/complete_pipeline_demo.rs (target/debug/deps/complete_pipeline_demo-e389d8269c38b56d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests tests/debug/debug_encoding_test.rs (target/debug/deps/debug_encoding_test-049f373a2d8aadb5)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/ferris_cli.rs (target/debug/deps/ferris_cli-2d5ffb133156a264)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/ferris-sql-multi.rs (target/debug/deps/ferris_sql_multi-8262ef03a5847a2c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/main.rs (target/debug/deps/ferrisstreams-aa3d31dec5f49853)

running 121 tests
test ferris::datasource::file::config::tests::test_config_validation ... ok
test ferris::datasource::file::config::tests::test_file_format_parsing ... ok
test ferris::config::schema_registry::tests::test_json_schema_generation ... ok
test ferris::config::schema_registry::tests::test_property_validation ... ok
test ferris::datasource::file::config::tests::test_uri_parsing ... ok
test ferris::datasource::registry::tests::test_global_registry_access ... ok
test ferris::datasource::registry::tests::test_create_sink_no_factory ... ok
test ferris::datasource::registry::tests::test_create_source_no_factory ... ok
test ferris::datasource::registry::tests::test_registry_creation ... ok
test ferris::config::schema_registry::tests::test_schema_registry_creation ... ok
test ferris::kafka::common_config::tests::test_custom_properties_management ... ok
test ferris::kafka::common_config::tests::test_default_config ... ok
test ferris::kafka::client_config_builder::tests::test_client_config_builder_optional_fields ... ok
test ferris::kafka::client_config_builder::tests::test_client_config_builder ... ok
test ferris::kafka::common_config::tests::test_builder_pattern ... ok
test ferris::kafka::common_config::tests::test_presets ... ok
test ferris::kafka::configurable_consumer::tests::test_avro_configuration ... ok
test ferris::kafka::configurable_consumer::tests::test_configurable_consumer_builder_creation ... ok
test ferris::kafka::configurable_consumer::tests::test_configurable_consumer_builder_with_formats ... ok
test ferris::kafka::configurable_consumer::tests::test_sql_config_parsing ... ok
test ferris::datasource::file::watcher::tests::test_file_watcher_creation ... ok
test ferris::kafka::configurable_producer::tests::test_avro_configuration ... ok
test ferris::kafka::configurable_producer::tests::test_configurable_producer_builder_creation ... ok
test ferris::kafka::configurable_producer::tests::test_configurable_producer_builder_with_formats ... ok
test ferris::kafka::configurable_producer::tests::test_sql_config_parsing ... ok
test ferris::kafka::consumer_config::tests::test_builder_pattern ... ok
test ferris::kafka::consumer_config::tests::test_default_config ... ok
test ferris::kafka::consumer_config::tests::test_presets ... ok
test ferris::kafka::headers::tests::test_headers_creation ... ok
test ferris::kafka::headers::tests::test_headers_iteration ... ok
test ferris::kafka::kafka_error::tests::test_error_display ... ok
test ferris::kafka::kafka_error::tests::test_error_source ... ok
test ferris::kafka::kafka_error::tests::test_type_aliases ... ok
test ferris::kafka::message::tests::test_message_consumption ... ok
test ferris::datasource::file::watcher::tests::test_watch_single_file ... ok
test ferris::kafka::message::tests::test_message_selective_consumption ... ok
test ferris::kafka::performance_presets::tests::test_development_preset ... ok
test ferris::kafka::performance_presets::tests::test_high_throughput_preset ... ok
test ferris::kafka::message::tests::test_message_creation ... ok
test ferris::kafka::performance_presets::tests::test_low_latency_preset ... ok
test ferris::kafka::performance_presets::tests::test_max_durability_preset ... ok
test ferris::kafka::performance_presets::tests::test_preset_descriptions ... ok
test ferris::kafka::performance_presets::tests::test_preset_use_cases ... ok
test ferris::kafka::producer_config::tests::test_builder_pattern ... ok
test ferris::kafka::producer_config::tests::test_default_config ... ok
test ferris::kafka::producer_config::tests::test_presets ... ok
test ferris::kafka::serialization_format::tests::test_serialization_config_from_sql_params ... ok
test ferris::kafka::serialization_format::tests::test_serialization_factory_json ... ok
test ferris::kafka::serialization_format::tests::test_serialization_format_parsing ... ok
test ferris::schema::client::cache::tests::test_cache_invalidation ... ok
test ferris::schema::client::cache::tests::test_cache_miss ... ok
test ferris::schema::client::cache::tests::test_cache_put_and_get ... ok
test ferris::schema::client::cache::tests::test_cache_statistics ... ok
test ferris::schema::client::providers::tests::test_default_registry_creation ... ok
test ferris::schema::client::cache::tests::test_cache_size_management ... ok
test ferris::schema::client::providers::tests::test_file_schema_provider ... ok
test ferris::schema::client::providers::tests::test_kafka_schema_provider ... ok
test ferris::schema::client::unified_client::tests::test_backend_auto_detection ... ok
test ferris::schema::client::providers::tests::test_s3_schema_provider ... ok
test ferris::schema::evolution::tests::test_migration_plan_creation ... ok
test ferris::schema::evolution::tests::test_schema_diff_computation ... ok
test ferris::schema::evolution::tests::test_schema_evolution_compatibility ... ok
test ferris::schema::registry::tests::test_cache_stats ... ok
test ferris::schema::registry::tests::test_schema_caching ... ok
test ferris::schema::registry::tests::test_schema_registry_discovery ... ok
test ferris::sql::config::with_clause_parser::tests::test_type_validation ... ok
test ferris::sql::config::with_clause_parser::tests::test_basic_with_clause_parsing ... ok
test ferris::sql::config::with_clause_parser::tests::test_environment_variable_resolution ... ok
test ferris::sql::error::recovery::tests::test_circuit_breaker_closed_state ... ok
test ferris::sql::error::recovery::tests::test_circuit_breaker_failure_threshold ... ok
test ferris::sql::error::recovery::tests::test_dead_letter_queue ... ok
test ferris::sql::error::recovery::tests::test_health_monitor ... ok
test ferris::sql::config::with_clause_parser::tests::test_invalid_configuration_key ... ok
test ferris::sql::error::recovery::tests::test_retry_policy_success ... ok
test ferris::sql::config::yaml_loader::tests::test_simple_config_loading ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_hash_table_operations ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_join_strategy_selection ... ok
test ferris::sql::execution::algorithms::hash_join::tests::test_memory_estimation ... ok
test ferris::sql::execution::performance::metrics::tests::test_atomic_collector ... ok
test ferris::sql::execution::performance::metrics::tests::test_memory_metrics ... ok
test ferris::sql::execution::performance::metrics::tests::test_percentile_calculation ... ok
test ferris::sql::execution::performance::metrics::tests::test_processor_metrics ... ok
test ferris::sql::execution::performance::metrics::tests::test_throughput_calculation ... ok
test ferris::sql::execution::performance::monitor::tests::test_health_check ... ok
test ferris::sql::config::yaml_loader::tests::test_circular_dependency_detection ... ok
test ferris::sql::config::yaml_loader::tests::test_extends_inheritance ... ok
test ferris::sql::error::recovery::tests::test_retry_policy_exhaustion ... ok
test ferris::sql::execution::performance::monitor::tests::test_performance_monitor_basic ... ok
test ferris::sql::execution::performance::monitor::tests::test_prometheus_export ... ok
test ferris::sql::execution::performance::monitor::tests::test_monitored_execution_trait ... ok
test ferris::sql::execution::performance::query_performance::tests::test_efficiency_check ... ok
test ferris::sql::execution::performance::query_performance::tests::test_processor_breakdown ... ok
test ferris::sql::execution::performance::query_performance::tests::test_query_performance_creation ... ok
test ferris::sql::execution::performance::query_performance::tests::test_throughput_calculations ... ok
test ferris::sql::execution::performance::monitor::tests::test_statistics_summary ... ok
test ferris::sql::execution::performance::monitor::tests::test_performance_report ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_metrics_updates ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_elapsed_time_tracking ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_finish_tracking ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_query_tracker_creation ... ok
test ferris::sql::execution::performance::statistics::tests::test_percentile_calculation ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_processor_tracking ... ok
test ferris::sql::execution::performance::query_tracker::tests::test_multiple_processors ... ok
test ferris::sql::execution::performance::monitor::tests::test_query_pattern_tracking ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_pattern_stats ... ok
test ferris::sql::execution::performance::statistics::tests::test_prometheus_export ... ok
test ferris::sql::execution::performance::statistics::tests::test_statistics_collector ... ok
test ferris::sql::execution::processors::job::tests::test_job_processor_creation ... ok
test ferris::sql::execution::processors::job::tests::test_start_job_operation ... ok
test ferris::sql::execution::processors::job::tests::test_stop_job_operation ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_pattern_extraction ... ok
test ferris::sql::execution::performance::statistics::tests::test_query_statistics_basic ... ok
test ferris::sql::execution::performance::monitor::tests::test_window_statistics ... ok
test ferris::schema::client::cache::tests::test_cache_ttl_expiry ... ok
test ferris::sql::execution::performance::statistics::tests::test_window_statistics ... ok
test ferris::datasource::file::watcher::tests::test_detect_file_changes ... ok
test ferris::kafka::kafka_producer::tests::test_producer_builder ... ok
test ferris::kafka::kafka_consumer::tests::test_consumer_builder ... ok
test ferris::kafka::kafka_consumer::tests::test_consumable_trait ... ok
test ferris::schema::client::unified_client::tests::test_in_memory_backend ... ok
test ferris::schema::client::unified_client::tests::test_cache_integration ... ok

test result: ok. 121 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 1.09s

     Running unittests src/bin/file_processing_demo.rs (target/debug/deps/file_processing_demo-5fa88e8e0a0bec41)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests tests/debug/simple_conversion_test.rs (target/debug/deps/simple_conversion_test-b0cc0704f0c6740c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/sql_batch.rs (target/debug/deps/sql_batch-86a6ff57222d23d9)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/sql_validator.rs (target/debug/deps/sql_validator-6deea93301feb815)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/sql_validator_demo.rs (target/debug/deps/sql_validator_demo-18f3b1ceca0a8989)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_avro_codec.rs (target/debug/deps/test_avro_codec-7f0dbcf85168839a)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_batch_config_no_override.rs (target/debug/deps/test_batch_config_no_override-ac4c19810a7cea7c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_batch_with_clause.rs (target/debug/deps/test_batch_with_clause-87f4c47bc632b07e)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_between_operator.rs (target/debug/deps/test_between_operator-5d91da12dbe2bf2d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_compression_independence.rs (target/debug/deps/test_compression_independence-39c7ce9e841f006c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_concat_operator.rs (target/debug/deps/test_concat_operator-abb643dddee52f97)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_config_file_support.rs (target/debug/deps/test_config_file_support-25d81af4a0f9a887)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_config_system.rs (target/debug/deps/test_config_system-72f61cb7defbb6ac)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_create_stream_into.rs (target/debug/deps/test_create_stream_into-31d331f2e9fdf09c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_error_recovery.rs (target/debug/deps/test_error_recovery-c7aa7576b227135b)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_failure_strategy_config.rs (target/debug/deps/test_failure_strategy_config-e107a7e0cac8303d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_file_batch_config_no_override.rs (target/debug/deps/test_file_batch_config_no_override-1800cf98e19f6b82)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_file_batch_optimization.rs (target/debug/deps/test_file_batch_optimization-c7081f38287df49f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_filesystem_schema_registry.rs (target/debug/deps/test_filesystem_schema_registry-877420aef42db2c0)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests tests/debug/test_final_performance.rs (target/debug/deps/test_final_performance-d44fa89dab47eba9)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_financial_precision.rs (target/debug/deps/test_financial_precision-22eb91556486d5a0)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_heterogeneous_sources.rs (target/debug/deps/test_heterogeneous_sources-eac96ceef1b18448)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_kafka_consumer_config_logging.rs (target/debug/deps/test_kafka_consumer_config_logging-2ffaa4e006b5fdb8)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_kafka_writer_batch_config.rs (target/debug/deps/test_kafka_writer_batch_config-672b51933121db8f)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_protobuf_codec.rs (target/debug/deps/test_protobuf_codec-b35e34ac320ea04d)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_schema_management.rs (target/debug/deps/test_schema_management-9af24e0299ec74d8)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_schema_registry_integration.rs (target/debug/deps/test_schema_registry_integration-9eab398883bdaf86)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_serialization_compatibility.rs (target/debug/deps/test_serialization_compatibility-5879e2509379855c)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_simple_failure_strategy.rs (target/debug/deps/test_simple_failure_strategy-44bcbce4981f4659)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_sql_validator_demo.rs (target/debug/deps/test_sql_validator_demo-b134bf9f93dc63b3)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests tests/debug/test_streamrecord_performance.rs (target/debug/deps/test_streamrecord_performance-f9ada48d2863db44)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_union_operator.rs (target/debug/deps/test_union_operator-d9b951320e1a17a4)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running unittests src/bin/test_writer_batch_configuration.rs (target/debug/deps/test_writer_batch_configuration-84d1ebccf01a1986)

running 0 tests

test result: ok. 0 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/avro_decimal_roundtrip_test.rs (target/debug/deps/avro_decimal_roundtrip_test-f86234fe93d2ccb6)

running 3 tests
test avro_decimal_tests::test_pnl_decimal_roundtrip ... ok
test avro_decimal_tests::test_price_decimal_roundtrip ... ok
test avro_decimal_tests::test_mixed_precision_scales ... ok

test result: ok. 3 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 0.00s

     Running tests/ferris_sql_multi_test.rs (target/debug/deps/ferris_sql_multi_test-40db6a15a5436ab7)

running 21 tests
test test_error_recovery_and_shutdown ... ok
test test_integration_test_suite_completeness ... ok
test test_ferris_sql_multi_binary_builds ... ok
test test_binary_dependencies ... ok
test test_deploy_app_missing_file ... ok
test test_complete_deployment_workflow ... ok
test test_cli_help_output ... ok
test test_configuration_validation ... ok
test test_cli_invalid_arguments ... ok
test test_concurrent_help_requests ... ok
test test_deploy_app_subcommand_args ... ok
test test_deploy_app_with_valid_sql_file ... ok
test test_logging_output ... ok
test test_max_jobs_validation ... ok
test test_startup_performance ... ok
test test_sql_parser_error_handling ... ok
test test_memory_usage ... ok
test test_server_subcommand_args ... ok
test test_metrics_endpoints_structure ... ok
test test_version_information ... ok
test test_end_to_end_smoke_test ... ok

test result: ok. 21 passed; 0 failed; 0 ignored; 0 measured; 0 filtered out; finished in 38.97s

     Running tests/mod.rs (target/debug/deps/mod-14672ac4d7b9b3b5)

running 1212 tests
test integration::builder_pattern_test::builder_unit_tests::test_consumer_builder_creation ... ok
test integration::builder_pattern_test::builder_unit_tests::test_producer_builder_creation ... ok
test integration::builder_pattern_test::builder_unit_tests::test_producer_config_with_builder ... ok
test integration::builder_pattern_test::test_producer_builder_with_configuration ... ok
test integration::builder_pattern_test::test_producer_builder_with_config_object ... ok
test integration::builder_pattern_test::test_builder_configuration_override ... ok
test integration::builder_pattern_test::test_producer_builder_with_custom_context ... ok
test integration::builder_pattern_test::test_consumer_builder_with_custom_context ... ok
test integration::builder_pattern_test::test_producer_builder_preset_override ... ok
test integration::execution_engine_test::test_complex_expression ... ok
test integration::execution_engine_test::test_null_handling ... ok
test integration::execution_engine_test::test_limit_functionality ... ok
test integration::execution_engine_test::test_arithmetic_functions ... ok
test integration::execution_engine_test::test_end_to_end_integration ... ok
test integration::execution_engine_test::test_error_handling ... ok
test integration::failure_recovery_test::test_consumer_graceful_degradation ... ignored
test integration::execution_engine_test::test_select_with_where_clause ... ok
test integration::execution_engine_test::test_simple_select_query ... ok
test integration::execution_engine_test::test_string_functions ... ok
test integration::failure_recovery_test::test_retry_with_exponential_backoff ... ignored
test integration::execution_engine_test::test_streaming_behavior ... ok
test integration::execution_engine_test::test_trading_arbitrage_query ... ok
test integration::builder_pattern_test::test_consumer_builder_basic ... ok
test integration::builder_pattern_test::test_producer_builder_method_chaining ... ok
test integration::builder_pattern_test::test_producer_builder_with_presets ... ok
test integration::builder_pattern_test::test_consumer_builder_with_presets ... ok
test integration::builder_pattern_test::test_producer_builder_basic ... ok
test integration::builder_pattern_test::test_end_to_end_builder_workflow ... ok
test integration::failure_recovery_test::test_graceful_shutdown_recovery ... ok
test integration::kafka_basic_test::test_consumer_stream ... ok
test integration::kafka_basic_test::test_different_message_types ... ok
test integration::kafka_advanced_test::test_cross_topic_messaging ... ok
test integration::kafka_basic_test::test_error_handling ... ok
test integration::kafka_basic_test::test_basic_producer_consumer ... ok
test integration::kafka_basic_test::test_fluent_consumer_style ... ok
test integration::kafka_basic_test::test_builder_pattern ... ok
test integration::kafka_basic_test::test_fluent_api_patterns ... ok
test integration::failure_recovery_test::test_partial_broker_failure_scenarios ... ok
test integration::kafka_basic_test::test_message_with_timestamp ... ok
test integration::ktable_test::test_ktable_basic_creation ... ok
test integration::kafka_basic_test::test_convenience_trait ... ok
test integration::ktable_test::test_ktable_configuration_options ... ok
test integration::ktable_test::test_ktable_clone_behavior ... ok
test integration::ktable_test::test_ktable_error_handling ... ok
test integration::ktable_test::test_ktable_from_consumer ... ok
test integration::ktable_test::test_ktable_multiple_types ... ok
test integration::ktable_test::test_ktable_stats_and_metadata ... ok
test integration::ktable_test::test_ktable_transformations ... ok
test integration::ktable_test::test_ktable_wait_for_keys ... ok
test integration::ktable_test::test_ktable_with_producer_simulation ... ok
test integration::sql_integration_test::tests::test_complex_expression_integration ... ok
test integration::sql_integration_test::tests::test_data_type_validation_integration ... ok
test integration::sql_integration_test::tests::test_end_to_end_simple_query ... ok
test integration::sql_integration_test::tests::test_end_to_end_windowed_aggregation ... ok
test integration::sql_integration_test::tests::test_error_propagation_integration ... ok
test integration::sql_integration_test::tests::test_multiple_aggregations_integration ... ok
test integration::sql_integration_test::tests::test_multiple_stream_registration_and_queries ... ok
test integration::sql_integration_test::tests::test_schema_validation_integration ... ok
test integration::sql_integration_test::tests::test_session_window_integration ... ok
test integration::sql_integration_test::tests::test_sliding_window_integration ... ok
test integration::sql_integration_test::tests::test_stream_lifecycle_integration ... ok
test integration::timeout_config_test::test_timeout_configuration_debug ... ok
test integration::ktable_test::test_ktable_lifecycle_management ... ok
test integration::kafka_basic_test::test_headers_functionality ... ok
test integration::transactions_test::test_exactly_once_semantics ... FAILED
test integration::kafka_basic_test::test_implicit_deserialization ... ok
test integration::kafka_basic_test::test_serialization_roundtrip ... ok
test integration::failure_recovery_test::test_network_partition_recovery_with_retry_logic has been running for over 60 seconds
test integration::kafka_advanced_test::test_complex_enum_serialization has been running for over 60 seconds
test integration::kafka_advanced_test::test_concurrent_producers has been running for over 60 seconds
test integration::kafka_advanced_test::test_high_throughput_scenario has been running for over 60 seconds
test integration::kafka_advanced_test::test_multiple_user_workflow has been running for over 60 seconds
test integration::transactions_test::test_exactly_once_consumer_producer_coordination ... FAILED
test integration::failure_recovery_test::test_network_partition_recovery_with_retry_logic ... ok
test integration::kafka_basic_test::test_multiple_messages has been running for over 60 seconds
test integration::kafka_basic_test::test_multiple_messages ... ok
test performance::ferris_sql_multi_benchmarks::benchmark_batch_size_impact ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_complex_aggregation ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_financial_precision_impact ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_memory_efficiency ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_processor_comparison ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_simple_select_baseline ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::benchmark_window_functions ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::ferris_sql_multi_benchmarks::run_comprehensive_benchmark_suite ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::financial_precision_benchmark::integration_tests::test_aggregation_accuracy_real_world ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_f64_aggregation ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_financial_calculation_patterns ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_precision_comparison ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_rust_decimal_aggregation ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_scaled_i128_aggregation ... ok
test performance::financial_precision_benchmark::performance_benchmarks::benchmark_scaled_i64_aggregation ... ok
test performance::financial_precision_benchmark::precision_tests::test_f64_precision_loss_demonstration ... ok
test performance::financial_precision_benchmark::precision_tests::test_rust_decimal_precision ... ok
test performance::financial_precision_benchmark::precision_tests::test_scaled_i64_precision ... ok
test performance::kafka_performance_tests::performance_documentation_links_available ... ok
test performance::kafka_performance_tests::test_performance_config_bounds ... ok
test performance::kafka_performance_tests::test_performance_preset_configurations ... ok
test performance::kafka_performance_tests::test_performance_preset_distinctiveness ... ok
test performance::kafka_performance_tests::test_performance_preset_method_chaining ... ok
test performance::kafka_performance_tests::test_producer_config_memory_footprint ... ok
test performance::query_performance_tests::test_complex_query_construction_performance ... ok
test performance::query_performance_tests::test_query_having_clause_access_patterns ... ok
test performance::query_performance_tests::test_query_parsing_memory_efficiency ... ok
test performance::query_performance_tests::test_query_vector_storage_efficiency ... ok
test performance::query_performance_tests::test_query_where_clause_access_patterns ... ok
test performance::query_performance_tests::test_streaming_query_enum_size ... ok
test performance::serialization_performance_tests::test_field_value_memory_footprint ... ok
test performance::serialization_performance_tests::test_json_deserialization_memory_efficiency ... ok
test performance::serialization_performance_tests::test_json_serialization_memory_efficiency ... ok
test performance::serialization_performance_tests::test_large_payload_serialization_performance ... ok
test performance::serialization_performance_tests::test_mixed_type_serialization_performance ... ok
test performance::serialization_performance_tests::test_null_value_serialization_efficiency ... ok
test performance::serialization_performance_tests::test_serialization_format_consistency ... ok
test performance::transactional_processor_benchmarks::benchmark_comprehensive_processor_comparison ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::transactional_processor_benchmarks::benchmark_exactly_once_semantics_overhead ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::transactional_processor_benchmarks::benchmark_simple_vs_transactional_large_batch ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::transactional_processor_benchmarks::benchmark_simple_vs_transactional_small_batch ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test performance::transactional_processor_benchmarks::benchmark_transaction_failure_recovery ... ignored, performance benchmark - run with 'cargo test --ignored' or in CI/CD
test unit::config::schema_registry_test::test_batch_config_property_validation ... ok
test unit::config::schema_registry_test::test_batch_config_schema_provider_basic ... ok
test unit::config::schema_registry_test::test_config_file_inheritance_valid_chain ... ok
test unit::config::schema_registry_test::test_config_validation_error_structure ... ok
test unit::config::schema_registry_test::test_config_validation_errors ... ok
test unit::config::schema_registry_test::test_config_validation_with_inheritance ... ok
test unit::config::schema_registry_test::test_environment_variable_pattern_creation ... ok
test unit::config::schema_registry_test::test_file_data_source_boolean_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_delimiter_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_environment_based_defaults ... ok
test unit::config::schema_registry_test::test_file_data_source_extension_filter_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_format_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_json_schema_generation ... ok
test unit::config::schema_registry_test::test_file_data_source_numeric_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_path_validation ... ok
test unit::config::schema_registry_test::test_file_data_source_property_inheritance ... ok
test unit::config::schema_registry_test::test_file_data_source_property_validations ... ok
test unit::config::schema_registry_test::test_file_data_source_registry_integration ... ok
test unit::config::schema_registry_test::test_file_data_source_schema_provider_basic ... ok
test unit::config::schema_registry_test::test_file_sink_boolean_validation ... ok
test unit::config::schema_registry_test::test_file_sink_compression_validation ... ok
test unit::config::schema_registry_test::test_file_sink_csv_delimiter_validation ... ok
test unit::config::schema_registry_test::test_file_sink_environment_based_defaults ... ok
test unit::config::schema_registry_test::test_file_sink_format_validation ... ok
test unit::config::schema_registry_test::test_file_sink_json_schema_generation ... ok
test unit::config::schema_registry_test::test_file_sink_numeric_validation ... ok
test unit::config::schema_registry_test::test_file_sink_path_validation ... ok
test unit::config::schema_registry_test::test_file_sink_property_inheritance ... ok
test unit::config::schema_registry_test::test_file_sink_property_validations ... ok
test unit::config::schema_registry_test::test_file_sink_registry_integration ... ok
test unit::config::schema_registry_test::test_file_sink_schema_provider_basic ... ok
test unit::config::schema_registry_test::test_global_context_usage ... ok
test unit::config::schema_registry_test::test_hierarchical_schema_registry_creation ... ok
test unit::config::schema_registry_test::test_json_schema_generation ... ok
test unit::config::schema_registry_test::test_kafka_data_sink_property_validation ... ok
test unit::config::schema_registry_test::test_kafka_data_sink_schema_provider_basic ... ok
test unit::config::schema_registry_test::test_kafka_data_source_property_validation ... ok
test unit::config::schema_registry_test::test_kafka_data_source_schema_provider_basic ... ok
test unit::config::schema_registry_test::test_phase_2_comprehensive_integration ... FAILED
test unit::config::schema_registry_test::test_property_default_variants ... ok
test unit::config::schema_registry_test::test_property_inheritance_resolution ... ok
test unit::config::schema_registry_test::test_property_validations_structure ... ok
test unit::config::schema_registry_test::test_schema_registry_complete_json_schema_generation ... ok
test unit::config::schema_registry_test::test_schema_version_tracking ... ok
test unit::config::schema_registry_test::test_schema_version_validation_compatible ... FAILED
test unit::config::schema_registry_test::test_schema_version_validation_edge_cases ... FAILED
test unit::config::schema_registry_test::test_schema_version_validation_identical ... ok
test unit::config::schema_registry_test::test_schema_version_validation_incompatible ... FAILED
test unit::config::schema_registry_test::test_schema_version_validation_invalid_versions ... ok
test unit::config::schema_registry_test::test_timeout_and_interval_validation_patterns ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_complex_valid_hierarchy ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_direct_circular_dependency ... FAILED
test unit::config::schema_registry_test::test_validate_config_file_inheritance_empty_list ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_indirect_circular_dependency ... FAILED
test unit::config::schema_registry_test::test_validate_config_file_inheritance_integration ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_missing_file_reference ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_no_circular_dependency ... ok
test unit::config::schema_registry_test::test_validate_config_file_inheritance_self_reference ... FAILED
test unit::config::schema_registry_test::test_validate_environment_variables_default_values ... ok
test unit::config::schema_registry_test::test_validate_environment_variables_empty_env_vars ... ok
test unit::config::schema_registry_test::test_validate_environment_variables_empty_patterns ... ok
test unit::config::schema_registry_test::test_validate_environment_variables_integration ... ok
test unit::config::schema_registry_test::test_validate_environment_variables_invalid_template ... ok
test unit::config::schema_registry_test::test_validate_environment_variables_pattern_matching ... FAILED
test unit::config::schema_registry_test::test_validate_environment_variables_valid_patterns ... ok
test unit::datasource::config::batch_strategy_test::test_adaptive_size_edge_cases ... ok
test unit::datasource::config::batch_strategy_test::test_all_strategy_variants_complete_coverage ... ok
test unit::datasource::config::batch_strategy_test::test_batch_config_clone_and_debug ... ok
test unit::datasource::config::batch_strategy_test::test_batch_config_construction ... ok
test unit::datasource::config::batch_strategy_test::test_batch_config_default ... ok
test unit::datasource::config::batch_strategy_test::test_batch_config_edge_cases ... ok
test unit::datasource::config::batch_strategy_test::test_batch_config_serialization ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_adaptive_size ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_clone_and_debug ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_default ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_fixed_size ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_low_latency ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_memory_based ... ok
test unit::datasource::config::batch_strategy_test::test_batch_strategy_time_window ... ok
test unit::datasource::config::batch_strategy_test::test_extreme_values ... ok
test unit::datasource::config::batch_strategy_test::test_low_latency_edge_cases ... ok
test unit::datasource::config::batch_strategy_test::test_memory_based_edge_cases ... ok
test unit::datasource::config::batch_strategy_test::test_serialization_deserialization ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_data_source_defaults ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_data_source_fallback_properties ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_data_source_prefix_priority ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_data_source_property_aliases ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_data_source_with_source_prefix ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_sink_fallback_and_defaults ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_sink_jsonlines_format ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_file_sink_with_sink_prefix ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_sink_fallback_and_defaults ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_sink_with_sink_prefix ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_source_bootstrap_servers_alias ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_source_defaults ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_source_fallback_to_unprefixed ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_source_prefix_priority ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_kafka_data_source_with_source_prefix ... ok
test unit::datasource::properties_prefix_test::properties_prefix_tests::test_mixed_prefix_scenario ... ok
test unit::kafka::config_validation_test::test_consumer_config_boundary_values ... ok
test unit::kafka::config_validation_test::test_custom_property_validation ... ok
test unit::kafka::config_validation_test::test_invalid_broker_configuration ... ok
test unit::kafka::config_validation_test::test_performance_tuning_edge_cases ... ok
test unit::kafka::config_validation_test::test_timeout_boundary_values ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_avro_from_sql ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_avro_key_serialization ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_avro_value_serialization ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_error_handling ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_fluent_api ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_from_sql_config_basic ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_from_sql_config_complex ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_from_sql_config_invalid ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_method_chaining ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_protobuf_serialization ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_realistic_scenarios ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_serialization_config ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_builder_with_formats ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_different_key_value_types ... ok
test unit::kafka::configurable_consumer_test::configurable_consumer_tests::test_configurable_consumer_format_accessors ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_avro_from_sql ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_avro_key_serialization ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_avro_value_serialization ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_creation ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_error_handling ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_fluent_api ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_from_sql_config_basic ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_from_sql_config_complex ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_from_sql_config_invalid ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_method_chaining ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_protobuf_serialization ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_realistic_scenarios ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_serialization_config ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_with_all_serialization_formats ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_builder_with_formats ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_different_key_value_types ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_format_accessors ... ok
test unit::kafka::configurable_producer_test::configurable_producer_tests::test_configurable_producer_performance_presets_simulation ... ok
test unit::kafka::error_context_test::test_comprehensive_error_source_chain_preservation ... ok
test unit::kafka::error_context_test::test_correlation_id_tracking ... ok
test unit::kafka::error_context_test::test_error_aggregation ... ok
test unit::kafka::error_context_test::test_error_metrics_collection ... ok
test unit::kafka::error_context_test::test_error_severity_categorization ... ok
test unit::kafka::error_context_test::test_operational_error_metadata_tracking ... ok
test unit::kafka::error_context_test::test_retry_mechanism_with_error_context ... ok
test unit::kafka::error_handling_test::error_handling_unit_tests::test_error_chain ... ok
test unit::kafka::error_handling_test::error_handling_unit_tests::test_kafka_client_error_conversion ... ok
test unit::kafka::error_handling_test::error_handling_unit_tests::test_serialization_error_display ... ok
test unit::kafka::error_handling_test::test_consumer_deserialization_error ... ok
test unit::kafka::error_handling_test::test_consumer_invalid_topic_subscription ... ok
test integration::kafka_basic_test::test_performance_comparison has been running for over 60 seconds
test unit::kafka::error_handling_test::test_consumer_poll_timeout ... ok
test unit::kafka::error_handling_test::test_producer_flush_timeout ... ok
test unit::kafka::error_handling_test::test_producer_invalid_broker ... ok
test unit::kafka::error_handling_test::test_producer_key_serialization_error ... ok
test unit::kafka::error_handling_test::test_producer_send_timeout ... ok
test unit::kafka::error_handling_test::test_producer_serialization_error ... ok
test unit::kafka::headers_edge_cases_test::test_headers_capacity_and_performance ... ok
test unit::kafka::headers_edge_cases_test::test_headers_case_sensitivity ... ok
test unit::kafka::headers_edge_cases_test::test_headers_edge_case_keys ... ok
test unit::kafka::headers_edge_cases_test::test_headers_null_values ... ok
test unit::kafka::headers_edge_cases_test::test_headers_overwrite_behavior ... ok
test unit::kafka::headers_edge_cases_test::test_headers_size_limits ... ok
test unit::kafka::headers_edge_cases_test::test_headers_special_characters ... ok
test unit::kafka::headers_edge_cases_test::test_headers_with_binary_data ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_batch_write_logic ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_error_handling_scenarios ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_extract_key_with_integer_field ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_extract_key_with_scaled_integer ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_extract_key_with_string_field ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_financial_precision_serialization ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_header_conversion ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_json_serialization_format ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_metadata_fields_inclusion ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_serialization_format_enum ... ok
test unit::kafka::kafka_data_writer_test::kafka_data_writer_tests::test_supports_transactions ... ok
test unit::kafka::message_metadata_test::test_message_key_value_edge_cases ... ok
test unit::kafka::message_metadata_test::test_message_metadata_consistency ... ok
test unit::kafka::message_metadata_test::test_message_partition_offset_validation ... ok
test unit::kafka::message_metadata_test::test_message_timestamp_timezone_handling ... ok
test unit::kafka::message_metadata_test::test_timestamp_edge_cases ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_avro_parameters ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_complex_sql_scenario ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_edge_cases ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_empty ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_from_sql_params_alternative_keys ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_from_sql_params_basic ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_validation_avro_missing_registry ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_validation_avro_missing_subject ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_config_validation_valid ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_json_serializer_creation ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_validate_format_avro_invalid ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_validate_format_avro_valid ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_validate_format_json ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_validate_format_protobuf_invalid ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_factory_validate_format_protobuf_valid ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_format_display ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_format_equality ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_format_parsing_all_variants ... ok
test unit::kafka::serialization_format_test::serialization_format_tests::test_serialization_format_parsing_invalid ... ok
test unit::kafka::serialization_test::avro_tests::test_avro_serializer ... ok
test unit::kafka::serialization_test::protobuf_tests::test_proto_serializer ... ok
test unit::kafka::serialization_test::test_json_serializer_basic ... ok
test unit::kafka::serialization_test::test_json_serializer_different_types ... ok
test unit::kafka::serialization_test::test_json_serializer_error_cases ... ok
test unit::kafka::serialization_test::test_json_serializer_nested_structs ... ok
test unit::kafka::serialization_test::test_json_serializer_optional_fields ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_avro_bytes_decimal_detection ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_avro_fixed_decimal_detection ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_avro_scaled_integer_round_trip ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_avro_string_to_scaled_integer ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_complex_structures_with_scaled_integer ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_edge_cases ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_non_decimal_strings_preserved ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_performance_characteristics ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_scaled_integer_to_avro_string ... ok
test unit::serialization::avro_scaled_integer_test::avro_tests::test_schema_aware_decimal_encoding ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_codec_basic ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_complex_types ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_comprehensive_type_matrix ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_convenience_functions ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_default_format ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_direct_creation ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_empty_record ... ignored
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_error_handling ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_format_creation ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_format_creation_with_invalid_schema ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_from_execution_format ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_large_data ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_large_numbers ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_null_handling ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_schema_evolution ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_serialization_round_trip ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_to_execution_format ... ok
test unit::serialization::avro_serialization_tests::avro_tests::test_avro_unicode_strings ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_avro_codec_comprehensive_round_trip ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_codec_error_handling ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_cross_codec_compatibility ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_empty_and_null_handling ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_financial_precision_edge_cases ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_json_helpers_financial_precision ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_performance_considerations ... ok
test unit::serialization::codec_integration_tests::codec_integration_tests::test_protobuf_codec_comprehensive_round_trip ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_avro_error_with_source_chain ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_backward_compatibility_with_json_serialization_failed ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_encoding_error_with_source_chain ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_error_chain_traversal_deep ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_json_error_with_source_chain ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_legacy_variants_still_work ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_protobuf_error_with_source_chain ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_schema_validation_error_with_source ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_schema_validation_error_without_source ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_type_conversion_error_with_detailed_info ... ok
test unit::serialization::enhanced_error_test::enhanced_error_tests::test_type_conversion_error_without_source ... ok
test unit::serialization::json_serialization_tests::test_json_comprehensive_type_matrix ... ok
test unit::serialization::json_serialization_tests::test_json_empty_record ... ok
test unit::serialization::json_serialization_tests::test_json_error_handling ... ok
test unit::serialization::json_serialization_tests::test_json_format_name ... ok
test unit::serialization::json_serialization_tests::test_json_from_execution_format ... ok
test unit::serialization::json_serialization_tests::test_json_large_data ... ok
test unit::serialization::json_serialization_tests::test_json_large_numbers ... ok
test unit::serialization::json_serialization_tests::test_json_nested_structures ... ok
test unit::serialization::json_serialization_tests::test_json_null_handling ... ok
test unit::serialization::json_serialization_tests::test_json_serialization_round_trip ... ok
test unit::serialization::json_serialization_tests::test_json_to_execution_format ... ok
test unit::serialization::json_serialization_tests::test_json_unicode_strings ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_complex_nested_structures ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_complex_types ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_comprehensive_type_matrix ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_direct_creation ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_empty_record ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_error_handling ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_format_creation ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_from_execution_format ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_large_data ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_large_numbers ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_null_handling ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_schema_evolution ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_serialization_round_trip ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_to_execution_format ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_type_specific_creation ... ok
test unit::serialization::protobuf_serialization_tests::protobuf_tests::test_protobuf_unicode_strings ... ok
test unit::sql::concat_operator_test::test_concat_operator_precedence ... ok
test unit::sql::concat_operator_test::test_evaluate_boolean_concatenation ... ok
test unit::sql::concat_operator_test::test_evaluate_chained_concatenation ... ok
test unit::sql::concat_operator_test::test_evaluate_float_concatenation ... ok
test unit::sql::concat_operator_test::test_evaluate_mixed_type_concatenation ... ok
test unit::sql::concat_operator_test::test_evaluate_null_concatenation ... ok
test unit::sql::concat_operator_test::test_evaluate_string_concatenation ... ok
test unit::sql::concat_operator_test::test_non_string_concatenation ... ok
test unit::sql::concat_operator_test::test_parse_concat_operator ... ok
test unit::sql::concat_operator_test::test_scaled_integer_concatenation ... ok
test unit::sql::concat_operator_test::test_unix_timestamp_concatenation_example ... ok
test unit::sql::config::builder_test::test_basic_builder ... ok
test unit::sql::config::builder_test::test_build_unchecked ... ok
test unit::sql::config::builder_test::test_file_builder ... ok
test unit::sql::config::builder_test::test_from_uri ... ok
test unit::sql::config::builder_test::test_kafka_builder ... ok
test unit::sql::config::builder_test::test_s3_builder ... ok
test unit::sql::config::builder_test::test_templates ... ok
test unit::sql::config::builder_test::test_validation_failure ... ok
test unit::sql::config::connection_string_test::test_config_conversion ... ok
test unit::sql::config::connection_string_test::test_error_cases ... ok
test unit::sql::config::connection_string_test::test_file_uri_parsing ... ok
test unit::sql::config::connection_string_test::test_kafka_uri_parsing ... ok
test unit::sql::config::connection_string_test::test_multi_host_kafka ... ok
test unit::sql::config::connection_string_test::test_postgresql_with_credentials ... ok
test unit::sql::config::connection_string_test::test_s3_uri_parsing ... ok
test unit::sql::config::connection_string_test::test_uri_reconstruction ... ok
test unit::sql::config::connection_string_test::test_validation ... ok
test unit::sql::config::data_source_config_test::test_basic_config_creation ... ok
test unit::sql::config::data_source_config_test::test_parameter_operations ... ok
test unit::sql::config::data_source_config_test::test_uri_generation ... ok
test unit::sql::config::data_source_config_test::test_validation_stats ... ok
test unit::sql::config::environment_test::test_basic_environment_config ... ok
test unit::sql::config::environment_test::test_config_value_setting ... ok
test unit::sql::config::environment_test::test_global_key_detection ... ok
test unit::sql::config::environment_test::test_path_expansion ... ok
test unit::sql::config::environment_test::test_scheme_detection ... ok
test unit::sql::config::environment_test::test_template_expansion ... ok
test unit::sql::config::validation_test::test_kafka_validation ... ok
test unit::sql::config::validation_test::test_kafka_validation_missing_host ... ok
test unit::sql::config::validation_test::test_s3_validation ... ok
test unit::sql::config::validation_test::test_s3_validation_invalid_bucket ... ok
test unit::sql::config::validation_test::test_unknown_scheme_validation ... ok
test unit::sql::config::validation_test::test_validation_registry ... ok
test unit::sql::config::yaml_loader_test::test_array_replacement_not_merge ... ok
test unit::sql::config::yaml_loader_test::test_circular_dependency_detection ... ok
test unit::sql::config::yaml_loader_test::test_config_cache ... ok
test unit::sql::config::yaml_loader_test::test_extends_inheritance ... ok
test unit::sql::config::yaml_loader_test::test_extends_path_resolution ... ok
test unit::sql::config::yaml_loader_test::test_file_not_found_error ... ok
test unit::sql::config::yaml_loader_test::test_invalid_yaml_error ... ok
test unit::sql::config::yaml_loader_test::test_multi_level_inheritance ... ok
test unit::sql::config::yaml_loader_test::test_simple_config_loading ... ok
test unit::sql::config::yaml_loader_test::test_trading_system_config_structure ... ok
test unit::sql::context_test::tests::test_aliased_columns ... ok
test unit::sql::context_test::tests::test_context_creation ... ok
test unit::sql::context_test::tests::test_duplicate_stream_registration ... ok
test unit::sql::context_test::tests::test_multiple_stream_registration ... ok
test unit::sql::context_test::tests::test_nullable_vs_required_fields ... ok
test unit::sql::context_test::tests::test_query_with_invalid_column ... ok
test unit::sql::context_test::tests::test_query_with_nonexistent_stream ... ok
test unit::sql::context_test::tests::test_query_with_valid_columns ... ok
test unit::sql::context_test::tests::test_schema_field_types ... ok
test unit::sql::context_test::tests::test_schema_retrieval ... ok
test unit::sql::context_test::tests::test_schema_validation_with_json ... ok
test unit::sql::context_test::tests::test_stream_field_names ... ok
test unit::sql::context_test::tests::test_stream_registration ... ok
test unit::sql::context_test::tests::test_unregister_nonexistent_stream ... ok
test unit::sql::context_test::tests::test_unregister_stream ... ok
test unit::sql::context_test::tests::test_valid_query_execution ... ok
test unit::sql::context_test::tests::test_windowed_query ... ok
test unit::sql::execution::aggregation::accumulator_test::test_extract_aggregate_expressions ... ok
test unit::sql::execution::aggregation::accumulator_test::test_field_value_to_string ... ok
test unit::sql::execution::aggregation::accumulator_test::test_generate_field_name ... ok
test unit::sql::execution::aggregation::accumulator_test::test_is_aggregate_expression ... ok
test unit::sql::execution::aggregation::accumulator_test::test_process_record_basic_count ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_avg ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_count_column ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_count_distinct ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_count_star ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_first_last ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_min_max ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_stddev_variance ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_string_agg ... ok
test unit::sql::execution::aggregation::functions_test::test_compute_sum ... ok
test unit::sql::execution::aggregation::functions_test::test_is_aggregate_function ... ok
test unit::sql::execution::aggregation::functions_test::test_supported_functions ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_aggregate_functions_with_null_values ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_count_distinct_aggregate ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_first_last_aggregates ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_execution ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_parsing ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_with_boolean_conditions ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_with_having ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_with_null_grouping_values ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_group_by_with_window ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_having_parsing ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_mixed_aggregate_functions ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_multiple_aggregations ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_multiple_group_by_columns ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_null_handling_in_complex_grouping ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_order_by_desc ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_order_by_parsing ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_query_without_group_by ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_stddev_aggregate ... ok
test unit::sql::execution::aggregation::group_by_test::tests::test_string_agg_aggregate ... ok
test integration::transactions_test::test_exactly_once_stream_with_error_handling has been running for over 60 seconds
test integration::transactions_test::test_exactly_once_with_consumer_stream has been running for over 60 seconds
test unit::sql::execution::aggregation::group_by_test::tests::test_variance_aggregate ... ok
test unit::sql::execution::aggregation::state_test::test_extract_group_keys ... ok
test unit::sql::execution::aggregation::state_test::test_field_value_to_group_key ... ok
test unit::sql::execution::aggregation::state_test::test_generate_group_key_simple ... ok
test unit::sql::execution::aggregation::state_test::test_record_matches_group_key ... ok
test unit::sql::execution::core::basic_execution_test::test_engine_creation ... ok
test unit::sql::execution::core::basic_execution_test::test_execute_simple_select ... ok
test unit::sql::execution::core::basic_execution_test::test_execute_specific_columns ... ok
test unit::sql::execution::core::basic_execution_test::test_execute_with_literals ... ok
test unit::sql::execution::core::basic_execution_test::test_missing_column_returns_null ... ok
test unit::sql::execution::core::basic_execution_test::test_multiple_records_processing ... ok
test unit::sql::execution::core::basic_execution_test::test_null_value_handling ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_case_insensitive_keywords ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_complex_data_types ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_context_validation ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_execution ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_into_execution ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_parsing_simple ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_parsing_with_columns ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_with_into_and_columns ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_with_into_and_config ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_with_into_and_window ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_with_into_parsing ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_csas_with_window ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_execution ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_into_execution ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_parsing_simple ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_with_explicit_schema ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_with_into_and_multi_config ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_ctas_with_into_parsing ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_data_type_parsing ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_datasource_style_error_handling ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_error_handling ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_mixed_syntax_compatibility ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_nested_queries ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_nullable_columns ... ok
test unit::sql::execution::core::csas_ctas_test::tests::test_query_introspection ... ok
test unit::sql::execution::core::error_handling_test::test_arithmetic_error_handling ... ok
test unit::sql::execution::core::subquery_test::test_complex_subquery_in_select ... ok
test unit::sql::execution::core::subquery_test::test_exists_subquery ... ok
test unit::sql::execution::core::subquery_test::test_in_subquery_with_positive_value ... ok
test unit::sql::execution::core::subquery_test::test_nested_subqueries ... ok
test unit::sql::execution::core::subquery_test::test_not_exists_subquery ... ok
test unit::sql::execution::core::subquery_test::test_not_in_subquery ... ok
test unit::sql::execution::core::subquery_test::test_parser_subquery_integration ... ok
test unit::sql::execution::core::subquery_test::test_scalar_subquery_parsing ... ok
test unit::sql::execution::core::subquery_test::test_subquery_error_handling ... ok
test unit::sql::execution::core::subquery_test::test_subquery_types_comprehensive ... ok
test unit::sql::execution::core::subquery_test::test_subquery_with_boolean_field ... ok
test unit::sql::execution::core::subquery_test::test_subquery_with_multiple_conditions ... ok
test unit::sql::execution::core::subquery_test::test_subquery_with_string_field ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_in_operator_basic ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_in_operator_edge_cases ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_in_operator_with_null_values ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_like_operator ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_like_operator_edge_cases ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_not_in_operator_basic ... ok
test unit::sql::execution::expression::arithmetic::operator_test::test_not_like_operator ... ok
test unit::sql::execution::expression::expression_evaluation_test::test_arithmetic_expressions ... ok
test unit::sql::execution::expression::expression_evaluation_test::test_boolean_expressions ... ok
test unit::sql::execution::expression::expression_evaluation_test::test_complex_expression_evaluation ... ok
test unit::sql::execution::processors::dml::delete_test::test_create_soft_delete_record ... ok
test unit::sql::execution::processors::dml::delete_test::test_create_tombstone_record ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_validation_empty_table ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_validation_valid ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_with_complex_where ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_with_in_condition ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_with_not_condition ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_with_where_match ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_with_where_no_match ... ok
test unit::sql::execution::processors::dml::delete_test::test_delete_without_where ... ok
test unit::sql::execution::processors::dml::delete_test::test_extract_tombstone_metadata ... ok
test unit::sql::execution::processors::dml::delete_test::test_get_referenced_columns ... ok
test unit::sql::execution::processors::dml::delete_test::test_is_tombstone_record ... ok
test unit::sql::execution::processors::dml::delete_test::test_matches_where_clause ... ok
test unit::sql::execution::processors::dml::delete_test::test_tombstone_multiple_key_preservation ... ok
test unit::sql::execution::processors::dml::insert_test::test_get_insert_columns_explicit ... ok
test unit::sql::execution::processors::dml::insert_test::test_get_insert_columns_inferred ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_column_count_mismatch ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_performance_many_rows ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_select ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_validation_empty_table ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_validation_empty_values ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_validation_inconsistent_rows ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_values_multiple_rows ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_values_no_explicit_columns ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_values_single_row ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_with_expressions ... ok
test unit::sql::execution::processors::dml::insert_test::test_insert_with_null_values ... ok
test unit::sql::execution::processors::dml::update_test::test_apply_assignments ... ok
test unit::sql::execution::processors::dml::update_test::test_create_update_metadata ... ok
test unit::sql::execution::processors::dml::update_test::test_get_affected_columns ... ok
test unit::sql::execution::processors::dml::update_test::test_matches_where_clause ... ok
test unit::sql::execution::processors::dml::update_test::test_update_create_new_field ... ok
test unit::sql::execution::processors::dml::update_test::test_update_performance_many_assignments ... ok
test unit::sql::execution::processors::dml::update_test::test_update_validation_empty_assignments ... ok
test unit::sql::execution::processors::dml::update_test::test_update_validation_empty_column ... ok
test unit::sql::execution::processors::dml::update_test::test_update_validation_empty_table ... ok
test unit::sql::execution::processors::dml::update_test::test_update_with_complex_where ... ok
test unit::sql::execution::processors::dml::update_test::test_update_with_expression_assignment ... ok
test unit::sql::execution::processors::dml::update_test::test_update_with_null_assignment ... ok
test unit::sql::execution::processors::dml::update_test::test_update_with_where_match ... ok
test unit::sql::execution::processors::dml::update_test::test_update_with_where_no_match ... ok
test unit::sql::execution::processors::dml::update_test::test_update_without_where ... ok
test unit::sql::execution::processors::join::join_test::test_basic_inner_join ... ok
test unit::sql::execution::processors::join::join_test::test_full_outer_join ... ok
test unit::sql::execution::processors::join::join_test::test_join_execution_logic ... ok
test unit::sql::execution::processors::join::join_test::test_join_field_access ... ok
test unit::sql::execution::processors::join::join_test::test_join_parsing_validation ... ok
test unit::sql::execution::processors::join::join_test::test_join_with_alias ... ok
test unit::sql::execution::processors::join::join_test::test_join_with_complex_condition ... ok
test unit::sql::execution::processors::join::join_test::test_join_with_specific_fields ... ok
test unit::sql::execution::processors::join::join_test::test_join_with_where_clause ... ok
test unit::sql::execution::processors::join::join_test::test_left_join_short_syntax ... ok
test unit::sql::execution::processors::join::join_test::test_left_outer_join ... ok
test unit::sql::execution::processors::join::join_test::test_multiple_joins ... ok
test unit::sql::execution::processors::join::join_test::test_right_join_short_syntax ... ok
test unit::sql::execution::processors::join::join_test::test_right_outer_join ... ok
test unit::sql::execution::processors::join::join_test::test_stream_table_join_syntax ... ok
test unit::sql::execution::processors::join::join_test::test_windowed_join ... ok
test unit::sql::execution::processors::join::join_test::test_windowed_join_hours ... ok
test unit::sql::execution::processors::join::join_test::test_windowed_join_seconds ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_complex_left_join_with_subqueries ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_full_outer_join_with_correlated_subquery ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_join_with_exists_in_on_condition ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_join_with_in_subquery_in_on_condition ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_join_with_nested_subqueries ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_join_with_subquery_as_right_side ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_join_with_windowed_subquery ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_malformed_subquery_join_error_handling ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_multiple_joins_with_subqueries ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_right_join_with_not_exists_in_on_condition ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_self_join_with_subquery ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_subquery_join_implementation_roadmap ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_subquery_join_performance_consideration ... ok
test unit::sql::execution::processors::join::subquery_join_test::test_temporal_join_with_subquery ... ok
test unit::sql::execution::processors::join::subquery_on_condition_test::test_basic_join_on_condition ... ok
test unit::sql::execution::processors::join::subquery_on_condition_test::test_join_with_exists_on_condition ... ok
test unit::sql::execution::processors::join::subquery_on_condition_test::test_join_with_in_subquery_on_condition ... ok
test unit::sql::execution::processors::join::subquery_on_condition_test::test_where_clause_with_exists ... ok
test unit::sql::execution::processors::join::subquery_on_condition_test::test_where_clause_with_subquery ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_execution_basic ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_parsing ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_parsing_errors ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_parsing_values ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_with_csas ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_with_headers ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_with_system_columns ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_with_where_clause ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_limit_zero ... ok
test unit::sql::execution::processors::limit::limit_test::tests::test_query_without_limit ... ok
test unit::sql::execution::processors::show::show_test::test_describe_resource ... ok
test unit::sql::execution::processors::show::show_test::test_pattern_matching_edge_cases ... ok
test unit::sql::execution::processors::show::show_test::test_show_functions ... ok
test unit::sql::execution::processors::show::show_test::test_show_job_status ... ok
test unit::sql::execution::processors::show::show_test::test_show_jobs ... ok
test unit::sql::execution::processors::show::show_test::test_show_partitions ... ok
test unit::sql::execution::processors::show::show_test::test_show_properties_not_found ... ok
test unit::sql::execution::processors::show::show_test::test_show_properties_stream ... ok
test unit::sql::execution::processors::show::show_test::test_show_schema ... ok
test unit::sql::execution::processors::show::show_test::test_show_schema_not_found ... ok
test unit::sql::execution::processors::show::show_test::test_show_streams ... ok
test unit::sql::execution::processors::show::show_test::test_show_streams_empty_context ... ok
test unit::sql::execution::processors::show::show_test::test_show_streams_with_pattern ... ok
test unit::sql::execution::processors::show::show_test::test_show_tables ... ok
test unit::sql::execution::processors::show::show_test::test_show_topics ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_complex_aggregation_state ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_data_corrections ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_high_cardinality ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_memory_management ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_overlapping_windows ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_session_merging ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_watermark_retractions ... ok
test unit::sql::execution::processors::window::emit_changes_advanced_test::test_emit_changes_with_window_functions ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_basic_emit_changes_count ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_extreme_values ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_late_data ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_multiple_aggregations ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_no_groupby ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_null_handling ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_rapid_updates ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_sliding_window ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_sum ... ok
test unit::sql::execution::processors::window::emit_changes_basic_test::test_emit_changes_tumbling_window ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_continuous_aggregation_late_data ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_correctness_verification ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_duplicate_timestamps ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_late_data_behavior_summary ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_session_window_late_data_merging ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_tumbling_window_late_data_corrections ... ok
test unit::sql::execution::processors::window::emit_changes_late_data_semantics_test::test_emit_changes_watermark_behavior ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_basic_emit_changes ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_error_scenarios ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_extreme_values ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_high_frequency ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_mixed_data_types ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_null_edge_cases ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_rapid_updates ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_with_late_data ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_with_session_window ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_with_sliding_window ... ok
test unit::sql::execution::processors::window::emit_changes_test::test_emit_changes_with_tumbling_window ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_15_minute_moving_average ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_1_hour_moving_average ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_4_hour_moving_average ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_comprehensive_trading_dashboard ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_outlier_detection_price_spikes ... ok
test unit::sql::execution::processors::window::financial_ticker_analytics_test::financial_ticker_analytics_tests::test_volume_outlier_detection ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_complex_analytical_queries ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_comprehensive_trading_analytics ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_financial_outlier_detection ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_moving_averages_multiple_timeframes ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_multi_symbol_concurrent_processing ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_session_windows_all_scenarios ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_sliding_windows_all_intervals ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_tumbling_business_scenarios ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_tumbling_business_scenarios_non_emit ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_tumbling_windows_all_aggregations ... ok
test unit::sql::execution::processors::window::unified_window_test::unified_window_tests::test_window_edge_cases ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_advance_equal_to_window_size ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_advance_larger_than_window_size ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_division_by_zero_scenarios ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_duplicate_timestamps_out_of_order ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_extreme_large_values ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_extreme_small_values ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_far_future_timestamp ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_high_frequency_records ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_late_arriving_data ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_late_data_beyond_window_grace_period ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_mixed_early_and_late_data ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_negative_timestamp ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_no_records ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_null_aggregation_fields ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_null_partition_keys ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_same_exact_timestamp ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_session_window_late_data_merging ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_severely_out_of_order_data ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_single_record ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_sliding_window_with_chaotic_arrival_order ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_special_float_values ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_very_large_session_gap ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_very_large_window_size ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_very_small_window_size ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_watermark_simulation_with_late_data ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_zero_gap_session_window ... ok
test unit::sql::execution::processors::window::window_edge_cases_test::window_edge_cases_tests::test_zero_timestamp ... ok
test unit::sql::execution::processors::window::window_processing_test::test_empty_window ... ok
test unit::sql::execution::processors::window::window_processing_test::test_session_window ... ok
test unit::sql::execution::processors::window::window_processing_test::test_sliding_window ... ok
test unit::sql::execution::processors::window::window_processing_test::test_tumbling_window_avg ... ok
test unit::sql::execution::processors::window::window_processing_test::test_tumbling_window_count ... ok
test unit::sql::execution::processors::window::window_processing_test::test_tumbling_window_min_max ... ok
test unit::sql::execution::processors::window::window_processing_test::test_tumbling_window_sum ... ok
test unit::sql::execution::processors::window::window_processing_test::test_window_boundary_alignment ... ok
test unit::sql::execution::processors::window::window_processing_test::test_window_with_having_clause ... ok
test unit::sql::execution::processors::window::window_processing_test::test_window_with_where_clause ... ok
test unit::sql::execution::processors::window::windowing_test::test_aggregation_functions ... ok
test unit::sql::execution::processors::window::windowing_test::test_session_window_execution ... ok
test unit::sql::execution::processors::window::windowing_test::test_sliding_window_execution ... ok
test unit::sql::execution::processors::window::windowing_test::test_windowed_execution_tumbling ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_all_comparison_operators ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_complex_structures_with_scaled_integer ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_edge_cases ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_financial_precision_scenarios ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_coercion_with_decimal ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_coercion_with_numeric_types ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_different_scales_comparisons ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_equality ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_equality_with_coercion ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_numeric_comparisons ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_with_decimal_comparisons ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_with_float_comparisons ... ok
test unit::sql::execution::utils::field_value_comparator_test::test_scaled_integer_with_integer_comparisons ... ok
test unit::sql::functions::advanced_functions_test::tests::test_advanced_aggregation_functions ... ok
test unit::sql::functions::advanced_functions_test::tests::test_case_insensitive_function_names ... ok
test unit::sql::functions::advanced_functions_test::tests::test_cast_function ... ok
test unit::sql::functions::advanced_functions_test::tests::test_complex_query_with_multiple_functions ... ok
test unit::sql::functions::advanced_functions_test::tests::test_deployment_with_advanced_functions ... ok
test unit::sql::functions::advanced_functions_test::tests::test_describe_command ... ok
test unit::sql::functions::advanced_functions_test::tests::test_function_error_cases ... ok
test unit::sql::functions::advanced_functions_test::tests::test_join_function ... ok
test unit::sql::functions::advanced_functions_test::tests::test_nested_function_calls ... ok
test unit::sql::functions::advanced_functions_test::tests::test_show_enhanced_commands ... ok
test unit::sql::functions::advanced_functions_test::tests::test_show_jobs_compatibility ... ok
test unit::sql::functions::advanced_functions_test::tests::test_split_function ... ok
test unit::sql::functions::advanced_functions_test::tests::test_timestamp_function ... ok
test unit::sql::functions::cast_functions_test::test_cast_datetime_alias ... ok
test unit::sql::functions::cast_functions_test::test_cast_decimal_to_other_types ... ok
test unit::sql::functions::cast_functions_test::test_cast_display_string_format ... ok
test unit::sql::functions::cast_functions_test::test_cast_error_cases ... ok
test unit::sql::functions::cast_functions_test::test_cast_null_values ... ok
test unit::sql::functions::cast_functions_test::test_cast_numeric_alias ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_date_from_string ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_date_from_timestamp ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_decimal_from_various_types ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_timestamp_from_date ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_timestamp_from_integer ... ok
test unit::sql::functions::cast_functions_test::test_cast_to_timestamp_from_string ... ok
test unit::sql::functions::cast_functions_test::test_date_boundary_values ... ok
test unit::sql::functions::cast_functions_test::test_large_decimal_values ... ok
test unit::sql::functions::cast_functions_test::test_timestamp_precision ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_approx_count_distinct_hyperloglog ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_count_distinct_empty_sets ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_count_distinct_exact_counting ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_count_distinct_null_handling ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_count_distinct_vs_approx_count_distinct_accuracy ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_count_distinct_with_different_field_types ... ok
test unit::sql::functions::count_distinct_comprehensive_test::test_hyperloglog_performance_vs_exact ... ok
test unit::sql::functions::count_distinct_functions_test::test_approx_count_distinct_function_registration ... ok
test unit::sql::functions::count_distinct_functions_test::test_approx_count_distinct_null_handling ... ok
test unit::sql::functions::count_distinct_functions_test::test_both_functions_produce_same_result ... ok
test unit::sql::functions::count_distinct_functions_test::test_count_distinct_function_registration ... ok
test unit::sql::functions::count_distinct_functions_test::test_count_distinct_null_handling ... ok
test unit::sql::functions::count_distinct_functions_test::test_function_argument_validation ... ok
test unit::sql::functions::date_functions_test::test_datediff_all_new_units_in_single_query ... ok
test unit::sql::functions::date_functions_test::test_datediff_error_cases ... ok
test unit::sql::functions::date_functions_test::test_datediff_month_precision ... ok
test unit::sql::functions::date_functions_test::test_datediff_months ... ok
test unit::sql::functions::date_functions_test::test_datediff_quarters ... ok
test unit::sql::functions::date_functions_test::test_datediff_weeks ... ok
test unit::sql::functions::date_functions_test::test_datediff_years ... ok
test unit::sql::functions::date_functions_test::test_edge_case_same_timestamps ... ok
test unit::sql::functions::date_functions_test::test_edge_case_timestamps ... ok
test unit::sql::functions::date_functions_test::test_extract_all_new_units_in_single_query ... ok
test unit::sql::functions::date_functions_test::test_extract_epoch ... ok
test unit::sql::functions::date_functions_test::test_extract_error_cases ... ok
test unit::sql::functions::date_functions_test::test_extract_microsecond ... ok
test unit::sql::functions::date_functions_test::test_extract_millisecond ... ok
test unit::sql::functions::date_functions_test::test_extract_nanosecond ... ok
test unit::sql::functions::date_functions_test::test_extract_quarter ... ok
test unit::sql::functions::date_functions_test::test_extract_week ... ok
test unit::sql::functions::date_functions_test::test_from_unixtime_basic ... ignored, Test hanging - needs investigation
test unit::sql::functions::date_functions_test::test_from_unixtime_float ... ignored, Test hanging - needs investigation
test unit::sql::functions::date_functions_test::test_from_unixtime_invalid_type ... ok
test unit::sql::functions::date_functions_test::test_from_unixtime_null_handling ... ok
test unit::sql::functions::date_functions_test::test_from_unixtime_wrong_arg_count ... ok
test unit::sql::functions::date_functions_test::test_multiple_timestamp_functions_in_query ... ignored, Test hanging - needs investigation
test unit::sql::functions::date_functions_test::test_negative_time_differences ... ok
test unit::sql::functions::date_functions_test::test_practical_usage_example ... ok
test unit::sql::functions::date_functions_test::test_roundtrip_conversion ... ok
test unit::sql::functions::date_functions_test::test_unix_timestamp_invalid_type ... ok
test unit::sql::functions::date_functions_test::test_unix_timestamp_no_args ... ok
test unit::sql::functions::date_functions_test::test_unix_timestamp_null_handling ... ok
test unit::sql::functions::date_functions_test::test_unix_timestamp_with_datetime ... ignored, Test hanging - needs investigation
test unit::sql::functions::date_functions_test::test_unix_timestamp_wrong_arg_count ... ok
test unit::sql::functions::header_functions_test::test_header_functions_in_complex_expression ... ok
test unit::sql::functions::header_functions_test::test_header_functions_with_sql_functions ... ok
test unit::sql::functions::header_functions_test::test_multiple_header_operations ... ok
test unit::sql::functions::header_functions_test::test_remove_header_existing ... ok
test unit::sql::functions::header_functions_test::test_remove_header_nonexistent ... ok
test unit::sql::functions::header_functions_test::test_remove_header_wrong_argument_count ... ok
test unit::sql::functions::header_functions_test::test_set_header_basic ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_boolean ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_field_value ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_float ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_integer ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_non_string_key ... ok
test unit::sql::functions::header_functions_test::test_set_header_with_null ... ok
test unit::sql::functions::header_functions_test::test_set_header_wrong_argument_count ... ok
test unit::sql::functions::interval_test::test_interval_arithmetic_subtraction ... ok
test unit::sql::functions::interval_test::test_interval_arithmetic_with_timestamps ... ok
test unit::sql::functions::interval_test::test_interval_conversion_accuracy ... ok
test unit::sql::functions::interval_test::test_interval_edge_cases ... ok
test unit::sql::functions::interval_test::test_interval_error_cases ... ok
test unit::sql::functions::interval_test::test_interval_in_where_clause ... ok
test unit::sql::functions::interval_test::test_interval_literal_parsing ... ok
test unit::sql::functions::interval_test::test_interval_with_computed_expressions ... ok
test unit::sql::functions::interval_test::test_interval_with_null_values ... ok
test unit::sql::functions::interval_test::test_interval_with_system_columns ... ok
test unit::sql::functions::interval_test::test_multiple_interval_operations ... ok
test unit::sql::functions::math_functions_test::test_abs_function ... ok
test unit::sql::functions::math_functions_test::test_ceil_floor_functions ... ok
test unit::sql::functions::math_functions_test::test_math_function_error_cases ... ok
test unit::sql::functions::math_functions_test::test_math_function_null_handling ... ok
test unit::sql::functions::math_functions_test::test_mod_function ... ok
test unit::sql::functions::math_functions_test::test_power_function ... ok
test unit::sql::functions::math_functions_test::test_round_function ... ok
test unit::sql::functions::math_functions_test::test_sqrt_function ... ok
test unit::sql::functions::new_functions_test::test_abs_function_extended ... ok
test unit::sql::functions::new_functions_test::test_complex_expressions ... ok
test unit::sql::functions::new_functions_test::test_comprehensive_new_functions_integration ... ok
test unit::sql::functions::new_functions_test::test_date_time_functions ... ok
test unit::sql::functions::new_functions_test::test_datediff_error_cases ... ok
test unit::sql::functions::new_functions_test::test_datediff_function ... ok
test unit::sql::functions::new_functions_test::test_error_handling ... ok
test unit::sql::functions::new_functions_test::test_having_clause_execution ... ok
test unit::sql::functions::new_functions_test::test_listagg_error_cases ... ok
test unit::sql::functions::new_functions_test::test_listagg_function ... ok
test unit::sql::functions::new_functions_test::test_math_functions ... ok
test unit::sql::functions::new_functions_test::test_multiple_statistical_functions ... ok
test unit::sql::functions::new_functions_test::test_new_comparison_functions ... ok
test unit::sql::functions::new_functions_test::test_null_handling ... ok
test unit::sql::functions::new_functions_test::test_position_error_cases ... ok
test unit::sql::functions::new_functions_test::test_position_function ... ok
test unit::sql::functions::new_functions_test::test_statistical_functions ... ok
test unit::sql::functions::new_functions_test::test_statistical_functions_error_handling ... ok
test unit::sql::functions::new_functions_test::test_statistical_functions_with_expressions ... ok
test unit::sql::functions::new_functions_test::test_string_functions ... ok
test unit::sql::functions::new_functions_test::test_type_conversions ... ok
test unit::sql::functions::new_functions_test::test_utility_functions ... ok
test unit::sql::functions::statistical_functions_test::test_median_function ... ok
test unit::sql::functions::statistical_functions_test::test_multiple_statistical_functions_in_single_query ... ok
test unit::sql::functions::statistical_functions_test::test_statistical_function_error_cases ... ok
test unit::sql::functions::statistical_functions_test::test_statistical_function_null_handling ... ok
test unit::sql::functions::statistical_functions_test::test_statistical_functions_with_literal_values ... ok
test unit::sql::functions::statistical_functions_test::test_statistical_functions_with_non_numeric_types ... ok
test unit::sql::functions::statistical_functions_test::test_stddev_functions ... ok
test unit::sql::functions::statistical_functions_test::test_stddev_pop_function ... ok
test unit::sql::functions::statistical_functions_test::test_var_pop_function ... ok
test unit::sql::functions::statistical_functions_test::test_variance_functions ... ok
test unit::sql::functions::string_json_functions_test::tests::test_case_insensitive_string_json_functions ... ok
test unit::sql::functions::string_json_functions_test::tests::test_complex_query_with_string_and_json_functions ... ok
test unit::sql::functions::string_json_functions_test::tests::test_function_argument_errors ... ok
test unit::sql::functions::string_json_functions_test::tests::test_job_deployment_with_json_processing ... ok
test unit::sql::functions::string_json_functions_test::tests::test_json_extract_function ... ok
test unit::sql::functions::string_json_functions_test::tests::test_json_extract_with_array_access ... ok
test unit::sql::functions::string_json_functions_test::tests::test_json_value_function ... ok
test unit::sql::functions::string_json_functions_test::tests::test_kafka_payload_processing_example ... ok
test unit::sql::functions::string_json_functions_test::tests::test_nested_string_json_functions ... ok
test unit::sql::functions::string_json_functions_test::tests::test_substring_function_basic ... ok
test unit::sql::functions::string_json_functions_test::tests::test_substring_function_without_length ... ok
test unit::sql::functions::window_functions_test::test_cume_dist_function ... ok
test unit::sql::functions::window_functions_test::test_dense_rank_function ... ok
test unit::sql::functions::window_functions_test::test_dense_rank_with_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_first_value_function ... ok
test unit::sql::functions::window_functions_test::test_first_value_with_no_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_lag_function_basic ... ok
test unit::sql::functions::window_functions_test::test_lag_function_with_default ... ok
test unit::sql::functions::window_functions_test::test_lag_function_with_offset ... ok
test unit::sql::functions::window_functions_test::test_lag_with_negative_offset_error ... ok
test unit::sql::functions::window_functions_test::test_lag_with_no_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_lag_with_too_many_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_last_value_function ... ok
test unit::sql::functions::window_functions_test::test_lead_function ... ok
test unit::sql::functions::window_functions_test::test_lead_function_with_default ... ok
test unit::sql::functions::window_functions_test::test_lead_with_negative_offset_error ... ok
test unit::sql::functions::window_functions_test::test_lead_with_no_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_multiple_window_functions ... ok
test unit::sql::functions::window_functions_test::test_nth_value_function ... ok
test unit::sql::functions::window_functions_test::test_nth_value_with_invalid_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_ntile_function ... ok
test unit::sql::functions::window_functions_test::test_ntile_quartiles ... ok
test unit::sql::functions::window_functions_test::test_ntile_with_invalid_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_percent_rank_function ... ok
test unit::sql::functions::window_functions_test::test_rank_function ... ok
test unit::sql::functions::window_functions_test::test_rank_with_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_row_number_function ... ok
test unit::sql::functions::window_functions_test::test_row_number_with_arguments_error ... ok
test unit::sql::functions::window_functions_test::test_unsupported_window_function_error ... ok
test unit::sql::lifecycle_test::tests::test_case_insensitive_lifecycle_commands ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_basic ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_complex_underlying_query ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_with_properties ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_with_strategy_blue_green ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_with_strategy_canary ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_with_strategy_replace ... ok
test unit::sql::lifecycle_test::tests::test_deploy_job_with_strategy_rolling ... ok
test unit::sql::lifecycle_test::tests::test_get_columns_for_lifecycle_commands ... ok
test unit::sql::lifecycle_test::tests::test_has_window_for_lifecycle_commands ... ok
test unit::sql::lifecycle_test::tests::test_invalid_canary_percentage ... ok
test unit::sql::lifecycle_test::tests::test_missing_query_keyword_in_pause ... ok
test unit::sql::lifecycle_test::tests::test_missing_version_in_deploy ... ok
test unit::sql::lifecycle_test::tests::test_pause_job_basic ... ok
test unit::sql::lifecycle_test::tests::test_resume_job_basic ... ok
test unit::sql::lifecycle_test::tests::test_rollback_job_basic ... ok
test unit::sql::lifecycle_test::tests::test_rollback_job_with_version ... ok
test unit::sql::parser::basic_parsing_test::tests::test_case_insensitive_keywords ... ok
test unit::sql::parser::basic_parsing_test::tests::test_column_references ... ok
test unit::sql::parser::basic_parsing_test::tests::test_duration_parsing ... ok
test unit::sql::parser::basic_parsing_test::tests::test_invalid_sql ... ok
test unit::sql::parser::basic_parsing_test::tests::test_missing_from_clause ... ok
test unit::sql::parser::basic_parsing_test::tests::test_numeric_literals ... ok
test unit::sql::parser::basic_parsing_test::tests::test_qualified_column_references ... ok
test unit::sql::parser::basic_parsing_test::tests::test_select_specific_columns ... ok
test unit::sql::parser::basic_parsing_test::tests::test_select_with_alias ... ok
test unit::sql::parser::basic_parsing_test::tests::test_session_window ... ok
test unit::sql::parser::basic_parsing_test::tests::test_simple_select_all ... ok
test unit::sql::parser::basic_parsing_test::tests::test_sliding_window ... ok
test unit::sql::parser::basic_parsing_test::tests::test_string_literals ... ok
test unit::sql::parser::basic_parsing_test::tests::test_tumbling_window ... ok
test unit::sql::parser::basic_parsing_test::tests::test_whitespace_handling ... ok
test unit::sql::parser::case_when_test::test_case_when_boolean_results ... ok
test unit::sql::parser::case_when_test::test_case_when_error_handling ... ok
test unit::sql::parser::case_when_test::test_case_when_parsing ... ok
test unit::sql::parser::case_when_test::test_case_when_performance_patterns ... ok
test unit::sql::parser::case_when_test::test_case_when_with_comparison_operators ... ok
test unit::sql::parser::case_when_test::test_case_when_with_expressions ... ok
test unit::sql::parser::case_when_test::test_case_when_with_null_values ... ok
test unit::sql::parser::case_when_test::test_case_when_without_else ... ok
test unit::sql::parser::case_when_test::test_conditional_aggregation_avg ... ok
test unit::sql::parser::case_when_test::test_conditional_aggregation_count ... ok
test unit::sql::parser::case_when_test::test_conditional_aggregation_listagg ... ok
test unit::sql::parser::case_when_test::test_conditional_aggregation_sum ... ok
test unit::sql::parser::case_when_test::test_multiple_conditional_aggregations ... ok
test unit::sql::parser::case_when_test::test_multiple_when_clauses ... ok
test unit::sql::parser::case_when_test::test_nested_case_expressions ... ok
test unit::sql::parser::case_when_test::test_simple_case_when_execution ... ok
test unit::sql::parser::emit_mode_test::test_emit_changes_parsing ... ok
test unit::sql::parser::emit_mode_test::test_emit_final_parsing ... ok
test unit::sql::parser::emit_mode_test::test_emit_final_parsing_without_window ... ok
test unit::sql::parser::emit_mode_test::test_emit_overrides_windowed_mode ... ok
test unit::sql::parser::emit_mode_test::test_invalid_emit_mode_parsing ... ok
test unit::sql::parser::emit_mode_test::test_no_emit_clause ... ok
test unit::sql::parser::implicit_aggregation_test::test_emit_changes_with_window_override ... ok
test unit::sql::parser::implicit_aggregation_test::test_explicit_emit_mode_overrides_default ... ok
test unit::sql::parser::implicit_aggregation_test::test_implicit_continuous_mode_no_window ... ok
test unit::sql::parser::implicit_aggregation_test::test_implicit_windowed_mode_with_window ... ok
test unit::sql::parser::window_frame_test::test_basic_over_clause_parsing ... ok
test unit::sql::parser::window_frame_test::test_common_window_functions ... ok
test unit::sql::parser::window_frame_test::test_complete_over_clause ... ok
test unit::sql::parser::window_frame_test::test_multiple_order_by_columns ... ok
test unit::sql::parser::window_frame_test::test_multiple_partition_columns ... ok
test unit::sql::parser::window_frame_test::test_order_by_desc ... ok
test unit::sql::parser::window_frame_test::test_order_by_parsing ... ok
test unit::sql::parser::window_frame_test::test_partition_by_parsing ... ok
test unit::sql::parser::window_frame_test::test_range_between ... ok
test unit::sql::parser::window_frame_test::test_rows_between_current_and_following ... ok
test unit::sql::parser::window_frame_test::test_rows_between_preceding ... ok
test unit::sql::parser::window_frame_test::test_rows_between_unbounded_following ... ok
test unit::sql::parser::window_frame_test::test_rows_between_unbounded_preceding ... ok
test unit::sql::parser::window_frame_test::test_window_frame_error_cases ... ok
test unit::sql::parser::window_frame_test::test_window_function_with_arguments ... ok
test unit::sql::query_analyzer_explicit_type_test::test_all_supported_compound_sink_types ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_all_supported_compound_source_types ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_error_message_contains_helpful_guidance ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_file_source_compound_type ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_integration_sql_parsing_with_explicit_types ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_invalid_compound_sink_type_error ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_invalid_compound_source_type_error ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_kafka_sink_compound_type ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_kafka_source_compound_type ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_missing_sink_type_declaration_error ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_missing_source_type_declaration_error ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_properties_extraction_with_compound_types ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_s3_source_compound_type ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_explicit_type_test::test_source_sink_role_determination_from_sql_structure ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_analyzer_with_custom_group_id ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_avro_serialization_format_analysis ... ok
test unit::sql::query_analyzer_test::test_create_stream_analysis ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_create_stream_into_analysis ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_empty_query_analysis ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_file_source_inference ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_select_query_analysis ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_select_query_with_table_source ... ignored, QueryAnalyzer property validation disabled
test unit::sql::query_analyzer_test::test_show_query_analysis ... ok
test unit::sql::query_analyzer_test::test_subquery_analysis ... ignored, QueryAnalyzer property validation disabled
test unit::sql::select_statement_matching_test::test_deployment_decision_matrix ... ok
test unit::sql::select_statement_matching_test::test_job_name_generation_logic ... ok
test unit::sql::select_statement_matching_test::test_statement_type_matching_for_deployment ... ok
test unit::sql::select_statement_matching_test::test_topic_generation_logic ... ok
test unit::sql::system::job_management_test::tests::test_case_insensitive_job_management ... ok
test unit::sql::system::job_management_test::tests::test_job_management_get_columns ... ok
test unit::sql::system::job_management_test::tests::test_nested_job_management ... ok
test unit::sql::system::job_management_test::tests::test_query_names_with_various_identifiers ... ok
test unit::sql::system::job_management_test::tests::test_start_job_basic ... ok
test unit::sql::system::job_management_test::tests::test_start_job_complex_select ... ok
test unit::sql::system::job_management_test::tests::test_start_job_create_stream ... ok
test unit::sql::system::job_management_test::tests::test_start_job_invalid_underlying_query ... ok
test unit::sql::system::job_management_test::tests::test_start_job_missing_as ... ok
test unit::sql::system::job_management_test::tests::test_start_job_missing_name ... ok
test unit::sql::system::job_management_test::tests::test_start_job_windowed ... ok
test unit::sql::system::job_management_test::tests::test_start_job_with_properties ... ok
test unit::sql::system::job_management_test::tests::test_stop_job_basic ... ok
test unit::sql::system::job_management_test::tests::test_stop_job_force ... ok
test unit::sql::system::job_management_test::tests::test_stop_job_get_columns ... ok
test unit::sql::system::job_management_test::tests::test_stop_job_missing_name ... ok
test unit::sql::system::show_operations_test::tests::test_case_insensitive_show_commands ... ok
test unit::sql::system::show_operations_test::tests::test_invalid_show_command ... ok
test unit::sql::system::show_operations_test::tests::test_list_streams ... ok
test unit::sql::system::show_operations_test::tests::test_show_functions ... ok
test unit::sql::system::show_operations_test::tests::test_show_partitions ... ok
test unit::sql::system::show_operations_test::tests::test_show_partitions_missing_name ... ok
test unit::sql::system::show_operations_test::tests::test_show_properties ... ok
test unit::sql::system::show_operations_test::tests::test_show_properties_missing_args ... ok
test unit::sql::system::show_operations_test::tests::test_show_queries ... ok
test unit::sql::system::show_operations_test::tests::test_show_schema ... ok
test unit::sql::system::show_operations_test::tests::test_show_schema_missing_name ... ok
test unit::sql::system::show_operations_test::tests::test_show_streams ... ok
test unit::sql::system::show_operations_test::tests::test_show_streams_with_like_pattern ... ok
test unit::sql::system::show_operations_test::tests::test_show_tables ... ok
test unit::sql::system::show_operations_test::tests::test_show_tables_with_like_pattern ... ok
test unit::sql::system::show_operations_test::tests::test_show_topics ... ok
test unit::sql::system::system_columns_test::tests::test_csas_with_system_columns ... ok
test unit::sql::system::system_columns_test::tests::test_mixed_regular_and_system_columns ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_aliasing ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_execution ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_in_expression ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_in_where_clause ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_parsing ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_reserved_names ... ok
test unit::sql::system::system_columns_test::tests::test_system_column_with_aliases ... ok
test unit::sql::system::system_columns_test::tests::test_system_columns_case_insensitive ... ok
test unit::sql::system::system_columns_test::tests::test_wildcard_does_not_include_system_columns ... ok
test unit::sql::types::advanced_types_test::test_advanced_type_operations ... ok
test unit::sql::types::advanced_types_test::test_array_edge_cases ... ok
test unit::sql::types::advanced_types_test::test_array_functions ... ok
test unit::sql::types::advanced_types_test::test_coalesce_with_advanced_types ... ok
test unit::sql::types::advanced_types_test::test_comparison_operations ... ok
test unit::sql::types::advanced_types_test::test_complex_expressions ... ok
test unit::sql::types::advanced_types_test::test_map_functions ... ok
test unit::sql::types::advanced_types_test::test_nested_structures ... ok
test unit::sql::types::advanced_types_test::test_null_handling_advanced_types ... ok
test unit::sql::types::advanced_types_test::test_performance_with_large_structures ... ok
test unit::sql::types::advanced_types_test::test_struct_functions ... ok
test unit::sql::types::advanced_types_test::test_type_errors ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_decimal_casting ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_decimal_datatype_parsing ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_decimal_literal_parsing ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_decimal_type_name ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_financial_conversion ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_financial_precision ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_scale_alignment_in_arithmetic ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_scaled_integer_arithmetic ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_scaled_integer_creation ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_serialization_roundtrip ... ok
test unit::sql::types::decimal_simple_test::decimal_simple_tests::test_zero_handling ... ok
test unit::sql::types::headers_test::tests::test_empty_headers ... ok
test unit::sql::types::headers_test::tests::test_has_header_function ... ok
test unit::sql::types::headers_test::tests::test_header_case_sensitivity ... ok
test unit::sql::types::headers_test::tests::test_header_function_error_handling ... ok
test unit::sql::types::headers_test::tests::test_header_function_execution ... ok
test unit::sql::types::headers_test::tests::test_header_function_execution_errors ... ok
test unit::sql::types::headers_test::tests::test_header_function_missing_key ... ok
test unit::sql::types::headers_test::tests::test_header_function_parsing ... ok
test unit::sql::types::headers_test::tests::test_header_in_where_clause ... ok
test unit::sql::types::headers_test::tests::test_header_keys_function ... ok
test unit::sql::types::headers_test::tests::test_header_with_csas ... ok
test unit::sql::types::headers_test::tests::test_mixed_headers_and_system_columns ... ok
test unit::stream_job::critical_unit_test::test_concurrent_operations ... ok
test unit::stream_job::critical_unit_test::test_deploy_job_success ... ok
test unit::stream_job::critical_unit_test::test_deploy_sql_application ... ok
test unit::stream_job::critical_unit_test::test_duplicate_job_name_rejection ... ok
test unit::stream_job::critical_unit_test::test_duplicate_name_after_stopping ... ok
test unit::stream_job::critical_unit_test::test_get_job_status ... ok
test unit::stream_job::critical_unit_test::test_input_validation_empty_name ... ok
test unit::stream_job::critical_unit_test::test_input_validation_empty_query ... ok
test unit::stream_job::critical_unit_test::test_input_validation_empty_topic ... ok
test unit::stream_job::critical_unit_test::test_input_validation_empty_version ... ok
test unit::stream_job::critical_unit_test::test_job_metrics_initialization ... ok
test unit::stream_job::critical_unit_test::test_job_status_transitions ... ok
test unit::stream_job::critical_unit_test::test_list_jobs_empty ... ok
test unit::stream_job::critical_unit_test::test_list_jobs_multiple ... ok
test unit::stream_job::critical_unit_test::test_max_jobs_limit_after_stopping ... ok
test unit::stream_job::critical_unit_test::test_max_jobs_limit_enforcement ... ok
test unit::stream_job::critical_unit_test::test_multi_job_server_creation ... ok
test unit::stream_job::critical_unit_test::test_stop_job_success ... ok
test unit::stream_job::critical_unit_test::test_stop_nonexistent_job ... ok
test unit::stream_job::stream_job_common_test::test_batch_processing_result_creation ... ok
test unit::stream_job::stream_job_common_test::test_check_transaction_support_logging ... ok
test unit::stream_job::stream_job_common_test::test_concurrent_operations ... ok
test unit::stream_job::stream_job_common_test::test_failure_strategy_variants ... ok
test unit::stream_job::stream_job_common_test::test_job_execution_stats_creation ... ok
test unit::stream_job::stream_job_common_test::test_job_execution_stats_metrics ... ok
test unit::stream_job::stream_job_common_test::test_job_execution_stats_update ... ok
test unit::stream_job::stream_job_common_test::test_job_metrics ... ok
test unit::stream_job::stream_job_common_test::test_job_processing_config_default ... ok
test unit::stream_job::stream_job_common_test::test_log_functions ... ok
test unit::stream_job::stream_job_common_test::test_process_batch_common_success ... ok
test unit::stream_job::stream_job_common_test::test_processing_error_creation ... ok
test unit::stream_job::stream_job_common_test::test_resource_cleanup ... ok
test unit::stream_job::stream_job_common_test::test_retry_with_backoff_max_retries_exceeded ... ok
test unit::stream_job::stream_job_common_test::test_retry_with_backoff_success ... ok
test unit::stream_job::stream_job_future_handler_test_template::test_your_processor_comprehensive_failure_scenarios ... ignored, Template test with unimplemented processor - use as reference for creating new processor tests
test unit::stream_job::stream_job_future_handler_test_template::test_your_processor_edge_cases ... ok
test unit::stream_job::stream_job_future_handler_test_template::test_your_processor_specific_behavior ... ok
test unit::stream_job::stream_job_future_handler_test_template::test_your_processor_vs_other_processors ... ok
test unit::stream_job::stream_job_processors_core_test::test_low_latency_processor ... ok
test unit::stream_job::stream_job_processors_core_test::test_simple_processor_throughput ... ok
test unit::stream_job::stream_job_processors_core_test::test_simple_processor_with_transaction_capable_sources ... ok
test unit::stream_job::stream_job_processors_core_test::test_transactional_processor_mixed_transaction_support ... ok
test integration::transactions_test::test_exactly_once_with_failure_recovery has been running for over 60 seconds
test integration::transactions_test::test_transaction_timeout has been running for over 60 seconds
test integration::transactions_test::test_exactly_once_stream_with_error_handling ... FAILED
test unit::stream_job::stream_job_processors_failure_test::test_conservative_simple_processor_failure_handling ... ok
test unit::stream_job::stream_job_processors_failure_test::test_simple_processor_sink_failure_continues_processing ... ok
test integration::kafka_advanced_test::test_complex_enum_serialization ... ok
test unit::stream_job::stream_job_processors_failure_test::test_transactional_processor_writer_begin_tx_failure ... ok
test unit::stream_job::stream_job_processors_failure_test::test_transactional_processor_writer_commit_tx_failure ... ok
test unit::stream_job::stream_job_processors_failure_test::test_transactional_vs_simple_failure_behavior ... ok
test unit::stream_job::stream_job_server_test::test_job_deployment_with_mock_topics ... ignored
test integration::kafka_basic_test::test_performance_comparison ... ok
test integration::transactions_test::test_transactional_producer_abort ... FAILED
test unit::stream_job::stream_job_server_test::test_sql_parser_extracts_all_jobs ... ok
test unit::stream_job::stream_job_simple_test::test_simple_processor_comprehensive_failure_scenarios ... ignored, comprehensive: Slow test with 40+ second runtime - use cargo test --features comprehensive-tests
test unit::stream_job::stream_job_simple_test::test_simple_processor_transaction_detection ... ok
test unit::stream_job::stream_job_server_test::test_prerequisites ... ok
test unit::stream_job::stream_job_simple_test::test_sink_failure_with_fail_batch_strategy ... ok
test unit::stream_job::stream_job_simple_test::test_sink_failure_with_log_and_continue_strategy ... ok
test unit::stream_job::stream_job_simple_test::test_simple_processor_with_different_failure_strategies ... ok
test unit::stream_job::stream_job_test::test_datasource_config_creation ... ok
test unit::stream_job::stream_job_test::test_default_values_extraction ... ok
test unit::stream_job::stream_job_test::test_file_datasource_config ... ok
test unit::stream_job::stream_job_test::test_job_execution_stats ... ok
test unit::stream_job::stream_job_test::test_job_execution_stats_no_start_time ... ok
test unit::stream_job::stream_job_simple_test::test_sink_failure_with_retry_with_backoff_strategy ... ok
test unit::stream_job::stream_job_test::test_job_execution_stats_tracking ... ok
test unit::stream_job::stream_job_test::test_kafka_datasource_creation_mock ... ok
test unit::stream_job::stream_job_test::test_process_datasource_with_shutdown ... ok
test unit::stream_job::stream_job_test::test_unsupported_datasource_type ... ok
test unit::stream_job::stream_job_test::test_job_execution_stats_rps ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_comprehensive_failure_scenarios ... ignored, comprehensive: Slow test with 40+ second runtime - use cargo test --features comprehensive-tests
test unit::stream_job::stream_job_processors_core_test::test_transactional_processor_success ... ok
test integration::transactions_test::test_transactional_producer_commit has been running for over 60 seconds
test integration::kafka_advanced_test::test_multiple_user_workflow ... ok
test integration::kafka_advanced_test::test_concurrent_producers ... ok
test integration::kafka_advanced_test::test_high_throughput_scenario ... ok
test unit::stream_job::stream_job_processors_failure_test::test_transactional_processor_sink_failure ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_with_non_transactional_datasources ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_commit_ordering ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_rollback_behavior ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_sink_commit_failure ... ok
test unit::stream_job::stream_job_server_test::test_multi_job_server_deploy_all_jobs ... ok
test unit::stream_job::stream_job_transactional_test::test_transactional_processor_vs_simple_processor_behavior ... ok
test integration::transactions_test::test_exactly_once_with_consumer_stream ... ok
test integration::transactions_test::test_exactly_once_with_failure_recovery ... FAILED
test integration::transactions_test::test_transaction_timeout ... FAILED
test integration::transactions_test::test_transactional_producer_commit ... ok

failures:

---- integration::transactions_test::test_exactly_once_semantics stdout ----

thread 'integration::transactions_test::test_exactly_once_semantics' panicked at tests/integration/transactions_test.rs:219:10:
Failed to create producer 1: KafkaError (Client creation error: `message.timeout.ms` must be set <= `transaction.timeout.ms`)
note: run with `RUST_BACKTRACE=1` environment variable to display a backtrace

---- integration::transactions_test::test_exactly_once_consumer_producer_coordination stdout ----

thread 'integration::transactions_test::test_exactly_once_consumer_producer_coordination' panicked at tests/integration/transactions_test.rs:497:22:
Failed to begin transaction: KafkaError(KafkaError (Transaction error: Timed out waiting for operation to finish, retry call to resume))

---- unit::config::schema_registry_test::test_phase_2_comprehensive_integration stdout ----

thread 'unit::config::schema_registry_test::test_phase_2_comprehensive_integration' panicked at tests/unit/config/schema_registry_test.rs:1965:5:
assertion failed: is_schema_version_compatible("2.0.0", "2.1.0")

---- unit::config::schema_registry_test::test_schema_version_validation_compatible stdout ----

thread 'unit::config::schema_registry_test::test_schema_version_validation_compatible' panicked at tests/unit/config/schema_registry_test.rs:1811:5:
assertion failed: is_schema_version_compatible("1.0.0", "1.1.0")

---- unit::config::schema_registry_test::test_schema_version_validation_edge_cases stdout ----

thread 'unit::config::schema_registry_test::test_schema_version_validation_edge_cases' panicked at tests/unit/config/schema_registry_test.rs:1843:5:
assertion failed: is_schema_version_compatible("1.0.0", "1.1.0")

---- unit::config::schema_registry_test::test_schema_version_validation_incompatible stdout ----

thread 'unit::config::schema_registry_test::test_schema_version_validation_incompatible' panicked at tests/unit/config/schema_registry_test.rs:1828:5:
assertion failed: !is_schema_version_compatible("1.5.0", "1.3.0")

---- unit::config::schema_registry_test::test_validate_config_file_inheritance_direct_circular_dependency stdout ----

thread 'unit::config::schema_registry_test::test_validate_config_file_inheritance_direct_circular_dependency' panicked at tests/unit/config/schema_registry_test.rs:1511:5:
assertion failed: errors[0].message.contains("circular dependency")

---- unit::config::schema_registry_test::test_validate_config_file_inheritance_indirect_circular_dependency stdout ----

thread 'unit::config::schema_registry_test::test_validate_config_file_inheritance_indirect_circular_dependency' panicked at tests/unit/config/schema_registry_test.rs:1541:5:
assertion failed: errors[0].message.contains("circular dependency")

---- unit::config::schema_registry_test::test_validate_config_file_inheritance_self_reference stdout ----

thread 'unit::config::schema_registry_test::test_validate_config_file_inheritance_self_reference' panicked at tests/unit/config/schema_registry_test.rs:1560:5:
assertion failed: errors[0].message.contains("circular dependency")

---- unit::config::schema_registry_test::test_validate_environment_variables_pattern_matching stdout ----

thread 'unit::config::schema_registry_test::test_validate_environment_variables_pattern_matching' panicked at src/ferris/config/schema_registry.rs:976:50:
begin <= end (7 <= 6) when slicing `PREFIX_SUFFIX`

---- integration::transactions_test::test_exactly_once_stream_with_error_handling stdout ----

thread 'integration::transactions_test::test_exactly_once_stream_with_error_handling' panicked at tests/integration/transactions_test.rs:1079:22:
Failed to begin transaction: KafkaError(KafkaError (Transaction error: Timed out waiting for operation to finish, retry call to resume))

---- integration::transactions_test::test_transactional_producer_abort stdout ----

thread 'integration::transactions_test::test_transactional_producer_abort' panicked at tests/integration/transactions_test.rs:128:6:
Failed to create transactional producer: KafkaError (Client creation error: `message.timeout.ms` must be set <= `transaction.timeout.ms`)

---- integration::transactions_test::test_exactly_once_with_failure_recovery stdout ----

thread 'integration::transactions_test::test_exactly_once_with_failure_recovery' panicked at tests/integration/transactions_test.rs:653:6:
Failed to create transactional producer: KafkaError (Client creation error: `message.timeout.ms` must be set <= `transaction.timeout.ms`)

---- integration::transactions_test::test_transaction_timeout stdout ----

thread 'integration::transactions_test::test_transaction_timeout' panicked at tests/integration/transactions_test.rs:356:6:
Failed to create transactional producer: KafkaError (Client creation error: `message.timeout.ms` must be set <= `transaction.timeout.ms`)


failures:
    integration::transactions_test::test_exactly_once_consumer_producer_coordination
    integration::transactions_test::test_exactly_once_semantics
    integration::transactions_test::test_exactly_once_stream_with_error_handling
    integration::transactions_test::test_exactly_once_with_failure_recovery
    integration::transactions_test::test_transaction_timeout
    integration::transactions_test::test_transactional_producer_abort
    unit::config::schema_registry_test::test_phase_2_comprehensive_integration
    unit::config::schema_registry_test::test_schema_version_validation_compatible
    unit::config::schema_registry_test::test_schema_version_validation_edge_cases
    unit::config::schema_registry_test::test_schema_version_validation_incompatible
    unit::config::schema_registry_test::test_validate_config_file_inheritance_direct_circular_dependency
    unit::config::schema_registry_test::test_validate_config_file_inheritance_indirect_circular_dependency
    unit::config::schema_registry_test::test_validate_config_file_inheritance_self_reference
    unit::config::schema_registry_test::test_validate_environment_variables_pattern_matching

test result: FAILED. 1152 passed; 14 failed; 46 ignored; 0 measured; 0 filtered out; finished in 216.09s

error: test failed, to rerun pass `--test mod`
