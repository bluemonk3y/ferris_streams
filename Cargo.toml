[package]
name = "ferrisstreams"
version = "0.1.0"
edition = "2021"
rust-version = "1.70.0"
license = "Apache-2.0"
authors = ["FerrisStreams Contributors"]
description = "High-performance stream processing engine with SQL support"
repository = "https://github.com/bluemonk3y/ferris_streams"
keywords = ["streaming", "sql", "kafka", "data-processing", "real-time"]
categories = ["database-implementations", "asynchronous", "data-structures"]

[dependencies]
pretty_env_logger = "0.5.0"
log = "0.4.27"
env_logger = "0.11.8"
rdkafka = "0.38.0"
tokio = { version = "1.47.0", features = ["full"] }
chrono = { version = "0.4.41", features = ["serde"] }
uuid = { version = "1.17.0", features = ["v4"] }
logtest = "2.0.0"
futures = "0.3"
serde = { version = "1.0.219", features = ["derive"] }
serde_json = "1.0"
serde_yaml = "0.9"
thiserror = "1.0.69"
nom = "7.1.3"
clap = { version = "4.0", features = ["derive"] }
rand = "0.8.5"
reqwest = { version = "0.11", features = ["json"] }
rust_decimal = { version = "1.36.0", features = ["serde"] }
regex = "1.5"
async-trait = "0.1"
lazy_static = "1.4"

# Optional dependencies for additional serialization formats
apache-avro = { version = "0.20.0", optional = true }
prost = { version = "0.14.1", optional = true }
bincode = { version = "1.3.3", optional = true }
base64 = "0.21"

[build-dependencies]
prost-build = { version = "0.14.1", optional = true }

[dev-dependencies]
serial_test = "2.0.0"
crossbeam-queue = "0.3"
tokio-stream = "0.1"
criterion = { version = "0.5", features = ["html_reports"] }
tempfile = "3.12.0"
futures = "0.3"

[features]
default = ["json", "protobuf", "avro"]
json = []
avro = ["apache-avro"]
protobuf = ["prost", "prost-build"]

# Performance examples - organized in subfolder
[[example]]
name = "json_performance_test"
path = "examples/performance/json_performance_test.rs"

[[example]]
name = "raw_bytes_performance_test"
path = "examples/performance/raw_bytes_performance_test.rs"

[[example]]
name = "latency_performance_test"
path = "examples/performance/latency_performance_test.rs"

[[example]]
name = "simple_zero_copy_test"
path = "examples/performance/simple_zero_copy_test.rs"

[[example]]
name = "simple_async_optimization_test"
path = "examples/performance/simple_async_optimization_test.rs"

[[example]]
name = "resource_monitoring_test"
path = "examples/performance/resource_monitoring_test.rs"

[[example]]
name = "datasource_performance_test"
path = "examples/performance/datasource_performance_test.rs"

[[example]]
name = "quick_performance_test"
path = "examples/performance/quick_performance_test.rs"

# SQL Server Binary
[[bin]]
name = "ferris-sql"
path = "src/bin/sql_server.rs"

# Multi-Job SQL Server Binary
[[bin]]
name = "ferris-sql-multi"
path = "src/bin/ferris-sql-multi.rs"

# FerrisStreams CLI Binary
[[bin]]
name = "ferris-cli"
path = "src/bin/ferris_cli.rs"

# File Processing Demo Binary
[[bin]]
name = "file_processing_demo"
path = "src/bin/file_processing_demo.rs"

# Complete Pipeline Demo Binary
[[bin]]
name = "complete_pipeline_demo"
path = "demo/datasource-demo/complete_pipeline_demo.rs"

# SQL Batch Execution Binary
[[bin]]
name = "sql-batch"
path = "src/bin/sql_batch.rs"

# Debug Avro Schema Parsing
[[bin]]
name = "debug_avro_schema_parsing"
path = "tests/debug/debug_avro_schema_parsing.rs"

# Test Avro Decimal Direct
[[bin]]
name = "test_avro_decimal_direct"
path = "tests/debug/test_avro_decimal_direct.rs"

# Test Bytes Schema 
[[bin]]
name = "test_bytes_schema"
path = "tests/debug/test_bytes_schema.rs"

# Debug Encoding Test
[[bin]]
name = "debug_encoding_test"
path = "tests/debug/debug_encoding_test.rs"

# Test Standard Decimal Logical Type
[[bin]]
name = "test_standard_decimal_logical_type"
path = "tests/debug/test_standard_decimal_logical_type.rs"
